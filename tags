!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A	./libmdadm/sha1.h	/^  sha1_uint32 A;$/;"	m	struct:sha1_ctx	access:public
ADD_NEW_DISK	./libmdadm/md_u.h	30;"	d
ALGORITHM_LEFT_ASYMMETRIC	./libmdadm/mdadm.h	1452;"	d
ALGORITHM_LEFT_ASYMMETRIC_6	./libmdadm/mdadm.h	1484;"	d
ALGORITHM_LEFT_SYMMETRIC	./libmdadm/mdadm.h	1454;"	d
ALGORITHM_LEFT_SYMMETRIC_6	./libmdadm/mdadm.h	1486;"	d
ALGORITHM_PARITY_0	./libmdadm/mdadm.h	1460;"	d
ALGORITHM_PARITY_0_6	./libmdadm/mdadm.h	1488;"	d
ALGORITHM_PARITY_N	./libmdadm/mdadm.h	1461;"	d
ALGORITHM_PARITY_N_6	./libmdadm/mdadm.h	1489;"	d
ALGORITHM_RIGHT_ASYMMETRIC	./libmdadm/mdadm.h	1453;"	d
ALGORITHM_RIGHT_ASYMMETRIC_6	./libmdadm/mdadm.h	1485;"	d
ALGORITHM_RIGHT_SYMMETRIC	./libmdadm/mdadm.h	1455;"	d
ALGORITHM_RIGHT_SYMMETRIC_6	./libmdadm/mdadm.h	1487;"	d
ALGORITHM_ROTATING_N_CONTINUE	./libmdadm/mdadm.h	1477;"	d
ALGORITHM_ROTATING_N_RESTART	./libmdadm/mdadm.h	1476;"	d
ALGORITHM_ROTATING_ZERO_RESTART	./libmdadm/mdadm.h	1475;"	d
APPLY_METADATA_CHANGES	./libmdadm/mdadm.h	824;"	d
ARCHITECTURE_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	291;"	d	file:
ARCHITECTURE_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	294;"	d	file:
ARCHITECTURE_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	297;"	d	file:
ARCHITECTURE_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	300;"	d	file:
ARCHITECTURE_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	303;"	d	file:
ARCHITECTURE_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	306;"	d	file:
ARCHITECTURE_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	309;"	d	file:
ARCHITECTURE_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	313;"	d	file:
ARCHITECTURE_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	291;"	d	file:
ARCHITECTURE_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	294;"	d	file:
ARCHITECTURE_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	297;"	d	file:
ARCHITECTURE_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	300;"	d	file:
ARCHITECTURE_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	303;"	d	file:
ARCHITECTURE_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	306;"	d	file:
ARCHITECTURE_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	309;"	d	file:
ARCHITECTURE_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	313;"	d	file:
ARCHITECTURE_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	291;"	d	file:
ARCHITECTURE_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	294;"	d	file:
ARCHITECTURE_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	297;"	d	file:
ARCHITECTURE_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	300;"	d	file:
ARCHITECTURE_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	303;"	d	file:
ARCHITECTURE_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	306;"	d	file:
ARCHITECTURE_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	309;"	d	file:
ARCHITECTURE_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	313;"	d	file:
ARRAY_SIZE	./libmdadm/mdadm.h	183;"	d
ASSEMBLE	./libmdadm/mdadm.h	/^	ASSEMBLE=1,$/;"	e	enum:mode
ASSEMBLE_CONTAINER_CONTENT_FAIL	./libmdadm/mdadm_errcode.h	/^	ASSEMBLE_CONTAINER_CONTENT_FAIL,$/;"	e	enum:__anon9
ASSEMBLE_DRIVE_IS_ACTIVE	./libmdadm/mdadm_errcode.h	/^	ASSEMBLE_DRIVE_IS_ACTIVE,$/;"	e	enum:__anon9
ASSEMBLE_FAIL	./libmdadm/mdadm_errcode.h	/^	ASSEMBLE_FAIL,$/;"	e	enum:__anon9
ASSEMBLE_FAIL_TO_OPEN_BITMAP_FILE	./libmdadm/mdadm_errcode.h	/^	ASSEMBLE_FAIL_TO_OPEN_BITMAP_FILE,$/;"	e	enum:__anon9
ASSEMBLE_FAIL_TO_SET_ARRAY_INFO	./libmdadm/mdadm_errcode.h	/^	ASSEMBLE_FAIL_TO_SET_ARRAY_INFO,$/;"	e	enum:__anon9
ASSEMBLE_FAIL_TO_SET_BITMAP_FILE	./libmdadm/mdadm_errcode.h	/^	ASSEMBLE_FAIL_TO_SET_BITMAP_FILE,$/;"	e	enum:__anon9
ASSEMBLE_INITIALIZE_DEV_LIST_FAIL	./libmdadm/mdadm_errcode.h	/^	ASSEMBLE_INITIALIZE_DEV_LIST_FAIL,$/;"	e	enum:__anon9
ASSEMBLE_INVALID_MDFD	./libmdadm/mdadm_errcode.h	/^	ASSEMBLE_INVALID_MDFD,$/;"	e	enum:__anon9
ASSEMBLE_INVALID_UUID	./libmdadm/mdadm_errcode.h	/^	ASSEMBLE_INVALID_UUID,$/;"	e	enum:__anon9
ASSEMBLE_KERNEL_UNSUPPORT	./libmdadm/mdadm_errcode.h	/^	ASSEMBLE_KERNEL_UNSUPPORT,$/;"	e	enum:__anon9
ASSEMBLE_MDDEV_INUSE	./libmdadm/mdadm_errcode.h	/^	ASSEMBLE_MDDEV_INUSE,$/;"	e	enum:__anon9
ASSEMBLE_MDDEV_UNSET	./libmdadm/mdadm_errcode.h	/^	ASSEMBLE_MDDEV_UNSET,$/;"	e	enum:__anon9
ASSEMBLE_MDNUM_ILLEGAL	./libmdadm/mdadm_errcode.h	/^	ASSEMBLE_MDNUM_ILLEGAL,$/;"	e	enum:__anon9
ASSEMBLE_MD_ALREADY_ACTIVE	./libmdadm/mdadm_errcode.h	/^	ASSEMBLE_MD_ALREADY_ACTIVE,$/;"	e	enum:__anon9
ASSEMBLE_NEED_BACKUP_FILE	./libmdadm/mdadm_errcode.h	/^	ASSEMBLE_NEED_BACKUP_FILE,$/;"	e	enum:__anon9
ASSEMBLE_NEGATIVE_DEV_CNT	./libmdadm/mdadm_errcode.h	/^	ASSEMBLE_NEGATIVE_DEV_CNT,$/;"	e	enum:__anon9
ASSEMBLE_NEGATIVE_NUM_DEVICES	./libmdadm/mdadm_errcode.h	/^	ASSEMBLE_NEGATIVE_NUM_DEVICES,$/;"	e	enum:__anon9
ASSEMBLE_NO_DEVS_FOR_MD	./libmdadm/mdadm_errcode.h	/^	ASSEMBLE_NO_DEVS_FOR_MD,$/;"	e	enum:__anon9
ASSEMBLE_NO_IDENTITY_INFO	./libmdadm/mdadm_errcode.h	/^	ASSEMBLE_NO_IDENTITY_INFO = 401,$/;"	e	enum:__anon9
ASSEMBLE_NO_SUITABLE_DRIVES	./libmdadm/mdadm_errcode.h	/^	ASSEMBLE_NO_SUITABLE_DRIVES,$/;"	e	enum:__anon9
ASSEMBLE_OPEN_DEV_FAIL	./libmdadm/mdadm_errcode.h	/^	ASSEMBLE_OPEN_DEV_FAIL,$/;"	e	enum:__anon9
ASSEMBLE_RAID_DEVS_NOT_ENOUGH	./libmdadm/mdadm_errcode.h	/^	ASSEMBLE_RAID_DEVS_NOT_ENOUGH,$/;"	e	enum:__anon9
ASSEMBLE_RAID_DEVS_NOT_EXIST_IN_LIST	./libmdadm/mdadm_errcode.h	/^	ASSEMBLE_RAID_DEVS_NOT_EXIST_IN_LIST,$/;"	e	enum:__anon9
ASSEMBLE_REWRITE_SUPERBLOCK_FAIL	./libmdadm/mdadm_errcode.h	/^	ASSEMBLE_REWRITE_SUPERBLOCK_FAIL,$/;"	e	enum:__anon9
ASSEMBLE_SUPERBLOCK_DISAPPEARED	./libmdadm/mdadm_errcode.h	/^	ASSEMBLE_SUPERBLOCK_DISAPPEARED,$/;"	e	enum:__anon9
ASSEMBLE_SUPER_INFO_IS_NULL	./libmdadm/mdadm_errcode.h	/^	ASSEMBLE_SUPER_INFO_IS_NULL,$/;"	e	enum:__anon9
ASSEMBLE_UNDEFINED_ERROR	./libmdadm/mdadm_errcode.h	/^	ASSEMBLE_UNDEFINED_ERROR,$/;"	e	enum:__anon9
AUTODETECT	./libmdadm/mdadm.h	/^	AUTODETECT,$/;"	e	enum:mode
AddDisk	./RAIDManager.cpp	/^bool RAIDManager::AddDisk(const string& dev)$/;"	f	class:RAIDManager	signature:(const string& dev)
AddDisk	./RAIDManager.h	/^	bool AddDisk(const string& dev);$/;"	p	class:RAIDManager	access:public	signature:(const string& dev)
AddMDDisks	./RAIDManager.cpp	/^bool RAIDManager::AddMDDisks(const string& mddev, vector<string>& vDevList)$/;"	f	class:RAIDManager	signature:(const string& mddev, vector<string>& vDevList)
AddMDDisks	./RAIDManager.h	/^	bool AddMDDisks(const string& mddev, vector<string>& vDevList);$/;"	p	class:RAIDManager	access:public	signature:(const string& mddev, vector<string>& vDevList)
AllPersist	./libmdadm/mdadm.h	1436;"	d
Assemble	./libmdadm/mdadm.h	/^extern int Assemble(struct supertype *st, char *mddev,$/;"	p	signature:(struct supertype *st, char *mddev, struct mddev_ident *ident, struct mddev_dev *devlist, struct context *c)
AssembleRAID	./RAIDManager.cpp	/^bool RAIDManager::AssembleRAID(const int uuid[4], string& mddev)$/;"	f	class:RAIDManager	signature:(const int uuid[4], string& mddev)
AssembleRAID	./RAIDManager.cpp	/^int RAIDManager::AssembleRAID(const string& mddev, const int uuid[4])$/;"	f	class:RAIDManager	signature:(const string& mddev, const int uuid[4])
AssembleRAID	./RAIDManager.h	/^	bool AssembleRAID(const int uuid[4], string &mddev);$/;"	p	class:RAIDManager	access:private	signature:(const int uuid[4], string &mddev)
AssembleRAID	./RAIDManager.h	/^	int AssembleRAID(const string& mddev, const int uuid[4]);$/;"	p	class:RAIDManager	access:private	signature:(const string& mddev, const int uuid[4])
B	./libmdadm/sha1.h	/^  sha1_uint32 B;$/;"	m	struct:sha1_ctx	access:public
BADBLOCKS_FLAG_DIRTY	./libmke2fs/ext2fs.h	130;"	d
BH_Freed	./libe2fsck/kernel-jbd.h	/^	BH_Freed,		\/* 1 if buffer has been freed (truncated) *\/$/;"	e	enum:jbd_state_bits
BH_JBDDirty	./libe2fsck/kernel-jbd.h	/^	BH_JBDDirty,		\/* 1 if buffer is dirty but journaled *\/$/;"	e	enum:jbd_state_bits
BH_JWrite	./libe2fsck/kernel-jbd.h	/^	BH_JWrite$/;"	e	enum:jbd_state_bits
BH_RevokeValid	./libe2fsck/kernel-jbd.h	/^	BH_RevokeValid,		\/* 1 if buffer revoked flag is valid *\/$/;"	e	enum:jbd_state_bits
BH_Revoked	./libe2fsck/kernel-jbd.h	/^	BH_Revoked,		\/* 1 if buffer has been revoked from the log *\/$/;"	e	enum:jbd_state_bits
BITMAP_ACTIVE	./libmdadm/bitmap.h	/^	BITMAP_ACTIVE = 0x001, \/* the bitmap is in use *\/$/;"	e	enum:bitmap_state
BITMAP_BLOCK_SHIFT	./libmdadm/bitmap.h	106;"	d
BITMAP_BLOCK_SIZE	./libmdadm/bitmap.h	105;"	d
BITMAP_H	./libmdadm/bitmap.h	7;"	d
BITMAP_MAGIC	./libmdadm/bitmap.h	137;"	d
BITMAP_MAJOR_HI	./libmdadm/bitmap.h	13;"	d
BITMAP_MAJOR_HOSTENDIAN	./libmdadm/bitmap.h	14;"	d
BITMAP_MAJOR_LO	./libmdadm/bitmap.h	9;"	d
BITMAP_MINOR	./libmdadm/bitmap.h	16;"	d
BITMAP_STALE	./libmdadm/bitmap.h	/^	BITMAP_STALE  = 0x002  \/* the bitmap file is out of date or had -EIO *\/$/;"	e	enum:bitmap_state
BJ_AsyncData	./libe2fsck/kernel-jbd.h	867;"	d
BJ_Forget	./libe2fsck/kernel-jbd.h	869;"	d
BJ_IO	./libe2fsck/kernel-jbd.h	870;"	d
BJ_LogCtl	./libe2fsck/kernel-jbd.h	872;"	d
BJ_Metadata	./libe2fsck/kernel-jbd.h	868;"	d
BJ_None	./libe2fsck/kernel-jbd.h	865;"	d
BJ_Reserved	./libe2fsck/kernel-jbd.h	873;"	d
BJ_Shadow	./libe2fsck/kernel-jbd.h	871;"	d
BJ_SyncData	./libe2fsck/kernel-jbd.h	866;"	d
BJ_Types	./libe2fsck/kernel-jbd.h	874;"	d
BLKGETSIZE64	./libmdadm/mdadm.h	63;"	d
BLOCK_ABORT	./libmke2fs/ext2fs.h	295;"	d
BLOCK_CHANGED	./libmke2fs/ext2fs.h	294;"	d
BLOCK_COUNT_DIND	./libmke2fs/ext2fs.h	334;"	d
BLOCK_COUNT_IND	./libmke2fs/ext2fs.h	333;"	d
BLOCK_COUNT_TIND	./libmke2fs/ext2fs.h	335;"	d
BLOCK_COUNT_TRANSLATOR	./libmke2fs/ext2fs.h	336;"	d
BLOCK_ERROR	./libmke2fs/ext2fs.h	296;"	d
BLOCK_FLAG_APPEND	./libmke2fs/ext2fs.h	322;"	d
BLOCK_FLAG_DATA_ONLY	./libmke2fs/ext2fs.h	325;"	d
BLOCK_FLAG_DEPTH_TRAVERSE	./libmke2fs/ext2fs.h	324;"	d
BLOCK_FLAG_HOLE	./libmke2fs/ext2fs.h	323;"	d
BLOCK_FLAG_NO_LARGE	./libmke2fs/ext2fs.h	328;"	d
BLOCK_FLAG_READ_ONLY	./libmke2fs/ext2fs.h	326;"	d
BMAP_ALLOC	./libmke2fs/ext2fs.h	517;"	d
BMAP_RET_UNINIT	./libmke2fs/ext2fs.h	523;"	d
BMAP_SET	./libmke2fs/ext2fs.h	518;"	d
BMAP_STATS	./libmke2fs/ext2fs.h	1184;"	d
BUFFER_TRACE	./libe2fsck/jfs_compat.h	61;"	d
BUFFER_TRACE	./libe2fsck/kernel-jbd.h	934;"	d
BUFFER_TRACE2	./libe2fsck/kernel-jbd.h	935;"	d
BUG	./libe2fsck/kernel-jbd.h	815;"	d
BUILD	./libmdadm/mdadm.h	/^	BUILD,$/;"	e	enum:mode
Build	./libmdadm/mdadm.h	/^extern int Build(char *mddev, struct mddev_dev *devlist,$/;"	p	signature:(char *mddev, struct mddev_dev *devlist, struct shape *s, struct context *c)
C	./libmdadm/sha1.h	/^  sha1_uint32 C;$/;"	m	struct:sha1_ctx	access:public
CB_MOUNT	./RAIDManager.h	/^	CB_MOUNT = 1,	 $/;"	e	enum:eCBReason
CHUNK_BIT_OFFSET	./libmdadm/bitmap.h	129;"	d
CHUNK_BLOCK_MASK	./libmdadm/bitmap.h	111;"	d
CHUNK_BLOCK_RATIO	./libmdadm/bitmap.h	109;"	d
CHUNK_BLOCK_SHIFT	./libmdadm/bitmap.h	110;"	d
CLEAR_ARRAY	./libmdadm/md_u.h	29;"	d
COMPILER_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	104;"	d	file:
COMPILER_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	112;"	d	file:
COMPILER_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	117;"	d	file:
COMPILER_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	124;"	d	file:
COMPILER_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	127;"	d	file:
COMPILER_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	12;"	d	file:
COMPILER_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	135;"	d	file:
COMPILER_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	154;"	d	file:
COMPILER_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	162;"	d	file:
COMPILER_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	167;"	d	file:
COMPILER_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	170;"	d	file:
COMPILER_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	187;"	d	file:
COMPILER_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	18;"	d	file:
COMPILER_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	190;"	d	file:
COMPILER_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	193;"	d	file:
COMPILER_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	29;"	d	file:
COMPILER_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	37;"	d	file:
COMPILER_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	43;"	d	file:
COMPILER_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	49;"	d	file:
COMPILER_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	55;"	d	file:
COMPILER_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	61;"	d	file:
COMPILER_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	75;"	d	file:
COMPILER_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	82;"	d	file:
COMPILER_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	90;"	d	file:
COMPILER_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	93;"	d	file:
COMPILER_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	95;"	d	file:
COMPILER_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	104;"	d	file:
COMPILER_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	112;"	d	file:
COMPILER_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	117;"	d	file:
COMPILER_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	124;"	d	file:
COMPILER_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	127;"	d	file:
COMPILER_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	12;"	d	file:
COMPILER_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	135;"	d	file:
COMPILER_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	154;"	d	file:
COMPILER_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	162;"	d	file:
COMPILER_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	167;"	d	file:
COMPILER_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	170;"	d	file:
COMPILER_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	187;"	d	file:
COMPILER_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	18;"	d	file:
COMPILER_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	190;"	d	file:
COMPILER_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	193;"	d	file:
COMPILER_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	29;"	d	file:
COMPILER_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	37;"	d	file:
COMPILER_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	43;"	d	file:
COMPILER_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	49;"	d	file:
COMPILER_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	55;"	d	file:
COMPILER_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	61;"	d	file:
COMPILER_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	75;"	d	file:
COMPILER_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	82;"	d	file:
COMPILER_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	90;"	d	file:
COMPILER_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	93;"	d	file:
COMPILER_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	95;"	d	file:
COMPILER_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	104;"	d	file:
COMPILER_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	112;"	d	file:
COMPILER_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	117;"	d	file:
COMPILER_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	124;"	d	file:
COMPILER_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	127;"	d	file:
COMPILER_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	12;"	d	file:
COMPILER_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	135;"	d	file:
COMPILER_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	154;"	d	file:
COMPILER_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	162;"	d	file:
COMPILER_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	167;"	d	file:
COMPILER_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	170;"	d	file:
COMPILER_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	187;"	d	file:
COMPILER_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	18;"	d	file:
COMPILER_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	190;"	d	file:
COMPILER_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	193;"	d	file:
COMPILER_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	29;"	d	file:
COMPILER_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	37;"	d	file:
COMPILER_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	43;"	d	file:
COMPILER_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	49;"	d	file:
COMPILER_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	55;"	d	file:
COMPILER_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	61;"	d	file:
COMPILER_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	75;"	d	file:
COMPILER_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	82;"	d	file:
COMPILER_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	90;"	d	file:
COMPILER_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	93;"	d	file:
COMPILER_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	95;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	105;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	113;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	119;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	128;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	137;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	14;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	156;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	173;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	178;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	20;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	30;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	38;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	44;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	51;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	57;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	64;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	69;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	77;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	84;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	98;"	d	file:
COMPILER_VERSION_MAJOR	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	105;"	d	file:
COMPILER_VERSION_MAJOR	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	113;"	d	file:
COMPILER_VERSION_MAJOR	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	119;"	d	file:
COMPILER_VERSION_MAJOR	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	128;"	d	file:
COMPILER_VERSION_MAJOR	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	137;"	d	file:
COMPILER_VERSION_MAJOR	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	14;"	d	file:
COMPILER_VERSION_MAJOR	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	156;"	d	file:
COMPILER_VERSION_MAJOR	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	173;"	d	file:
COMPILER_VERSION_MAJOR	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	178;"	d	file:
COMPILER_VERSION_MAJOR	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	20;"	d	file:
COMPILER_VERSION_MAJOR	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	30;"	d	file:
COMPILER_VERSION_MAJOR	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	38;"	d	file:
COMPILER_VERSION_MAJOR	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	44;"	d	file:
COMPILER_VERSION_MAJOR	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	51;"	d	file:
COMPILER_VERSION_MAJOR	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	57;"	d	file:
COMPILER_VERSION_MAJOR	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	64;"	d	file:
COMPILER_VERSION_MAJOR	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	69;"	d	file:
COMPILER_VERSION_MAJOR	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	77;"	d	file:
COMPILER_VERSION_MAJOR	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	84;"	d	file:
COMPILER_VERSION_MAJOR	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	98;"	d	file:
COMPILER_VERSION_MAJOR	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	105;"	d	file:
COMPILER_VERSION_MAJOR	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	113;"	d	file:
COMPILER_VERSION_MAJOR	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	119;"	d	file:
COMPILER_VERSION_MAJOR	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	128;"	d	file:
COMPILER_VERSION_MAJOR	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	137;"	d	file:
COMPILER_VERSION_MAJOR	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	14;"	d	file:
COMPILER_VERSION_MAJOR	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	156;"	d	file:
COMPILER_VERSION_MAJOR	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	173;"	d	file:
COMPILER_VERSION_MAJOR	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	178;"	d	file:
COMPILER_VERSION_MAJOR	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	20;"	d	file:
COMPILER_VERSION_MAJOR	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	30;"	d	file:
COMPILER_VERSION_MAJOR	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	38;"	d	file:
COMPILER_VERSION_MAJOR	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	44;"	d	file:
COMPILER_VERSION_MAJOR	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	51;"	d	file:
COMPILER_VERSION_MAJOR	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	57;"	d	file:
COMPILER_VERSION_MAJOR	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	64;"	d	file:
COMPILER_VERSION_MAJOR	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	69;"	d	file:
COMPILER_VERSION_MAJOR	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	77;"	d	file:
COMPILER_VERSION_MAJOR	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	84;"	d	file:
COMPILER_VERSION_MAJOR	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	98;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	106;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	114;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	120;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	129;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	138;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	157;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	15;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	174;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	179;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	21;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	31;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	39;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	45;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	52;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	58;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	65;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	70;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	78;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	85;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	99;"	d	file:
COMPILER_VERSION_MINOR	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	106;"	d	file:
COMPILER_VERSION_MINOR	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	114;"	d	file:
COMPILER_VERSION_MINOR	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	120;"	d	file:
COMPILER_VERSION_MINOR	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	129;"	d	file:
COMPILER_VERSION_MINOR	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	138;"	d	file:
COMPILER_VERSION_MINOR	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	157;"	d	file:
COMPILER_VERSION_MINOR	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	15;"	d	file:
COMPILER_VERSION_MINOR	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	174;"	d	file:
COMPILER_VERSION_MINOR	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	179;"	d	file:
COMPILER_VERSION_MINOR	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	21;"	d	file:
COMPILER_VERSION_MINOR	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	31;"	d	file:
COMPILER_VERSION_MINOR	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	39;"	d	file:
COMPILER_VERSION_MINOR	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	45;"	d	file:
COMPILER_VERSION_MINOR	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	52;"	d	file:
COMPILER_VERSION_MINOR	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	58;"	d	file:
COMPILER_VERSION_MINOR	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	65;"	d	file:
COMPILER_VERSION_MINOR	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	70;"	d	file:
COMPILER_VERSION_MINOR	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	78;"	d	file:
COMPILER_VERSION_MINOR	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	85;"	d	file:
COMPILER_VERSION_MINOR	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	99;"	d	file:
COMPILER_VERSION_MINOR	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	106;"	d	file:
COMPILER_VERSION_MINOR	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	114;"	d	file:
COMPILER_VERSION_MINOR	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	120;"	d	file:
COMPILER_VERSION_MINOR	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	129;"	d	file:
COMPILER_VERSION_MINOR	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	138;"	d	file:
COMPILER_VERSION_MINOR	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	157;"	d	file:
COMPILER_VERSION_MINOR	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	15;"	d	file:
COMPILER_VERSION_MINOR	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	174;"	d	file:
COMPILER_VERSION_MINOR	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	179;"	d	file:
COMPILER_VERSION_MINOR	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	21;"	d	file:
COMPILER_VERSION_MINOR	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	31;"	d	file:
COMPILER_VERSION_MINOR	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	39;"	d	file:
COMPILER_VERSION_MINOR	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	45;"	d	file:
COMPILER_VERSION_MINOR	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	52;"	d	file:
COMPILER_VERSION_MINOR	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	58;"	d	file:
COMPILER_VERSION_MINOR	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	65;"	d	file:
COMPILER_VERSION_MINOR	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	70;"	d	file:
COMPILER_VERSION_MINOR	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	78;"	d	file:
COMPILER_VERSION_MINOR	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	85;"	d	file:
COMPILER_VERSION_MINOR	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	99;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	100;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	108;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	121;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	131;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	142;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	145;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	158;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	175;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	180;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	22;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	33;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	40;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	46;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	66;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	71;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	79;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	86;"	d	file:
COMPILER_VERSION_PATCH	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	100;"	d	file:
COMPILER_VERSION_PATCH	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	108;"	d	file:
COMPILER_VERSION_PATCH	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	121;"	d	file:
COMPILER_VERSION_PATCH	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	131;"	d	file:
COMPILER_VERSION_PATCH	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	142;"	d	file:
COMPILER_VERSION_PATCH	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	145;"	d	file:
COMPILER_VERSION_PATCH	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	158;"	d	file:
COMPILER_VERSION_PATCH	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	175;"	d	file:
COMPILER_VERSION_PATCH	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	180;"	d	file:
COMPILER_VERSION_PATCH	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	22;"	d	file:
COMPILER_VERSION_PATCH	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	33;"	d	file:
COMPILER_VERSION_PATCH	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	40;"	d	file:
COMPILER_VERSION_PATCH	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	46;"	d	file:
COMPILER_VERSION_PATCH	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	66;"	d	file:
COMPILER_VERSION_PATCH	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	71;"	d	file:
COMPILER_VERSION_PATCH	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	79;"	d	file:
COMPILER_VERSION_PATCH	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	86;"	d	file:
COMPILER_VERSION_PATCH	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	100;"	d	file:
COMPILER_VERSION_PATCH	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	108;"	d	file:
COMPILER_VERSION_PATCH	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	121;"	d	file:
COMPILER_VERSION_PATCH	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	131;"	d	file:
COMPILER_VERSION_PATCH	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	142;"	d	file:
COMPILER_VERSION_PATCH	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	145;"	d	file:
COMPILER_VERSION_PATCH	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	158;"	d	file:
COMPILER_VERSION_PATCH	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	175;"	d	file:
COMPILER_VERSION_PATCH	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	180;"	d	file:
COMPILER_VERSION_PATCH	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	22;"	d	file:
COMPILER_VERSION_PATCH	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	33;"	d	file:
COMPILER_VERSION_PATCH	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	40;"	d	file:
COMPILER_VERSION_PATCH	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	46;"	d	file:
COMPILER_VERSION_PATCH	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	66;"	d	file:
COMPILER_VERSION_PATCH	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	71;"	d	file:
COMPILER_VERSION_PATCH	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	79;"	d	file:
COMPILER_VERSION_PATCH	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	86;"	d	file:
COMPILER_VERSION_TWEAK	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	149;"	d	file:
COMPILER_VERSION_TWEAK	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	25;"	d	file:
COMPILER_VERSION_TWEAK	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	149;"	d	file:
COMPILER_VERSION_TWEAK	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	25;"	d	file:
COMPILER_VERSION_TWEAK	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	149;"	d	file:
COMPILER_VERSION_TWEAK	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	25;"	d	file:
CONTAINER_RESHAPE	./libmdadm/mdadm.h	202;"	d
COUNTER	./libmdadm/bitmap.h	96;"	d
COUNTER_BITS	./libmdadm/bitmap.h	86;"	d
COUNTER_BIT_SHIFT	./libmdadm/bitmap.h	87;"	d
COUNTER_BYTE_RATIO	./libmdadm/bitmap.h	88;"	d
COUNTER_BYTE_SHIFT	./libmdadm/bitmap.h	89;"	d
COUNTER_MAX	./libmdadm/bitmap.h	93;"	d
CRCPOLY_BE	./libe2fsck/crc32defs.h	7;"	d
CRCPOLY_LE	./libe2fsck/crc32defs.h	6;"	d
CRC_BE_BITS	./libe2fsck/crc32defs.h	15;"	d
CRC_LE_BITS	./libe2fsck/crc32defs.h	12;"	d
CREATE	./libmdadm/mdadm.h	/^	CREATE,$/;"	e	enum:mode
CREATE_ABORTED	./libmdadm/mdadm_errcode.h	/^	CREATE_ABORTED,$/;"	e	enum:__anon9
CREATE_ADD_NEW_DISK_FAIL	./libmdadm/mdadm_errcode.h	/^	CREATE_ADD_NEW_DISK_FAIL,$/;"	e	enum:__anon9
CREATE_ADD_TO_SUPER_FAIL	./libmdadm/mdadm_errcode.h	/^	CREATE_ADD_TO_SUPER_FAIL,$/;"	e	enum:__anon9
CREATE_BITMAP_CHUNK_NOT_SUPPORT	./libmdadm/mdadm_errcode.h	/^	CREATE_BITMAP_CHUNK_NOT_SUPPORT,$/;"	e	enum:__anon9
CREATE_BITMAP_FAIL	./libmdadm/mdadm_errcode.h	/^	CREATE_BITMAP_FAIL,$/;"	e	enum:__anon9
CREATE_BITMAP_NOT_MEANINGFUL	./libmdadm/mdadm_errcode.h	/^	CREATE_BITMAP_NOT_MEANINGFUL,$/;"	e	enum:__anon9
CREATE_BITMAP_NOT_SUPPORT	./libmdadm/mdadm_errcode.h	/^	CREATE_BITMAP_NOT_SUPPORT,$/;"	e	enum:__anon9
CREATE_DEVS_TOO_LARGE	./libmdadm/mdadm_errcode.h	/^	CREATE_DEVS_TOO_LARGE,$/;"	e	enum:__anon9
CREATE_FREE_SPACE_SMALL_THAN_GIVEN	./libmdadm/mdadm_errcode.h	/^	CREATE_FREE_SPACE_SMALL_THAN_GIVEN,$/;"	e	enum:__anon9
CREATE_FREE_SUPER_TYPE_OBJ_FAIL	./libmdadm/mdadm_errcode.h	/^	CREATE_FREE_SUPER_TYPE_OBJ_FAIL,$/;"	e	enum:__anon9
CREATE_GEOMETRY_INVALID	./libmdadm/mdadm_errcode.h	/^	CREATE_GEOMETRY_INVALID,$/;"	e	enum:__anon9
CREATE_INIT_SUPER_FAIL	./libmdadm/mdadm_errcode.h	/^	CREATE_INIT_SUPER_FAIL,$/;"	e	enum:__anon9
CREATE_LIST_DEVS_MORE_THAN_ARRAY_NEEDED	./libmdadm/mdadm_errcode.h	/^	CREATE_LIST_DEVS_MORE_THAN_ARRAY_NEEDED,$/;"	e	enum:__anon9
CREATE_MDDEV_FAIL	./libmdadm/mdadm_errcode.h	/^	CREATE_MDDEV_FAIL,$/;"	e	enum:__anon9
CREATE_MDDEV_INUSE	./libmdadm/mdadm_errcode.h	/^	CREATE_MDDEV_INUSE,$/;"	e	enum:__anon9
CREATE_MDDEV_UNSET	./libmdadm/mdadm_errcode.h	/^	CREATE_MDDEV_UNSET,$/;"	e	enum:__anon9
CREATE_MDNUM_ILLEGAL	./libmdadm/mdadm_errcode.h	/^	CREATE_MDNUM_ILLEGAL,$/;"	e	enum:__anon9
CREATE_MISSING_DEVS_NOT_SUPPORT	./libmdadm/mdadm_errcode.h	/^	CREATE_MISSING_DEVS_NOT_SUPPORT,$/;"	e	enum:__anon9
CREATE_NOT_BLOCK_DEVICE	./libmdadm/mdadm_errcode.h	/^	CREATE_NOT_BLOCK_DEVICE,$/;"	e	enum:__anon9
CREATE_NO_FREE_SPACE	./libmdadm/mdadm_errcode.h	/^	CREATE_NO_FREE_SPACE,$/;"	e	enum:__anon9
CREATE_OPEN_BITMAP_FILE_FAIL	./libmdadm/mdadm_errcode.h	/^	CREATE_OPEN_BITMAP_FILE_FAIL,$/;"	e	enum:__anon9
CREATE_OPEN_CONTAINER_FAIL	./libmdadm/mdadm_errcode.h	/^	CREATE_OPEN_CONTAINER_FAIL,$/;"	e	enum:__anon9
CREATE_RAID_ACTIVATION_FAIL	./libmdadm/mdadm_errcode.h	/^	CREATE_RAID_ACTIVATION_FAIL,$/;"	e	enum:__anon9
CREATE_RAID_DEVS_NOT_ENOUGH	./libmdadm/mdadm_errcode.h	/^	CREATE_RAID_DEVS_NOT_ENOUGH,$/;"	e	enum:__anon9
CREATE_RAID_DEVS_NOT_EXIST_IN_LIST	./libmdadm/mdadm_errcode.h	/^	CREATE_RAID_DEVS_NOT_EXIST_IN_LIST,$/;"	e	enum:__anon9
CREATE_RAID_DEVS_OVER_256	./libmdadm/mdadm_errcode.h	/^	CREATE_RAID_DEVS_OVER_256,$/;"	e	enum:__anon9
CREATE_RAID_DEV_CANNOT_OPEN	./libmdadm/mdadm_errcode.h	/^	CREATE_RAID_DEV_CANNOT_OPEN,$/;"	e	enum:__anon9
CREATE_RAID_LEVEL_UNKNOWN	./libmdadm/mdadm_errcode.h	/^	CREATE_RAID_LEVEL_UNKNOWN,$/;"	e	enum:__anon9
CREATE_RAID_LEVEL_UNSET	./libmdadm/mdadm_errcode.h	/^	CREATE_RAID_LEVEL_UNSET = 1,$/;"	e	enum:__anon9
CREATE_REQUIRE_NEWER_VERSION	./libmdadm/mdadm_errcode.h	/^	CREATE_REQUIRE_NEWER_VERSION,$/;"	e	enum:__anon9
CREATE_SET_ARRAY_INFO_FAIL	./libmdadm/mdadm_errcode.h	/^	CREATE_SET_ARRAY_INFO_FAIL,$/;"	e	enum:__anon9
CREATE_SET_BITMAP_FILE_FAIL	./libmdadm/mdadm_errcode.h	/^	CREATE_SET_BITMAP_FILE_FAIL,$/;"	e	enum:__anon9
CREATE_SPARE_DEVS_NOT_SUPPORT	./libmdadm/mdadm_errcode.h	/^	CREATE_SPARE_DEVS_NOT_SUPPORT,$/;"	e	enum:__anon9
CREATE_TOO_MANY_DEVS	./libmdadm/mdadm_errcode.h	/^	CREATE_TOO_MANY_DEVS,$/;"	e	enum:__anon9
CREATE_UNSUITABLE_STYLE	./libmdadm/mdadm_errcode.h	/^	CREATE_UNSUITABLE_STYLE, \/\/ This error may mean that partition's system id is not suitable. $/;"	e	enum:__anon9
CREATE_WITHOUT_GIVEN_SIZE_DRIVES	./libmdadm/mdadm_errcode.h	/^	CREATE_WITHOUT_GIVEN_SIZE_DRIVES,$/;"	e	enum:__anon9
CheckBlockDevice	./test_utils.cpp	/^bool CheckBlockDevice(const string& dev)$/;"	f	signature:(const string& dev)
CheckBlockDevice	./test_utils.h	/^extern bool CheckBlockDevice(const string& dev);$/;"	p	signature:(const string& dev)
CheckDirectoryExist	./test_utils.cpp	/^bool CheckDirectoryExist(const string& dev)$/;"	f	signature:(const string& dev)
CheckDirectoryExist	./test_utils.h	/^extern bool CheckDirectoryExist(const string& dev);$/;"	p	signature:(const string& dev)
CheckFileExist	./test_utils.cpp	/^bool CheckFileExist(const string& dev)$/;"	f	signature:(const string& dev)
CheckFileExist	./test_utils.h	/^extern bool CheckFileExist(const string& dev);$/;"	p	signature:(const string& dev)
CheckFileSystem	./RAIDManager.h	/^	bool CheckFileSystem();$/;"	p	class:RAIDManager	access:public	signature:()
ClearErrors	./libmdadm/mdadm.h	1433;"	d
ClearFaults	./libmdadm/mdadm.h	1434;"	d
Create	./libmdadm/mdadm.h	/^extern int Create(struct supertype *st, char *mddev,$/;"	p	signature:(struct supertype *st, char *mddev, char *name, int *uuid, int subdevs, struct mddev_dev *devlist, struct shape *s, struct context *c, unsigned long long data_offset)
CreateBitmap	./libmdadm/mdadm.h	/^extern int CreateBitmap(char *filename, int force, char uuid[16],$/;"	p	signature:(char *filename, int force, char uuid[16], unsigned long chunksize, unsigned long daemon_sleep, unsigned long write_behind, unsigned long long array_size, int major)
CreateDefaultFolders	./FilesystemManager.cpp	/^bool FilesystemManager::CreateDefaultFolders()$/;"	f	class:FilesystemManager	signature:()
CreateDefaultFolders	./FilesystemManager.h	/^	bool CreateDefaultFolders();$/;"	p	class:FilesystemManager	access:public	signature:()
CreateRAID	./RAIDManager.cpp	/^bool RAIDManager::CreateRAID(vector<string>& vDevList, int level)$/;"	f	class:RAIDManager	signature:(vector<string>& vDevList, int level)
CreateRAID	./RAIDManager.cpp	/^int RAIDManager::CreateRAID(const string& mddev, vector<string>& vDevList, int level)$/;"	f	class:RAIDManager	signature:(const string& mddev, vector<string>& vDevList, int level)
CreateRAID	./RAIDManager.h	/^	bool CreateRAID(vector<string>& vDevList, int level);$/;"	p	class:RAIDManager	access:public	signature:(vector<string>& vDevList, int level)
CreateRAID	./RAIDManager.h	/^	int CreateRAID(const string& mddev, vector<string>& vDevList, int level);$/;"	p	class:RAIDManager	access:private	signature:(const string& mddev, vector<string>& vDevList, int level)
CriticalSection	./test_utils.h	/^	CriticalSection()$/;"	f	class:CriticalSection	access:public	signature:()
CriticalSection	./test_utils.h	/^class CriticalSection {$/;"	c
CriticalSection::CriticalSection	./test_utils.h	/^	CriticalSection()$/;"	f	class:CriticalSection	access:public	signature:()
CriticalSection::Lock	./test_utils.h	/^	void Lock() {$/;"	f	class:CriticalSection	access:public	signature:()
CriticalSection::Unlock	./test_utils.h	/^	void Unlock() {$/;"	f	class:CriticalSection	access:public	signature:()
CriticalSection::m_iLock	./test_utils.h	/^	int m_iLock;$/;"	m	class:CriticalSection	access:private
CriticalSection::~CriticalSection	./test_utils.h	/^	~CriticalSection() { m_iLock = 0; }$/;"	f	class:CriticalSection	access:public	signature:()
CriticalSectionLock	./test_utils.h	/^	CriticalSectionLock();$/;"	p	class:CriticalSectionLock	access:private	signature:()
CriticalSectionLock	./test_utils.h	/^	CriticalSectionLock(CriticalSection *cs)$/;"	f	class:CriticalSectionLock	access:public	signature:(CriticalSection *cs)
CriticalSectionLock	./test_utils.h	/^class CriticalSectionLock {$/;"	c
CriticalSectionLock::CriticalSectionLock	./test_utils.h	/^	CriticalSectionLock();$/;"	p	class:CriticalSectionLock	access:private	signature:()
CriticalSectionLock::CriticalSectionLock	./test_utils.h	/^	CriticalSectionLock(CriticalSection *cs)$/;"	f	class:CriticalSectionLock	access:public	signature:(CriticalSection *cs)
CriticalSectionLock::m_cs	./test_utils.h	/^	CriticalSection *m_cs;$/;"	m	class:CriticalSectionLock	access:private
CriticalSectionLock::~CriticalSectionLock	./test_utils.h	/^	~CriticalSectionLock() {$/;"	f	class:CriticalSectionLock	access:public	signature:()
D	./libmdadm/sha1.h	/^  sha1_uint32 D;$/;"	m	struct:sha1_ctx	access:public
DBLIST_ABORT	./libmke2fs/ext2fs.h	150;"	d
DEC	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	317;"	d	file:
DEC	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	317;"	d	file:
DEC	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	317;"	d	file:
DEFAULT_BITMAP_CHUNK	./libmdadm/mdadm.h	67;"	d
DEFAULT_BITMAP_DELAY	./libmdadm/mdadm.h	68;"	d
DEFAULT_CHUNK	./libmdadm/mdadm.h	66;"	d
DEFAULT_MAX_WRITE_BEHIND	./libmdadm/mdadm.h	69;"	d
DETAIL_MDDEV_CANNOT_GET_DETAIL	./libmdadm/mdadm_errcode.h	/^	DETAIL_MDDEV_CANNOT_GET_DETAIL,$/;"	e	enum:__anon9
DETAIL_MDDEV_ILLEGAL	./libmdadm/mdadm_errcode.h	/^	DETAIL_MDDEV_ILLEGAL,$/;"	e	enum:__anon9
DETAIL_MDDEV_OPEN_FAIL	./libmdadm/mdadm_errcode.h	/^	DETAIL_MDDEV_OPEN_FAIL = 101,$/;"	e	enum:__anon9
DETAIL_MDDEV_REQUIRE_NEWER_DRIVER	./libmdadm/mdadm_errcode.h	/^	DETAIL_MDDEV_REQUIRE_NEWER_DRIVER,$/;"	e	enum:__anon9
DETAIL_NULL_POINTER	./libmdadm/mdadm_errcode.h	/^	DETAIL_NULL_POINTER,$/;"	e	enum:__anon9
DICTCOUNT_T_MAX	./libe2fsck/dict.h	38;"	d
DICT_H	./libe2fsck/dict.h	22;"	d
DIRENT_ABORT	./libmke2fs/ext2fs.h	424;"	d
DIRENT_CHANGED	./libmke2fs/ext2fs.h	423;"	d
DIRENT_DELETED_FILE	./libmke2fs/ext2fs.h	437;"	d
DIRENT_DOT_DOT_FILE	./libmke2fs/ext2fs.h	435;"	d
DIRENT_DOT_FILE	./libmke2fs/ext2fs.h	434;"	d
DIRENT_ERROR	./libmke2fs/ext2fs.h	425;"	d
DIRENT_FLAG_INCLUDE_EMPTY	./libmke2fs/ext2fs.h	431;"	d
DIRENT_FLAG_INCLUDE_REMOVED	./libmke2fs/ext2fs.h	432;"	d
DIRENT_OTHER_FILE	./libmke2fs/ext2fs.h	436;"	d
DISK_TYPE_ESATA	./RAIDManager.h	/^	DISK_TYPE_ESATA,$/;"	e	enum:eDiskType
DISK_TYPE_ISCSI	./RAIDManager.h	/^	DISK_TYPE_ISCSI,$/;"	e	enum:eDiskType
DISK_TYPE_NFS	./RAIDManager.h	/^	DISK_TYPE_NFS$/;"	e	enum:eDiskType
DISK_TYPE_SATA	./RAIDManager.h	/^	DISK_TYPE_SATA,$/;"	e	enum:eDiskType
DISK_TYPE_UNKNOWN	./RAIDManager.h	/^	DISK_TYPE_UNKNOWN = -1,$/;"	e	enum:eDiskType
DS_BLOCKED	./libmdadm/mdadm.h	249;"	d
DS_FAULTY	./libmdadm/mdadm.h	245;"	d
DS_INSYNC	./libmdadm/mdadm.h	246;"	d
DS_REMOVE	./libmdadm/mdadm.h	250;"	d
DS_SPARE	./libmdadm/mdadm.h	248;"	d
DS_UNBLOCK	./libmdadm/mdadm.h	251;"	d
DS_WRITE_MOSTLY	./libmdadm/mdadm.h	247;"	d
DX_DIRBLOCK_CLEARED	./libe2fsck/e2fsck.h	105;"	d
DX_DIRBLOCK_CORRUPT	./libe2fsck/e2fsck.h	104;"	d
DX_DIRBLOCK_LEAF	./libe2fsck/e2fsck.h	102;"	d
DX_DIRBLOCK_NODE	./libe2fsck/e2fsck.h	103;"	d
DX_DIRBLOCK_ROOT	./libe2fsck/e2fsck.h	101;"	d
DX_FLAG_DUP_REF	./libe2fsck/e2fsck.h	119;"	d
DX_FLAG_FIRST	./libe2fsck/e2fsck.h	120;"	d
DX_FLAG_LAST	./libe2fsck/e2fsck.h	121;"	d
DX_FLAG_REFERENCED	./libe2fsck/e2fsck.h	118;"	d
DeleteRAID	./RAIDManager.cpp	/^bool RAIDManager::DeleteRAID(const string& mddev)$/;"	f	class:RAIDManager	signature:(const string& mddev)
DeleteRAID	./RAIDManager.h	/^	bool DeleteRAID(const string& mddev);$/;"	p	class:RAIDManager	access:public	signature:(const string& mddev)
Detail	./libmdadm/mdadm.h	/^extern int Detail(char *dev, struct context *c);$/;"	p	signature:(char *dev, struct context *c)
Detail_Platform	./libmdadm/mdadm.h	/^extern int Detail_Platform(struct superswitch *ss, int scan, int verbose, int _export, char *controller_path);$/;"	p	signature:(struct superswitch *ss, int scan, int verbose, int _export, char *controller_path)
Detail_ToArrayDetail	./libmdadm/mdadm.h	/^extern int Detail_ToArrayDetail(const char *dev, struct context *c, struct array_detail *ad);$/;"	p	signature:(const char *dev, struct context *c, struct array_detail *ad)
DiskProfile	./RAIDManager.h	/^	DiskProfile()$/;"	f	struct:DiskProfile	access:public	signature:()
DiskProfile	./RAIDManager.h	/^	DiskProfile(string dev)$/;"	f	struct:DiskProfile	access:public	signature:(string dev)
DiskProfile	./RAIDManager.h	/^struct DiskProfile {$/;"	s
DiskProfile::DiskProfile	./RAIDManager.h	/^	DiskProfile()$/;"	f	struct:DiskProfile	access:public	signature:()
DiskProfile::DiskProfile	./RAIDManager.h	/^	DiskProfile(string dev)$/;"	f	struct:DiskProfile	access:public	signature:(string dev)
DiskProfile::Dump	./RAIDManager.h	/^	void Dump()$/;"	f	struct:DiskProfile	access:public	signature:()
DiskProfile::GetDevCapacity	./RAIDManager.h	/^	void GetDevCapacity()$/;"	f	struct:DiskProfile	access:public	signature:()
DiskProfile::ReadMDStat	./RAIDManager.h	/^	void ReadMDStat()$/;"	f	struct:DiskProfile	access:public	signature:()
DiskProfile::RunSMARTSelfTest	./RAIDManager.h	/^	bool RunSMARTSelfTest(int type)$/;"	f	struct:DiskProfile	access:public	signature:(int type)
DiskProfile::SetDiskVendorInfomation	./RAIDManager.h	/^	void SetDiskVendorInfomation()$/;"	f	struct:DiskProfile	access:public	signature:()
DiskProfile::SetSMARTInfo	./RAIDManager.h	/^	void SetSMARTInfo()$/;"	f	struct:DiskProfile	access:public	signature:()
DiskProfile::SetUDEVInformation	./RAIDManager.h	/^	void SetUDEVInformation()$/;"	f	struct:DiskProfile	access:public	signature:()
DiskProfile::m_bSMARTSupport	./RAIDManager.h	/^	bool m_bSMARTSupport;$/;"	m	struct:DiskProfile	access:public
DiskProfile::m_diskType	./RAIDManager.h	/^	eDiskType m_diskType;$/;"	m	struct:DiskProfile	access:public
DiskProfile::m_iBay	./RAIDManager.h	/^	int m_iBay;$/;"	m	struct:DiskProfile	access:public
DiskProfile::m_llCapacity	./RAIDManager.h	/^	uint64_t m_llCapacity;$/;"	m	struct:DiskProfile	access:public
DiskProfile::m_strDevPath	./RAIDManager.h	/^	string m_strDevPath;$/;"	m	struct:DiskProfile	access:public
DiskProfile::m_strFWVer	./RAIDManager.h	/^	string m_strFWVer;$/;"	m	struct:DiskProfile	access:public
DiskProfile::m_strMDDev	./RAIDManager.h	/^	string m_strMDDev;$/;"	m	struct:DiskProfile	access:public
DiskProfile::m_strModel	./RAIDManager.h	/^	string m_strModel;$/;"	m	struct:DiskProfile	access:public
DiskProfile::m_strSMARTOverall	./RAIDManager.h	/^	string m_strSMARTOverall;$/;"	m	struct:DiskProfile	access:public
DiskProfile::m_strSerialNum	./RAIDManager.h	/^	string m_strSerialNum;$/;"	m	struct:DiskProfile	access:public
DiskProfile::m_strSymLink	./RAIDManager.h	/^	string m_strSymLink;$/;"	m	struct:DiskProfile	access:public
DiskProfile::m_strSysName	./RAIDManager.h	/^	string m_strSysName;$/;"	m	struct:DiskProfile	access:public
DiskProfile::m_strVendor	./RAIDManager.h	/^	string m_strVendor;$/;"	m	struct:DiskProfile	access:public
DiskProfile::m_ullSMARTBadSectors	./RAIDManager.h	/^	uint64_t m_ullSMARTBadSectors;$/;"	m	struct:DiskProfile	access:public
DiskProfile::m_ullSMARTTemp	./RAIDManager.h	/^	uint64_t m_ullSMARTTemp;$/;"	m	struct:DiskProfile	access:public
DiskProfile::operator =	./RAIDManager.h	/^	DiskProfile& operator=(const DiskProfile& rhs)$/;"	f	struct:DiskProfile	access:public	signature:(const DiskProfile& rhs)
DiskProfile::operator ==	./RAIDManager.h	/^	bool operator==(const DiskProfile& rhs)$/;"	f	struct:DiskProfile	access:public	signature:(const DiskProfile& rhs)
DiskProfile::~DiskProfile	./RAIDManager.h	/^	~DiskProfile()$/;"	f	struct:DiskProfile	access:public	signature:()
DoFileSystemRecovery	./RAIDManager.h	/^	bool DoFileSystemRecovery();$/;"	p	class:RAIDManager	access:public	signature:()
Dump	./FilesystemManager.cpp	/^void FilesystemManager::Dump()$/;"	f	class:FilesystemManager	signature:()
Dump	./FilesystemManager.h	/^	void Dump();$/;"	p	class:FilesystemManager	access:public	signature:()
Dump	./RAIDManager.cpp	/^void RAIDManager::Dump()$/;"	f	class:RAIDManager	signature:()
Dump	./RAIDManager.h	/^	void Dump() {$/;"	f	struct:MDProfile	access:public	signature:()
Dump	./RAIDManager.h	/^	void Dump()$/;"	f	struct:DiskProfile	access:public	signature:()
Dump	./RAIDManager.h	/^	void Dump()$/;"	f	struct:RAIDDiskInfo	access:public	signature:()
Dump	./RAIDManager.h	/^	void Dump()$/;"	f	struct:RAIDInfo	access:public	signature:()
Dump	./RAIDManager.h	/^	void Dump();$/;"	p	class:RAIDManager	access:public	signature:()
Dump_metadata	./libmdadm/mdadm.h	/^extern int Dump_metadata(char *dev, char *dir, struct context *c,$/;"	p	signature:(char *dev, char *dir, struct context *c, struct supertype *st)
E	./libmdadm/sha1.h	/^  sha1_uint32 E;$/;"	m	struct:sha1_ctx	access:public
E2FSCK_ATTR	./libe2fsck/e2fsck.h	52;"	d
E2FSCK_ATTR	./libe2fsck/e2fsck.h	54;"	d
E2FSCK_CURRENT_REV	./libe2fsck/e2fsck.h	75;"	d
E2F_FLAG_ABORT	./libe2fsck/e2fsck.h	161;"	d
E2F_FLAG_CANCEL	./libe2fsck/e2fsck.h	162;"	d
E2F_FLAG_EXITING	./libe2fsck/e2fsck.h	177;"	d
E2F_FLAG_GOT_DEVSIZE	./libe2fsck/e2fsck.h	176;"	d
E2F_FLAG_JOURNAL_INODE	./libe2fsck/e2fsck.h	171;"	d
E2F_FLAG_PROBLEMS_FIXED	./libe2fsck/e2fsck.h	179;"	d
E2F_FLAG_PROG_BAR	./libe2fsck/e2fsck.h	169;"	d
E2F_FLAG_PROG_SUPPRESS	./libe2fsck/e2fsck.h	170;"	d
E2F_FLAG_RESIZE_INODE	./libe2fsck/e2fsck.h	175;"	d
E2F_FLAG_RESTART	./libe2fsck/e2fsck.h	164;"	d
E2F_FLAG_RESTARTED	./libe2fsck/e2fsck.h	174;"	d
E2F_FLAG_RESTART_LATER	./libe2fsck/e2fsck.h	165;"	d
E2F_FLAG_SB_SPECIFIED	./libe2fsck/e2fsck.h	172;"	d
E2F_FLAG_SETJMP_OK	./libe2fsck/e2fsck.h	167;"	d
E2F_FLAG_SIGNAL_MASK	./libe2fsck/e2fsck.h	163;"	d
E2F_FLAG_TIME_INSANE	./libe2fsck/e2fsck.h	178;"	d
E2F_OPT_CHECKBLOCKS	./libe2fsck/e2fsck.h	149;"	d
E2F_OPT_COMPRESS_DIRS	./libe2fsck/e2fsck.h	153;"	d
E2F_OPT_DEBUG	./libe2fsck/e2fsck.h	150;"	d
E2F_OPT_DISCARD	./libe2fsck/e2fsck.h	156;"	d
E2F_OPT_FORCE	./libe2fsck/e2fsck.h	151;"	d
E2F_OPT_FRAGCHECK	./libe2fsck/e2fsck.h	154;"	d
E2F_OPT_JOURNAL_ONLY	./libe2fsck/e2fsck.h	155;"	d
E2F_OPT_NO	./libe2fsck/e2fsck.h	146;"	d
E2F_OPT_PREEN	./libe2fsck/e2fsck.h	144;"	d
E2F_OPT_READONLY	./libe2fsck/e2fsck.h	143;"	d
E2F_OPT_TIME	./libe2fsck/e2fsck.h	147;"	d
E2F_OPT_TIME2	./libe2fsck/e2fsck.h	148;"	d
E2F_OPT_WRITECHECK	./libe2fsck/e2fsck.h	152;"	d
E2F_OPT_YES	./libe2fsck/e2fsck.h	145;"	d
E2F_PASS_1	./libe2fsck/e2fsck.h	186;"	d
E2F_PASS_1B	./libe2fsck/e2fsck.h	191;"	d
E2F_PASS_2	./libe2fsck/e2fsck.h	187;"	d
E2F_PASS_3	./libe2fsck/e2fsck.h	188;"	d
E2F_PASS_4	./libe2fsck/e2fsck.h	189;"	d
E2F_PASS_5	./libe2fsck/e2fsck.h	190;"	d
E2F_RESET_FLAGS	./libe2fsck/e2fsck.h	181;"	d
ERROR_TABLE_BASE_prof	./libmke2fs/prof_err.h	45;"	d
EXAMINE_MEM_ALLOC_FAIL	./libmdadm/mdadm_errcode.h	/^	EXAMINE_MEM_ALLOC_FAIL,$/;"	e	enum:__anon9
EXAMINE_NO_MD_SUPERBLOCK	./libmdadm/mdadm_errcode.h	/^	EXAMINE_NO_MD_SUPERBLOCK,$/;"	e	enum:__anon9
EXAMINE_NULL_POINTER	./libmdadm/mdadm_errcode.h	/^	EXAMINE_NULL_POINTER$/;"	e	enum:__anon9
EXAMINE_OPEN_DEV_FAIL	./libmdadm/mdadm_errcode.h	/^	EXAMINE_OPEN_DEV_FAIL = 601,$/;"	e	enum:__anon9
EXT2FS_ATTR	./libmke2fs/ext2fs.h	16;"	d
EXT2FS_ATTR	./libmke2fs/ext2fs.h	18;"	d
EXT2FS_B2C	./libmke2fs/ext2fs.h	612;"	d
EXT2FS_BMAP64_AUTODIR	./libmke2fs/ext2fs.h	289;"	d
EXT2FS_BMAP64_BITARRAY	./libmke2fs/ext2fs.h	287;"	d
EXT2FS_BMAP64_RBTREE	./libmke2fs/ext2fs.h	288;"	d
EXT2FS_C2B	./libmke2fs/ext2fs.h	614;"	d
EXT2FS_CLUSTER_MASK	./libmke2fs/ext2fs.h	611;"	d
EXT2FS_CLUSTER_RATIO	./libmke2fs/ext2fs.h	610;"	d
EXT2FS_COMPRESSED_BLKADDR	./libmke2fs/ext2fs.h	542;"	d
EXT2FS_MARK_ERROR	./libmke2fs/ext2fs.h	105;"	d
EXT2FS_MAX_NESTED_LINKS	./libmke2fs/ext2fsP.h	14;"	d
EXT2FS_NUM_B2C	./libmke2fs/ext2fs.h	616;"	d
EXT2FS_TEST_ERROR	./libmke2fs/ext2fs.h	107;"	d
EXT2FS_UNMARK_ERROR	./libmke2fs/ext2fs.h	106;"	d
EXT2_CHECK_MAGIC	./libmke2fs/ext2fs.h	535;"	d
EXT2_DIRBLOCK_V2_STRUCT	./libmke2fs/ext2fs.h	418;"	d
EXT2_EXTENT_CURRENT	./libmke2fs/ext2fs.h	367;"	d
EXT2_EXTENT_DELETE_KEEP_EMPTY	./libmke2fs/ext2fs.h	392;"	d
EXT2_EXTENT_DOWN	./libmke2fs/ext2fs.h	380;"	d
EXT2_EXTENT_DOWN_AND_LAST	./libmke2fs/ext2fs.h	381;"	d
EXT2_EXTENT_FIRST_SIB	./libmke2fs/ext2fs.h	371;"	d
EXT2_EXTENT_FLAGS_LEAF	./libmke2fs/ext2fs.h	350;"	d
EXT2_EXTENT_FLAGS_SECOND_VISIT	./libmke2fs/ext2fs.h	352;"	d
EXT2_EXTENT_FLAGS_UNINIT	./libmke2fs/ext2fs.h	351;"	d
EXT2_EXTENT_INSERT_AFTER	./libmke2fs/ext2fs.h	386;"	d
EXT2_EXTENT_INSERT_NOSPLIT	./libmke2fs/ext2fs.h	387;"	d
EXT2_EXTENT_LAST_LEAF	./libmke2fs/ext2fs.h	370;"	d
EXT2_EXTENT_LAST_SIB	./libmke2fs/ext2fs.h	372;"	d
EXT2_EXTENT_MOVE_MASK	./libmke2fs/ext2fs.h	368;"	d
EXT2_EXTENT_NEXT	./libmke2fs/ext2fs.h	377;"	d
EXT2_EXTENT_NEXT_LEAF	./libmke2fs/ext2fs.h	375;"	d
EXT2_EXTENT_NEXT_SIB	./libmke2fs/ext2fs.h	373;"	d
EXT2_EXTENT_PREV	./libmke2fs/ext2fs.h	378;"	d
EXT2_EXTENT_PREV_LEAF	./libmke2fs/ext2fs.h	376;"	d
EXT2_EXTENT_PREV_SIB	./libmke2fs/ext2fs.h	374;"	d
EXT2_EXTENT_ROOT	./libmke2fs/ext2fs.h	369;"	d
EXT2_EXTENT_SET_BMAP_UNINIT	./libmke2fs/ext2fs.h	397;"	d
EXT2_EXTENT_UP	./libmke2fs/ext2fs.h	379;"	d
EXT2_FILE_BUF_DIRTY	./libmke2fs/ext2fs.h	161;"	d
EXT2_FILE_BUF_VALID	./libmke2fs/ext2fs.h	162;"	d
EXT2_FILE_CREATE	./libmke2fs/ext2fs.h	157;"	d
EXT2_FILE_MASK	./libmke2fs/ext2fs.h	159;"	d
EXT2_FILE_WRITE	./libmke2fs/ext2fs.h	156;"	d
EXT2_FIRST_INODE	./libmke2fs/ext2fs.h	113;"	d
EXT2_FLAG_64BITS	./libmke2fs/ext2fs.h	190;"	d
EXT2_FLAG_BB_DIRTY	./libmke2fs/ext2fs.h	178;"	d
EXT2_FLAG_CHANGED	./libmke2fs/ext2fs.h	174;"	d
EXT2_FLAG_DIRECT_IO	./libmke2fs/ext2fs.h	192;"	d
EXT2_FLAG_DIRTY	./libmke2fs/ext2fs.h	175;"	d
EXT2_FLAG_EXCLUSIVE	./libmke2fs/ext2fs.h	187;"	d
EXT2_FLAG_FLUSH_NO_SYNC	./libmke2fs/ext2fs.h	629;"	d
EXT2_FLAG_FORCE	./libmke2fs/ext2fs.h	183;"	d
EXT2_FLAG_IB_DIRTY	./libmke2fs/ext2fs.h	177;"	d
EXT2_FLAG_IMAGE_FILE	./libmke2fs/ext2fs.h	186;"	d
EXT2_FLAG_JOURNAL_DEV_OK	./libmke2fs/ext2fs.h	185;"	d
EXT2_FLAG_MASTER_SB_ONLY	./libmke2fs/ext2fs.h	182;"	d
EXT2_FLAG_NOFREE_ON_ERROR	./libmke2fs/ext2fs.h	189;"	d
EXT2_FLAG_PRINT_PROGRESS	./libmke2fs/ext2fs.h	191;"	d
EXT2_FLAG_RW	./libmke2fs/ext2fs.h	173;"	d
EXT2_FLAG_SKIP_MMP	./libmke2fs/ext2fs.h	193;"	d
EXT2_FLAG_SOFTSUPP_FEATURES	./libmke2fs/ext2fs.h	188;"	d
EXT2_FLAG_SUPER_ONLY	./libmke2fs/ext2fs.h	184;"	d
EXT2_FLAG_SWAP_BYTES	./libmke2fs/ext2fs.h	179;"	d
EXT2_FLAG_SWAP_BYTES_READ	./libmke2fs/ext2fs.h	180;"	d
EXT2_FLAG_SWAP_BYTES_WRITE	./libmke2fs/ext2fs.h	181;"	d
EXT2_FLAG_VALID	./libmke2fs/ext2fs.h	176;"	d
EXT2_ICOUNT_OPT_INCREMENT	./libmke2fs/ext2fs.h	510;"	d
EXT2_I_SIZE	./libmke2fs/ext2fs.h	505;"	d
EXT2_LIB_CURRENT_REV	./libmke2fs/ext2fs.h	46;"	d
EXT2_LIB_FEATURE_COMPAT_SUPP	./libmke2fs/ext2fs.h	548;"	d
EXT2_LIB_FEATURE_INCOMPAT_SUPP	./libmke2fs/ext2fs.h	563;"	d
EXT2_LIB_FEATURE_INCOMPAT_SUPP	./libmke2fs/ext2fs.h	573;"	d
EXT2_LIB_FEATURE_RO_COMPAT_SUPP	./libmke2fs/ext2fs.h	583;"	d
EXT2_LIB_FEATURE_RO_COMPAT_SUPP	./libmke2fs/ext2fs.h	592;"	d
EXT2_LIB_SOFTSUPP_INCOMPAT	./libmke2fs/ext2fs.h	605;"	d
EXT2_LIB_SOFTSUPP_RO_COMPAT	./libmke2fs/ext2fs.h	606;"	d
EXT2_MF_BUSY	./libmke2fs/ext2fs.h	460;"	d
EXT2_MF_ISROOT	./libmke2fs/ext2fs.h	457;"	d
EXT2_MF_MOUNTED	./libmke2fs/ext2fs.h	456;"	d
EXT2_MF_READONLY	./libmke2fs/ext2fs.h	458;"	d
EXT2_MF_SWAP	./libmke2fs/ext2fs.h	459;"	d
EXT2_MKJOURNAL_LAZYINIT	./libmke2fs/ext2fs.h	205;"	d
EXT2_MKJOURNAL_NO_MNT_CHECK	./libmke2fs/ext2fs.h	206;"	d
EXT2_MKJOURNAL_V1_SUPER	./libmke2fs/ext2fs.h	204;"	d
EXT2_NEW_INODE_FL	./libmke2fs/ext2fs.h	199;"	d
EXT2_QSORT_TYPE	./libmke2fs/ext2fs.h	100;"	d
EXT2_QSORT_TYPE	./libmke2fs/ext2fs.h	98;"	d
EXT2_SEEK_CUR	./libmke2fs/ext2fs.h	167;"	d
EXT2_SEEK_END	./libmke2fs/ext2fs.h	168;"	d
EXT2_SEEK_SET	./libmke2fs/ext2fs.h	166;"	d
EXT2_SF_BAD_EXTRA_BYTES	./libmke2fs/ext2fs.h	449;"	d
EXT2_SF_BAD_INODE_BLK	./libmke2fs/ext2fs.h	448;"	d
EXT2_SF_CHK_BADBLOCKS	./libmke2fs/ext2fs.h	447;"	d
EXT2_SF_DO_LAZY	./libmke2fs/ext2fs.h	451;"	d
EXT2_SF_SKIP_MISSING_ITABLE	./libmke2fs/ext2fs.h	450;"	d
Examine	./libmdadm/mdadm.h	/^extern int Examine(struct mddev_dev *devlist, struct context *c,$/;"	p	signature:(struct mddev_dev *devlist, struct context *c, struct supertype *forcest)
ExamineBadblocks	./libmdadm/mdadm.h	/^extern int ExamineBadblocks(char *devname, int brief, struct supertype *forcest);$/;"	p	signature:(char *devname, int brief, struct supertype *forcest)
ExamineBitmap	./libmdadm/mdadm.h	/^extern int ExamineBitmap(char *filename, int brief, struct supertype *st);$/;"	p	signature:(char *filename, int brief, struct supertype *st)
Examine_ToResult	./libmdadm/mdadm.h	/^extern int Examine_ToResult(struct mddev_dev *devlist,$/;"	p	signature:(struct mddev_dev *devlist, struct context *c, struct supertype *forcest, struct examine_result *result)
FAILED_SLOTS_DIR	./libmdadm/mdadm.h	101;"	d
FOREIGN	./libmdadm/mdadm.h	1325;"	d
FSCK_CANCELED	./libe2fsck/e2fsck.h	68;"	d
FSCK_ERROR	./libe2fsck/e2fsck.h	66;"	d
FSCK_LIBRARY	./libe2fsck/e2fsck.h	69;"	d
FSCK_NONDESTRUCT	./libe2fsck/e2fsck.h	63;"	d
FSCK_OK	./libe2fsck/e2fsck.h	62;"	d
FSCK_REBOOT	./libe2fsck/e2fsck.h	64;"	d
FSCK_UNCORRECTED	./libe2fsck/e2fsck.h	65;"	d
FSCK_USAGE	./libe2fsck/e2fsck.h	67;"	d
FTW	./libmdadm/mdadm.h	/^  struct FTW {};$/;"	s
FTW_PHYS	./libmdadm/mdadm.h	1108;"	d
FilesystemManager	./FilesystemManager.cpp	/^FilesystemManager::FilesystemManager()$/;"	f	class:FilesystemManager	signature:()
FilesystemManager	./FilesystemManager.cpp	/^FilesystemManager::FilesystemManager(const string& dev)$/;"	f	class:FilesystemManager	signature:(const string& dev)
FilesystemManager	./FilesystemManager.h	/^	FilesystemManager();$/;"	p	class:FilesystemManager	access:public	signature:()
FilesystemManager	./FilesystemManager.h	/^	FilesystemManager(const string& dev);$/;"	p	class:FilesystemManager	access:public	signature:(const string& dev)
FilesystemManager	./FilesystemManager.h	/^class FilesystemManager: public  AprThreadWorker$/;"	c	inherits:AprThreadWorker,FilesystemManager
FilesystemManager::CreateDefaultFolders	./FilesystemManager.cpp	/^bool FilesystemManager::CreateDefaultFolders()$/;"	f	class:FilesystemManager	signature:()
FilesystemManager::CreateDefaultFolders	./FilesystemManager.h	/^	bool CreateDefaultFolders();$/;"	p	class:FilesystemManager	access:public	signature:()
FilesystemManager::Dump	./FilesystemManager.cpp	/^void FilesystemManager::Dump()$/;"	f	class:FilesystemManager	signature:()
FilesystemManager::Dump	./FilesystemManager.h	/^	void Dump();$/;"	p	class:FilesystemManager	access:public	signature:()
FilesystemManager::FilesystemManager	./FilesystemManager.cpp	/^FilesystemManager::FilesystemManager()$/;"	f	class:FilesystemManager	signature:()
FilesystemManager::FilesystemManager	./FilesystemManager.cpp	/^FilesystemManager::FilesystemManager(const string& dev)$/;"	f	class:FilesystemManager	signature:(const string& dev)
FilesystemManager::FilesystemManager	./FilesystemManager.h	/^	FilesystemManager();$/;"	p	class:FilesystemManager	access:public	signature:()
FilesystemManager::FilesystemManager	./FilesystemManager.h	/^	FilesystemManager(const string& dev);$/;"	p	class:FilesystemManager	access:public	signature:(const string& dev)
FilesystemManager::Format	./FilesystemManager.cpp	/^bool FilesystemManager::Format(bool force)$/;"	f	class:FilesystemManager	signature:(bool force)
FilesystemManager::Format	./FilesystemManager.h	/^	bool Format(bool force = true);$/;"	p	class:FilesystemManager	access:public	signature:(bool force = true)
FilesystemManager::GenerateUUIDFile	./FilesystemManager.cpp	/^void FilesystemManager::GenerateUUIDFile()$/;"	f	class:FilesystemManager	signature:()
FilesystemManager::GenerateUUIDFile	./FilesystemManager.h	/^	void GenerateUUIDFile();$/;"	p	class:FilesystemManager	access:public	signature:()
FilesystemManager::GetMountPoint	./FilesystemManager.cpp	/^string FilesystemManager::GetMountPoint()$/;"	f	class:FilesystemManager	signature:()
FilesystemManager::GetMountPoint	./FilesystemManager.cpp	/^string FilesystemManager::GetMountPoint(const int& num)$/;"	f	class:FilesystemManager	signature:(const int& num)
FilesystemManager::GetMountPoint	./FilesystemManager.h	/^	string GetMountPoint();$/;"	p	class:FilesystemManager	access:public	signature:()
FilesystemManager::GetMountPoint	./FilesystemManager.h	/^	string GetMountPoint(const int &num);$/;"	p	class:FilesystemManager	access:public	signature:(const int &num)
FilesystemManager::GetVolumeNum	./FilesystemManager.cpp	/^int FilesystemManager::GetVolumeNum()$/;"	f	class:FilesystemManager	signature:()
FilesystemManager::GetVolumeNum	./FilesystemManager.h	/^	int GetVolumeNum();$/;"	p	class:FilesystemManager	access:public	signature:()
FilesystemManager::Initialize	./FilesystemManager.cpp	/^bool FilesystemManager::Initialize()$/;"	f	class:FilesystemManager	signature:()
FilesystemManager::Initialize	./FilesystemManager.h	/^	bool Initialize();$/;"	p	class:FilesystemManager	access:public	signature:()
FilesystemManager::InitializeMke2fsHandle	./FilesystemManager.cpp	/^void FilesystemManager::InitializeMke2fsHandle()$/;"	f	class:FilesystemManager	signature:()
FilesystemManager::InitializeMke2fsHandle	./FilesystemManager.h	/^	void InitializeMke2fsHandle();$/;"	p	class:FilesystemManager	access:private	signature:()
FilesystemManager::IsFormated	./FilesystemManager.cpp	/^bool FilesystemManager::IsFormated()$/;"	f	class:FilesystemManager	signature:()
FilesystemManager::IsFormated	./FilesystemManager.h	/^	bool IsFormated();$/;"	p	class:FilesystemManager	access:public	signature:()
FilesystemManager::IsFormating	./FilesystemManager.cpp	/^bool FilesystemManager::IsFormating(int& progress, int& stat)$/;"	f	class:FilesystemManager	signature:(int& progress, int& stat)
FilesystemManager::IsFormating	./FilesystemManager.h	/^	bool IsFormating(int& progress, int& stat);$/;"	p	class:FilesystemManager	access:public	signature:(int& progress, int& stat)
FilesystemManager::IsInitialized	./FilesystemManager.cpp	/^bool FilesystemManager::IsInitialized()$/;"	f	class:FilesystemManager	signature:()
FilesystemManager::IsInitialized	./FilesystemManager.h	/^	bool IsInitialized();$/;"	p	class:FilesystemManager	access:public	signature:()
FilesystemManager::IsMountPoint	./FilesystemManager.cpp	/^bool FilesystemManager::IsMountPoint(const string& path)$/;"	f	class:FilesystemManager	signature:(const string& path)
FilesystemManager::IsMountPoint	./FilesystemManager.h	/^	static bool IsMountPoint(const string& path);$/;"	p	class:FilesystemManager	access:public	signature:(const string& path)
FilesystemManager::IsMounted	./FilesystemManager.cpp	/^bool FilesystemManager::IsMounted()$/;"	f	class:FilesystemManager	signature:()
FilesystemManager::IsMounted	./FilesystemManager.cpp	/^bool FilesystemManager::IsMounted(int& num)$/;"	f	class:FilesystemManager	signature:(int& num)
FilesystemManager::IsMounted	./FilesystemManager.cpp	/^bool FilesystemManager::IsMounted(string& strMountPoint)$/;"	f	class:FilesystemManager	signature:(string& strMountPoint)
FilesystemManager::IsMounted	./FilesystemManager.h	/^	bool IsMounted();$/;"	p	class:FilesystemManager	access:public	signature:()
FilesystemManager::IsMounted	./FilesystemManager.h	/^	bool IsMounted(int& num);$/;"	p	class:FilesystemManager	access:public	signature:(int& num)
FilesystemManager::IsMounted	./FilesystemManager.h	/^	bool IsMounted(string& strMountPoint);$/;"	p	class:FilesystemManager	access:public	signature:(string& strMountPoint)
FilesystemManager::MakeFilesystemProgress	./FilesystemManager.cpp	/^void FilesystemManager::MakeFilesystemProgress(void *pData, int stat,$/;"	f	class:FilesystemManager	signature:(void *pData, int stat, int current, int total)
FilesystemManager::MakeFilesystemProgress	./FilesystemManager.h	/^	static void MakeFilesystemProgress(void *pData, int stat,$/;"	p	class:FilesystemManager	access:public	signature:(void *pData, int stat, int current, int total)
FilesystemManager::Mount	./FilesystemManager.cpp	/^bool FilesystemManager::Mount()$/;"	f	class:FilesystemManager	signature:()
FilesystemManager::Mount	./FilesystemManager.cpp	/^bool FilesystemManager::Mount(const string& strMountPoint)$/;"	f	class:FilesystemManager	signature:(const string& strMountPoint)
FilesystemManager::Mount	./FilesystemManager.h	/^	bool Mount();$/;"	p	class:FilesystemManager	access:public	signature:()
FilesystemManager::Mount	./FilesystemManager.h	/^	bool Mount(const string& strMountPoint);$/;"	p	class:FilesystemManager	access:public	signature:(const string& strMountPoint)
FilesystemManager::SetDeviceNode	./FilesystemManager.cpp	/^bool FilesystemManager::SetDeviceNode(const string &dev)$/;"	f	class:FilesystemManager	signature:(const string &dev)
FilesystemManager::SetDeviceNode	./FilesystemManager.h	/^	bool SetDeviceNode(const string &dev);$/;"	p	class:FilesystemManager	access:public	signature:(const string &dev)
FilesystemManager::SetFormatInfo	./FilesystemManager.cpp	/^void FilesystemManager::SetFormatInfo(bool format, int progress, int stat)$/;"	f	class:FilesystemManager	signature:(bool format, int progress, int stat)
FilesystemManager::SetFormatInfo	./FilesystemManager.h	/^	void SetFormatInfo(bool format, int progress,$/;"	p	class:FilesystemManager	access:public	signature:(bool format, int progress, int stat)
FilesystemManager::SetMountPoint	./FilesystemManager.cpp	/^void FilesystemManager::SetMountPoint(const string &mountpoint)$/;"	f	class:FilesystemManager	signature:(const string &mountpoint)
FilesystemManager::SetMountPoint	./FilesystemManager.h	/^	void SetMountPoint(const string &mountpoint);$/;"	p	class:FilesystemManager	access:public	signature:(const string &mountpoint)
FilesystemManager::SetVolumeNum	./FilesystemManager.cpp	/^void FilesystemManager::SetVolumeNum(const int &num)$/;"	f	class:FilesystemManager	signature:(const int &num)
FilesystemManager::SetVolumeNum	./FilesystemManager.h	/^	void SetVolumeNum(const int &num);$/;"	p	class:FilesystemManager	access:public	signature:(const int &num)
FilesystemManager::ThreadProc	./FilesystemManager.cpp	/^void FilesystemManager::ThreadProc()$/;"	f	class:FilesystemManager	signature:()
FilesystemManager::ThreadProc	./FilesystemManager.h	/^	void ThreadProc();$/;"	p	class:FilesystemManager	access:protected	signature:()
FilesystemManager::Unmount	./FilesystemManager.cpp	/^bool FilesystemManager::Unmount()$/;"	f	class:FilesystemManager	signature:()
FilesystemManager::Unmount	./FilesystemManager.h	/^	bool Unmount();$/;"	p	class:FilesystemManager	access:public	signature:()
FilesystemManager::blkid	./FilesystemManager.cpp	/^int FilesystemManager::blkid()$/;"	f	class:FilesystemManager	signature:()
FilesystemManager::blkid	./FilesystemManager.h	/^	int blkid();$/;"	p	class:FilesystemManager	access:private	signature:()
FilesystemManager::dostat	./FilesystemManager.cpp	/^bool FilesystemManager::dostat(const string& path, struct stat *st,$/;"	f	class:FilesystemManager	signature:(const string& path, struct stat *st, int do_lstat, int quiet)
FilesystemManager::dostat	./FilesystemManager.h	/^	static bool dostat(const string& path, struct stat *st,$/;"	p	class:FilesystemManager	access:public	signature:(const string& path, struct stat *st, int do_lstat, int quiet)
FilesystemManager::m_bFormat	./FilesystemManager.h	/^	bool m_bFormat;$/;"	m	class:FilesystemManager	access:private
FilesystemManager::m_bInitialized	./FilesystemManager.h	/^	bool m_bInitialized;$/;"	m	class:FilesystemManager	access:private
FilesystemManager::m_bMount	./FilesystemManager.h	/^	bool m_bMount;$/;"	m	class:FilesystemManager	access:private
FilesystemManager::m_csFormat	./FilesystemManager.h	/^	CriticalSection m_csFormat;$/;"	m	class:FilesystemManager	access:private
FilesystemManager::m_csInitialized	./FilesystemManager.h	/^	CriticalSection m_csInitialized;$/;"	m	class:FilesystemManager	access:private
FilesystemManager::m_csMount	./FilesystemManager.h	/^	CriticalSection m_csMount;$/;"	m	class:FilesystemManager	access:private
FilesystemManager::m_iFormatProgress	./FilesystemManager.h	/^	int m_iFormatProgress;$/;"	m	class:FilesystemManager	access:private
FilesystemManager::m_iFormatingState	./FilesystemManager.h	/^	int m_iFormatingState;$/;"	m	class:FilesystemManager	access:private
FilesystemManager::m_iVolumeNum	./FilesystemManager.h	/^	int m_iVolumeNum;$/;"	m	class:FilesystemManager	access:private
FilesystemManager::m_mkfsHandle	./FilesystemManager.h	/^	mke2fs_handle m_mkfsHandle;$/;"	m	class:FilesystemManager	access:private
FilesystemManager::m_strDevNode	./FilesystemManager.h	/^	string m_strDevNode;$/;"	m	class:FilesystemManager	access:private
FilesystemManager::m_strFSType	./FilesystemManager.h	/^	string m_strFSType;$/;"	m	class:FilesystemManager	access:private
FilesystemManager::m_strMountPoint	./FilesystemManager.h	/^	string m_strMountPoint;$/;"	m	class:FilesystemManager	access:private
FilesystemManager::m_strUUID	./FilesystemManager.h	/^	string m_strUUID;$/;"	m	class:FilesystemManager	access:private
FilesystemManager::~FilesystemManager	./FilesystemManager.cpp	/^FilesystemManager::~FilesystemManager()$/;"	f	class:FilesystemManager	signature:()
FilesystemManager::~FilesystemManager	./FilesystemManager.h	/^	virtual ~FilesystemManager();$/;"	p	class:FilesystemManager	access:public	signature:()
Format	./FilesystemManager.cpp	/^bool FilesystemManager::Format(bool force)$/;"	f	class:FilesystemManager	signature:(bool force)
Format	./FilesystemManager.h	/^	bool Format(bool force = true);$/;"	p	class:FilesystemManager	access:public	signature:(bool force = true)
Format	./RAIDManager.cpp	/^bool RAIDManager::Format(const string& mddev)$/;"	f	class:RAIDManager	signature:(const string& mddev)
Format	./RAIDManager.h	/^	bool Format(const string& mddev);$/;"	p	class:RAIDManager	access:public	signature:(const string& mddev)
FreeDevList	./RAIDManager.cpp	/^void RAIDManager::FreeDevList(struct mddev_dev* devlist)$/;"	f	class:RAIDManager	signature:(struct mddev_dev* devlist)
FreeDevList	./RAIDManager.h	/^	void FreeDevList(struct mddev_dev* devlist);$/;"	p	class:RAIDManager	access:private	signature:(struct mddev_dev* devlist)
FreeMDNum	./RAIDManager.cpp	/^void RAIDManager::FreeMDNum(int n)$/;"	f	class:RAIDManager	signature:(int n)
FreeMDNum	./RAIDManager.h	/^	void FreeMDNum(int n);$/;"	p	class:RAIDManager	access:private	signature:(int n)
FreeVolumeNum	./RAIDManager.cpp	/^void RAIDManager::FreeVolumeNum(int n)$/;"	f	class:RAIDManager	signature:(int n)
FreeVolumeNum	./RAIDManager.h	/^	void FreeVolumeNum(int n);$/;"	p	class:RAIDManager	access:private	signature:(int n)
GCD	./libmdadm/mdadm.h	/^extern unsigned long GCD(unsigned long a, unsigned long b);$/;"	p	signature:(unsigned long a, unsigned long b)
GET_ARRAY_INFO	./libmdadm/md_u.h	22;"	d
GET_BITMAP_FILE	./libmdadm/md_u.h	26;"	d
GET_BITMAP_LOCATION	./libmdadm/mdadm.h	/^	GET_BITMAP_LOCATION = (1 << 10),$/;"	e	enum:sysfs_read_flags
GET_CACHE	./libmdadm/mdadm.h	/^	GET_CACHE	= (1 << 4),$/;"	e	enum:sysfs_read_flags
GET_CHUNK	./libmdadm/mdadm.h	/^	GET_CHUNK	= (1 << 3),$/;"	e	enum:sysfs_read_flags
GET_COMPONENT	./libmdadm/mdadm.h	/^	GET_COMPONENT	= (1 << 2),$/;"	e	enum:sysfs_read_flags
GET_DEGRADED	./libmdadm/mdadm.h	/^	GET_DEGRADED	= (1 << 8),$/;"	e	enum:sysfs_read_flags
GET_DEVS	./libmdadm/mdadm.h	/^	GET_DEVS	= (1 << 20), \/* gets role, major, minor *\/$/;"	e	enum:sysfs_read_flags
GET_DISKS	./libmdadm/mdadm.h	/^	GET_DISKS	= (1 << 7),$/;"	e	enum:sysfs_read_flags
GET_DISK_INFO	./libmdadm/md_u.h	23;"	d
GET_ERROR	./libmdadm/mdadm.h	/^	GET_ERROR	= (1 << 24),$/;"	e	enum:sysfs_read_flags
GET_LAYOUT	./libmdadm/mdadm.h	/^	GET_LAYOUT	= (1 << 1),$/;"	e	enum:sysfs_read_flags
GET_LEVEL	./libmdadm/mdadm.h	/^	GET_LEVEL	= (1 << 0),$/;"	e	enum:sysfs_read_flags
GET_MISMATCH	./libmdadm/mdadm.h	/^	GET_MISMATCH	= (1 << 5),$/;"	e	enum:sysfs_read_flags
GET_OFFSET	./libmdadm/mdadm.h	/^	GET_OFFSET	= (1 << 21),$/;"	e	enum:sysfs_read_flags
GET_SAFEMODE	./libmdadm/mdadm.h	/^	GET_SAFEMODE	= (1 << 9),$/;"	e	enum:sysfs_read_flags
GET_SIZE	./libmdadm/mdadm.h	/^	GET_SIZE	= (1 << 22),$/;"	e	enum:sysfs_read_flags
GET_STATE	./libmdadm/mdadm.h	/^	GET_STATE	= (1 << 23),$/;"	e	enum:sysfs_read_flags
GET_VERSION	./libmdadm/mdadm.h	/^	GET_VERSION	= (1 << 6),$/;"	e	enum:sysfs_read_flags
GPT	./libmdadm/part.h	/^struct GPT {$/;"	s
GPT::backup_lba	./libmdadm/part.h	/^	__u64 backup_lba;$/;"	m	struct:GPT	access:public
GPT::crc	./libmdadm/part.h	/^	__u32 crc;$/;"	m	struct:GPT	access:public
GPT::current_lba	./libmdadm/part.h	/^	__u64 current_lba;$/;"	m	struct:GPT	access:public
GPT::first_lba	./libmdadm/part.h	/^	__u64 first_lba;$/;"	m	struct:GPT	access:public
GPT::guid	./libmdadm/part.h	/^	__u8 guid[16];$/;"	m	struct:GPT	access:public
GPT::header_size	./libmdadm/part.h	/^	__u32 header_size;$/;"	m	struct:GPT	access:public
GPT::last_lba	./libmdadm/part.h	/^	__u64 last_lba;$/;"	m	struct:GPT	access:public
GPT::magic	./libmdadm/part.h	/^	__u64 magic;$/;"	m	struct:GPT	access:public
GPT::pad1	./libmdadm/part.h	/^	__u32 pad1;$/;"	m	struct:GPT	access:public
GPT::pad2	./libmdadm/part.h	/^	__u8 pad2[420];$/;"	m	struct:GPT	access:public
GPT::part_cnt	./libmdadm/part.h	/^	__u32 part_cnt;$/;"	m	struct:GPT	access:public
GPT::part_crc	./libmdadm/part.h	/^	__u32 part_crc;$/;"	m	struct:GPT	access:public
GPT::part_size	./libmdadm/part.h	/^	__u32 part_size;$/;"	m	struct:GPT	access:public
GPT::part_start	./libmdadm/part.h	/^	__u64 part_start;$/;"	m	struct:GPT	access:public
GPT::revision	./libmdadm/part.h	/^	__u32 revision;$/;"	m	struct:GPT	access:public
GPT_SIGNATURE_MAGIC	./libmdadm/part.h	51;"	d
GPT_part_entry	./libmdadm/part.h	/^struct GPT_part_entry {$/;"	s
GPT_part_entry::attr_bits	./libmdadm/part.h	/^	unsigned char attr_bits[8];$/;"	m	struct:GPT_part_entry	access:public
GPT_part_entry::ending_lba	./libmdadm/part.h	/^	__u64 ending_lba;$/;"	m	struct:GPT_part_entry	access:public
GPT_part_entry::name	./libmdadm/part.h	/^	unsigned char name[72];$/;"	m	struct:GPT_part_entry	access:public
GPT_part_entry::partition_guid	./libmdadm/part.h	/^	unsigned char partition_guid[16];$/;"	m	struct:GPT_part_entry	access:public
GPT_part_entry::starting_lba	./libmdadm/part.h	/^	__u64 starting_lba;$/;"	m	struct:GPT_part_entry	access:public
GPT_part_entry::type_guid	./libmdadm/part.h	/^	unsigned char type_guid[16];$/;"	m	struct:GPT_part_entry	access:public
GROW	./libmdadm/mdadm.h	/^	GROW,$/;"	e	enum:mode
GenerateMDSysName	./RAIDManager.cpp	/^string RAIDManager::GenerateMDSysName(int num)$/;"	f	class:RAIDManager	signature:(int num)
GenerateMDSysName	./RAIDManager.h	/^	string GenerateMDSysName(int num);$/;"	p	class:RAIDManager	access:private	signature:(int num)
GenerateRAIDInfo	./RAIDManager.cpp	/^bool RAIDManager::GenerateRAIDInfo(const MDProfile &profile, RAIDInfo& info)$/;"	f	class:RAIDManager	signature:(const MDProfile &profile, RAIDInfo& info)
GenerateRAIDInfo	./RAIDManager.h	/^	bool GenerateRAIDInfo(const MDProfile &profile, RAIDInfo& info);$/;"	p	class:RAIDManager	access:private	signature:(const MDProfile &profile, RAIDInfo& info)
GenerateUUIDFile	./FilesystemManager.cpp	/^void FilesystemManager::GenerateUUIDFile()$/;"	f	class:FilesystemManager	signature:()
GenerateUUIDFile	./FilesystemManager.h	/^	void GenerateUUIDFile();$/;"	p	class:FilesystemManager	access:public	signature:()
GetDevCapacity	./RAIDManager.h	/^	void GetDevCapacity()$/;"	f	struct:DiskProfile	access:public	signature:()
GetDeviceNodeBySymLink	./RAIDManager.cpp	/^string RAIDManager::GetDeviceNodeBySymLink(const string& symlink)$/;"	f	class:RAIDManager	signature:(const string& symlink)
GetDeviceNodeBySymLink	./RAIDManager.h	/^	string GetDeviceNodeBySymLink(const string& symlink);$/;"	p	class:RAIDManager	access:private	signature:(const string& symlink)
GetFileStorageSize	./test_utils.cpp	/^off_t GetFileStorageSize(const string& pathname)$/;"	f	signature:(const string& pathname)
GetFileStorageSize	./test_utils.h	/^extern off_t GetFileStorageSize(const string& pathname);$/;"	p	signature:(const string& pathname)
GetFileSystemStatus	./RAIDManager.h	/^	bool GetFileSystemStatus();$/;"	p	class:RAIDManager	access:public	signature:()
GetFormatProgress	./RAIDManager.cpp	/^bool RAIDManager::GetFormatProgress(const string& mddev,$/;"	f	class:RAIDManager	signature:(const string& mddev, int& stat, int& progress)
GetFormatProgress	./RAIDManager.h	/^	bool GetFormatProgress(const string& mddev,$/;"	p	class:RAIDManager	access:public	signature:(const string& mddev, int& stat, int& progress)
GetFreeDiskInfo	./RAIDManager.cpp	/^bool RAIDManager::GetFreeDiskInfo(const string& symlink, RAIDDiskInfo &info)$/;"	f	class:RAIDManager	signature:(const string& symlink, RAIDDiskInfo &info)
GetFreeDiskInfo	./RAIDManager.h	/^	bool GetFreeDiskInfo(const string& symlink, RAIDDiskInfo &info);$/;"	p	class:RAIDManager	access:public	signature:(const string& symlink, RAIDDiskInfo &info)
GetFreeDisksInfo	./RAIDManager.cpp	/^void RAIDManager::GetFreeDisksInfo(vector<RAIDDiskInfo> &list)$/;"	f	class:RAIDManager	signature:(vector<RAIDDiskInfo> &list)
GetFreeDisksInfo	./RAIDManager.h	/^	void GetFreeDisksInfo(vector<RAIDDiskInfo> &list);$/;"	p	class:RAIDManager	access:public	signature:(vector<RAIDDiskInfo> &list)
GetFreeMDNum	./RAIDManager.cpp	/^int RAIDManager::GetFreeMDNum()$/;"	f	class:RAIDManager	signature:()
GetFreeMDNum	./RAIDManager.h	/^	int GetFreeMDNum();$/;"	p	class:RAIDManager	access:private	signature:()
GetFreeVolumeNum	./RAIDManager.cpp	/^int RAIDManager::GetFreeVolumeNum()$/;"	f	class:RAIDManager	signature:()
GetFreeVolumeNum	./RAIDManager.h	/^	int GetFreeVolumeNum();$/;"	p	class:RAIDManager	access:private	signature:()
GetLastError	./RAIDManager.cpp	/^void RAIDManager::GetLastError(string &log)$/;"	f	class:RAIDManager	signature:(string &log)
GetLastError	./RAIDManager.h	/^	void GetLastError(string &log);$/;"	p	class:RAIDManager	access:public	signature:(string &log)
GetMountPoint	./FilesystemManager.cpp	/^string FilesystemManager::GetMountPoint()$/;"	f	class:FilesystemManager	signature:()
GetMountPoint	./FilesystemManager.cpp	/^string FilesystemManager::GetMountPoint(const int& num)$/;"	f	class:FilesystemManager	signature:(const int& num)
GetMountPoint	./FilesystemManager.h	/^	string GetMountPoint();$/;"	p	class:FilesystemManager	access:public	signature:()
GetMountPoint	./FilesystemManager.h	/^	string GetMountPoint(const int &num);$/;"	p	class:FilesystemManager	access:public	signature:(const int &num)
GetRAIDInfo	./RAIDManager.cpp	/^bool RAIDManager::GetRAIDInfo(const string& mddev, RAIDInfo& info)$/;"	f	class:RAIDManager	signature:(const string& mddev, RAIDInfo& info)
GetRAIDInfo	./RAIDManager.cpp	/^void RAIDManager::GetRAIDInfo(vector<RAIDInfo>& list)$/;"	f	class:RAIDManager	signature:(vector<RAIDInfo>& list)
GetRAIDInfo	./RAIDManager.h	/^	bool GetRAIDInfo(const string& mddev, RAIDInfo& info);$/;"	p	class:RAIDManager	access:public	signature:(const string& mddev, RAIDInfo& info)
GetRAIDInfo	./RAIDManager.h	/^	void GetRAIDInfo(vector<RAIDInfo>& list);$/;"	p	class:RAIDManager	access:public	signature:(vector<RAIDInfo>& list)
GetVolumeNum	./FilesystemManager.cpp	/^int FilesystemManager::GetVolumeNum()$/;"	f	class:FilesystemManager	signature:()
GetVolumeNum	./FilesystemManager.h	/^	int GetVolumeNum();$/;"	p	class:FilesystemManager	access:public	signature:()
Grow_Add_device	./libmdadm/mdadm.h	/^extern int Grow_Add_device(char *devname, int fd, char *newdev);$/;"	p	signature:(char *devname, int fd, char *newdev)
Grow_addbitmap	./libmdadm/mdadm.h	/^extern int Grow_addbitmap(char *devname, int fd,$/;"	p	signature:(char *devname, int fd, struct context *c, struct shape *s)
Grow_continue	./libmdadm/mdadm.h	/^extern int Grow_continue(int mdfd, struct supertype *st,$/;"	p	signature:(int mdfd, struct supertype *st, struct mdinfo *info, char *backup_file, int forked, int freeze_reshape)
Grow_continue_command	./libmdadm/mdadm.h	/^extern int Grow_continue_command(char *devname, int fd,$/;"	p	signature:(char *devname, int fd, char *backup_file, int verbose)
Grow_reshape	./libmdadm/mdadm.h	/^extern int Grow_reshape(char *devname, int fd,$/;"	p	signature:(char *devname, int fd, struct mddev_dev *devlist, unsigned long long data_offset, struct context *c, struct shape *s)
Grow_restart	./libmdadm/mdadm.h	/^extern int Grow_restart(struct supertype *st, struct mdinfo *info,$/;"	p	signature:(struct supertype *st, struct mdinfo *info, int *fdlist, int cnt, char *backup_file, int verbose)
HAVE_FTW	./libmdadm/mdadm.h	1085;"	d
HAVE_FTW	./libmdadm/mdadm.h	1093;"	d
HAVE_FTW	./libmdadm/mdadm.h	1104;"	d
HAVE_NFTW	./libmdadm/mdadm.h	1084;"	d
HAVE_NFTW	./libmdadm/mdadm.h	1094;"	d
HAVE_NFTW	./libmdadm/mdadm.h	1099;"	d
HAVE_NFTW	./libmdadm/mdadm.h	1103;"	d
HEX	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	328;"	d	file:
HEX	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	328;"	d	file:
HEX	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	328;"	d	file:
HOLE_BLKADDR	./libmke2fs/ext2fs.h	543;"	d
HOT_ADD_DISK	./libmdadm/md_u.h	37;"	d
HOT_REMOVE_DISK	./libmdadm/md_u.h	31;"	d
HandleADDDISK	./unitest/TestingLoop.cpp	/^static void HandleADDDISK (char* content, RAIDManager& raid_mgr)$/;"	f	file:	signature:(char* content, RAIDManager& raid_mgr)
HandleASSEMBLERAID	./unitest/TestingLoop.cpp	/^static void HandleASSEMBLERAID (const char* content, RAIDManager& raid_mgr)$/;"	f	file:	signature:(const char* content, RAIDManager& raid_mgr)
HandleCREATERAID	./unitest/TestingLoop.cpp	/^static void HandleCREATERAID (const char* content, RAIDManager& raid_mgr)$/;"	f	file:	signature:(const char* content, RAIDManager& raid_mgr)
HandleDELETERAID	./unitest/TestingLoop.cpp	/^static void HandleDELETERAID (const char* content, RAIDManager& raid_mgr)$/;"	f	file:	signature:(const char* content, RAIDManager& raid_mgr)
HandleDONOTHING	./unitest/TestingLoop.cpp	/^static void HandleDONOTHING (const char* content, RAIDManager& raid_mgr)$/;"	f	file:	signature:(const char* content, RAIDManager& raid_mgr)
HandleMANAGEMDDISK	./unitest/TestingLoop.cpp	/^static void HandleMANAGEMDDISK (const char* content, RAIDManager& raid_mgr)$/;"	f	file:	signature:(const char* content, RAIDManager& raid_mgr)
HandleREMDISK	./unitest/TestingLoop.cpp	/^static void HandleREMDISK (char* content, RAIDManager& raid_mgr)$/;"	f	file:	signature:(char* content, RAIDManager& raid_mgr)
HandleSTOPRAID	./unitest/TestingLoop.cpp	/^static void HandleSTOPRAID (const char* content, RAIDManager& raid_mgr)$/;"	f	file:	signature:(const char* content, RAIDManager& raid_mgr)
IEC	./libmdadm/mdadm.h	/^	IEC$/;"	e	enum:prefix_standard
IMAGER_FLAG_INODEMAP	./libmke2fs/ext2fs.h	528;"	d
IMAGER_FLAG_SPARSEWRITE	./libmke2fs/ext2fs.h	529;"	d
IMSM_OROM_ATTR_2TB	./libmdadm/platform-intel.h	80;"	d
IMSM_OROM_ATTR_2TB_DISK	./libmdadm/platform-intel.h	79;"	d
IMSM_OROM_ATTR_ChecksumVerify	./libmdadm/platform-intel.h	82;"	d
IMSM_OROM_ATTR_PM	./libmdadm/platform-intel.h	81;"	d
IMSM_OROM_ATTR_RAID0	./libmdadm/platform-intel.h	73;"	d
IMSM_OROM_ATTR_RAID1	./libmdadm/platform-intel.h	74;"	d
IMSM_OROM_ATTR_RAID10	./libmdadm/platform-intel.h	75;"	d
IMSM_OROM_ATTR_RAID1E	./libmdadm/platform-intel.h	76;"	d
IMSM_OROM_ATTR_RAID5	./libmdadm/platform-intel.h	77;"	d
IMSM_OROM_ATTR_RAID_CNG	./libmdadm/platform-intel.h	78;"	d
IMSM_OROM_CAPABILITIES_DiskCoercion	./libmdadm/platform-intel.h	87;"	d
IMSM_OROM_CAPABILITIES_EnterpriseSystem	./libmdadm/platform-intel.h	91;"	d
IMSM_OROM_CAPABILITIES_Ext_SATA	./libmdadm/platform-intel.h	84;"	d
IMSM_OROM_CAPABILITIES_HDDUnlock	./libmdadm/platform-intel.h	89;"	d
IMSM_OROM_CAPABILITIES_HddPassword	./libmdadm/platform-intel.h	86;"	d
IMSM_OROM_CAPABILITIES_LEDLoc	./libmdadm/platform-intel.h	90;"	d
IMSM_OROM_CAPABILITIES_LargeDramCache	./libmdadm/platform-intel.h	93;"	d
IMSM_OROM_CAPABILITIES_ReadPatrol	./libmdadm/platform-intel.h	95;"	d
IMSM_OROM_CAPABILITIES_Rohi	./libmdadm/platform-intel.h	94;"	d
IMSM_OROM_CAPABILITIES_TurboMemory	./libmdadm/platform-intel.h	85;"	d
IMSM_OROM_CAPABILITIES_XorHw	./libmdadm/platform-intel.h	96;"	d
IMSM_OROM_CAPABILITIES_Zpodd	./libmdadm/platform-intel.h	92;"	d
IMSM_OROM_DISKS_PER_ARRAY	./libmdadm/platform-intel.h	61;"	d
IMSM_OROM_RLC_RAID0	./libmdadm/platform-intel.h	37;"	d
IMSM_OROM_RLC_RAID1	./libmdadm/platform-intel.h	38;"	d
IMSM_OROM_RLC_RAID10	./libmdadm/platform-intel.h	39;"	d
IMSM_OROM_RLC_RAID1E	./libmdadm/platform-intel.h	40;"	d
IMSM_OROM_RLC_RAID5	./libmdadm/platform-intel.h	41;"	d
IMSM_OROM_RLC_RAID_CNG	./libmdadm/platform-intel.h	42;"	d
IMSM_OROM_SSS_128kB	./libmdadm/platform-intel.h	50;"	d
IMSM_OROM_SSS_16MB	./libmdadm/platform-intel.h	57;"	d
IMSM_OROM_SSS_16kB	./libmdadm/platform-intel.h	47;"	d
IMSM_OROM_SSS_1MB	./libmdadm/platform-intel.h	53;"	d
IMSM_OROM_SSS_256kB	./libmdadm/platform-intel.h	51;"	d
IMSM_OROM_SSS_2MB	./libmdadm/platform-intel.h	54;"	d
IMSM_OROM_SSS_2kB	./libmdadm/platform-intel.h	44;"	d
IMSM_OROM_SSS_32MB	./libmdadm/platform-intel.h	58;"	d
IMSM_OROM_SSS_32kB	./libmdadm/platform-intel.h	48;"	d
IMSM_OROM_SSS_4MB	./libmdadm/platform-intel.h	55;"	d
IMSM_OROM_SSS_4kB	./libmdadm/platform-intel.h	45;"	d
IMSM_OROM_SSS_512kB	./libmdadm/platform-intel.h	52;"	d
IMSM_OROM_SSS_64MB	./libmdadm/platform-intel.h	59;"	d
IMSM_OROM_SSS_64kB	./libmdadm/platform-intel.h	49;"	d
IMSM_OROM_SSS_8MB	./libmdadm/platform-intel.h	56;"	d
IMSM_OROM_SSS_8kB	./libmdadm/platform-intel.h	46;"	d
IMSM_OROM_TOTAL_DISKS	./libmdadm/platform-intel.h	63;"	d
IMSM_OROM_VOLUMES_PER_ARRAY	./libmdadm/platform-intel.h	65;"	d
IMSM_OROM_VOLUMES_PER_HBA	./libmdadm/platform-intel.h	67;"	d
INCREMENTAL	./libmdadm/mdadm.h	/^	INCREMENTAL,$/;"	e	enum:mode
INCR_ALREADY	./libmdadm/mdadm.h	1291;"	d
INCR_NO	./libmdadm/mdadm.h	1289;"	d
INCR_UNSAFE	./libmdadm/mdadm.h	1290;"	d
INCR_YES	./libmdadm/mdadm.h	1292;"	d
INIT_LIST_HEAD	./libe2fsck/kernel-list.h	20;"	d
INT_MAX	./libmdadm/sha1.h	49;"	d
INT_MAX_32_BITS	./libmdadm/sha1.h	41;"	d
INVALID_SECTORS	./libmdadm/mdadm.h	1519;"	d
Incremental	./libmdadm/mdadm.h	/^extern int Incremental(struct mddev_dev *devlist, struct context *c,$/;"	p	signature:(struct mddev_dev *devlist, struct context *c, struct supertype *st)
IncrementalRemove	./libmdadm/mdadm.h	/^extern int IncrementalRemove(char *devname, char *path, int verbose);$/;"	p	signature:(char *devname, char *path, int verbose)
IncrementalScan	./libmdadm/mdadm.h	/^extern int IncrementalScan(struct context *c, char *devnm);$/;"	p	signature:(struct context *c, char *devnm)
Initialize	./FilesystemManager.cpp	/^bool FilesystemManager::Initialize()$/;"	f	class:FilesystemManager	signature:()
Initialize	./FilesystemManager.h	/^	bool Initialize();$/;"	p	class:FilesystemManager	access:public	signature:()
Initialize	./RAIDManager.cpp	/^bool RAIDManager::Initialize()$/;"	f	class:RAIDManager	signature:()
Initialize	./RAIDManager.h	/^	bool Initialize();$/;"	p	class:RAIDManager	access:private	signature:()
InitializeContext	./RAIDManager.cpp	/^void RAIDManager::InitializeContext(struct context& c, int force, int runstop, int verbose)$/;"	f	class:RAIDManager	signature:(struct context& c, int force, int runstop, int verbose)
InitializeContext	./RAIDManager.h	/^	void InitializeContext(struct context& c, int force = 1, int runstop = 1, int verbose = 0);$/;"	p	class:RAIDManager	access:private	signature:(struct context& c, int force = 1, int runstop = 1, int verbose = 0)
InitializeContext	./RAIDManager.h	/^	void InitializeContext(struct context& c, int force = 1, int runstop = 1, int verbose = 1);$/;"	p	class:RAIDManager	access:private	signature:(struct context& c, int force = 1, int runstop = 1, int verbose = 1)
InitializeDevList	./RAIDManager.cpp	/^struct mddev_dev* RAIDManager::InitializeDevList(const string& replace, const string& with)$/;"	f	class:RAIDManager	signature:(const string& replace, const string& with)
InitializeDevList	./RAIDManager.cpp	/^struct mddev_dev* RAIDManager::InitializeDevList(vector<string>& devNameList, int disposition)$/;"	f	class:RAIDManager	signature:(vector<string>& devNameList, int disposition)
InitializeDevList	./RAIDManager.h	/^	struct mddev_dev* InitializeDevList(const string& replace, const string& with);$/;"	p	class:RAIDManager	access:private	signature:(const string& replace, const string& with)
InitializeDevList	./RAIDManager.h	/^	struct mddev_dev* InitializeDevList(vector<string>& devNameList, int disposition = 0);$/;"	p	class:RAIDManager	access:private	signature:(vector<string>& devNameList, int disposition = 0)
InitializeFSManager	./RAIDManager.h	/^	bool InitializeFSManager() {$/;"	f	struct:MDProfile	access:public	signature:()
InitializeMDDevIdent	./RAIDManager.cpp	/^void RAIDManager::InitializeMDDevIdent(struct mddev_ident& ident, int uuid_set, const int uuid[4], int bitmap_fd, char* bitmap_file)$/;"	f	class:RAIDManager	signature:(struct mddev_ident& ident, int uuid_set, const int uuid[4], int bitmap_fd, char* bitmap_file)
InitializeMDDevIdent	./RAIDManager.h	/^	void InitializeMDDevIdent(struct mddev_ident& ident, int uuid_set, const int uuid[4], int bitmap_fd = -1, char* bitmap_file = NULL);$/;"	p	class:RAIDManager	access:private	signature:(struct mddev_ident& ident, int uuid_set, const int uuid[4], int bitmap_fd = -1, char* bitmap_file = NULL)
InitializeMke2fsHandle	./FilesystemManager.cpp	/^void FilesystemManager::InitializeMke2fsHandle()$/;"	f	class:FilesystemManager	signature:()
InitializeMke2fsHandle	./FilesystemManager.h	/^	void InitializeMke2fsHandle();$/;"	p	class:FilesystemManager	access:private	signature:()
InitializeShape	./RAIDManager.cpp	/^void RAIDManager::InitializeShape(struct shape& s, int raiddisks, int level, int chunk, int bitmap_chunk, char* bitmap_file)$/;"	f	class:RAIDManager	signature:(struct shape& s, int raiddisks, int level, int chunk, int bitmap_chunk, char* bitmap_file)
InitializeShape	./RAIDManager.h	/^	void InitializeShape(struct shape& s, int raiddisks, int level, int chunk = 512, int bitmap_chunk = UnSet, char* bitmap_file = NULL);$/;"	p	class:RAIDManager	access:private	signature:(struct shape& s, int raiddisks, int level, int chunk = 512, int bitmap_chunk = UnSet, char* bitmap_file = NULL)
IsDiskExistInRAIDDiskList	./RAIDManager.h	/^	bool IsDiskExistInRAIDDiskList(const string& dev);$/;"	p	class:RAIDManager	access:private	signature:(const string& dev)
IsDiskExistInRAIDDiskList	./RAIDManager.h	/^	bool IsDiskExistInRAIDDiskList(vector<string>& vDevList);$/;"	p	class:RAIDManager	access:private	signature:(vector<string>& vDevList)
IsFormated	./FilesystemManager.cpp	/^bool FilesystemManager::IsFormated()$/;"	f	class:FilesystemManager	signature:()
IsFormated	./FilesystemManager.h	/^	bool IsFormated();$/;"	p	class:FilesystemManager	access:public	signature:()
IsFormated	./RAIDManager.cpp	/^bool RAIDManager::IsFormated(const string& mddev)$/;"	f	class:RAIDManager	signature:(const string& mddev)
IsFormated	./RAIDManager.h	/^	bool IsFormated(const string& mddev);$/;"	p	class:RAIDManager	access:public	signature:(const string& mddev)
IsFormating	./FilesystemManager.cpp	/^bool FilesystemManager::IsFormating(int& progress, int& stat)$/;"	f	class:FilesystemManager	signature:(int& progress, int& stat)
IsFormating	./FilesystemManager.h	/^	bool IsFormating(int& progress, int& stat);$/;"	p	class:FilesystemManager	access:public	signature:(int& progress, int& stat)
IsInitialized	./FilesystemManager.cpp	/^bool FilesystemManager::IsInitialized()$/;"	f	class:FilesystemManager	signature:()
IsInitialized	./FilesystemManager.h	/^	bool IsInitialized();$/;"	p	class:FilesystemManager	access:public	signature:()
IsMDDevInRAIDInfoList	./RAIDManager.h	/^	vector<RAIDInfo>::iterator IsMDDevInRAIDInfoList(const string &mddev);$/;"	p	class:RAIDManager	access:private	signature:(const string &mddev)
IsMDDevInRAIDInfoList	./RAIDManager.h	/^	vector<RAIDInfo>::iterator IsMDDevInRAIDInfoList(const string &mddev, RAIDInfo& info);$/;"	p	class:RAIDManager	access:private	signature:(const string &mddev, RAIDInfo& info)
IsMountPoint	./FilesystemManager.cpp	/^bool FilesystemManager::IsMountPoint(const string& path)$/;"	f	class:FilesystemManager	signature:(const string& path)
IsMountPoint	./FilesystemManager.h	/^	static bool IsMountPoint(const string& path);$/;"	p	class:FilesystemManager	access:public	signature:(const string& path)
IsMounted	./FilesystemManager.cpp	/^bool FilesystemManager::IsMounted()$/;"	f	class:FilesystemManager	signature:()
IsMounted	./FilesystemManager.cpp	/^bool FilesystemManager::IsMounted(int& num)$/;"	f	class:FilesystemManager	signature:(int& num)
IsMounted	./FilesystemManager.cpp	/^bool FilesystemManager::IsMounted(string& strMountPoint)$/;"	f	class:FilesystemManager	signature:(string& strMountPoint)
IsMounted	./FilesystemManager.h	/^	bool IsMounted();$/;"	p	class:FilesystemManager	access:public	signature:()
IsMounted	./FilesystemManager.h	/^	bool IsMounted(int& num);$/;"	p	class:FilesystemManager	access:public	signature:(int& num)
IsMounted	./FilesystemManager.h	/^	bool IsMounted(string& strMountPoint);$/;"	p	class:FilesystemManager	access:public	signature:(string& strMountPoint)
IsMounted	./RAIDManager.cpp	/^bool RAIDManager::IsMounted(const string& mddev, int &num)$/;"	f	class:RAIDManager	signature:(const string& mddev, int &num)
IsMounted	./RAIDManager.h	/^	bool IsMounted(const string& mddev, int &num);$/;"	p	class:RAIDManager	access:public	signature:(const string& mddev, int &num)
IsRAIDStatusChanged	./RAIDManager.h	/^	bool IsRAIDStatusChanged(const RAIDInfo& previous) {$/;"	f	struct:RAIDInfo	access:public	signature:(const RAIDInfo& previous)
JBD2_CHECKSUM_BYTES	./libe2fsck/kernel-jbd.h	120;"	d
JBD2_CRC32_CHKSUM	./libe2fsck/kernel-jbd.h	114;"	d
JBD2_CRC32_CHKSUM_SIZE	./libe2fsck/kernel-jbd.h	118;"	d
JBD2_MD5_CHKSUM	./libe2fsck/kernel-jbd.h	115;"	d
JBD2_SHA1_CHKSUM	./libe2fsck/kernel-jbd.h	116;"	d
JBD_ASSERTIONS	./libe2fsck/kernel-jbd.h	249;"	d
JBD_EXPENSIVE_CHECKING	./libe2fsck/kernel-jbd.h	46;"	d
JBD_TAG_SIZE32	./libe2fsck/kernel-jbd.h	147;"	d
JBD_TAG_SIZE64	./libe2fsck/kernel-jbd.h	146;"	d
JBUFFER_TRACE	./libe2fsck/kernel-jbd.h	936;"	d
JEDEC	./libmdadm/mdadm.h	/^	JEDEC,$/;"	e	enum:prefix_standard
JFS_ABORT	./libe2fsck/kernel-jbd.h	600;"	d
JFS_ACK_ERR	./libe2fsck/kernel-jbd.h	601;"	d
JFS_COMMIT_BLOCK	./libe2fsck/kernel-jbd.h	96;"	d
JFS_DEBUG	./libe2fsck/kernel-jbd.h	24;"	d
JFS_DESCRIPTOR_BLOCK	./libe2fsck/kernel-jbd.h	95;"	d
JFS_FEATURE_COMPAT_CHECKSUM	./libe2fsck/kernel-jbd.h	229;"	d
JFS_FEATURE_INCOMPAT_64BIT	./libe2fsck/kernel-jbd.h	234;"	d
JFS_FEATURE_INCOMPAT_ASYNC_COMMIT	./libe2fsck/kernel-jbd.h	235;"	d
JFS_FEATURE_INCOMPAT_REVOKE	./libe2fsck/kernel-jbd.h	231;"	d
JFS_FEATURE_INCOMPAT_REVOKE	./libe2fsck/kernel-jbd.h	233;"	d
JFS_FLAG_DELETED	./libe2fsck/kernel-jbd.h	163;"	d
JFS_FLAG_ESCAPE	./libe2fsck/kernel-jbd.h	161;"	d
JFS_FLAG_LAST_TAG	./libe2fsck/kernel-jbd.h	164;"	d
JFS_FLAG_SAME_UUID	./libe2fsck/kernel-jbd.h	162;"	d
JFS_FLUSHED	./libe2fsck/kernel-jbd.h	602;"	d
JFS_HAS_COMPAT_FEATURE	./libe2fsck/kernel-jbd.h	219;"	d
JFS_HAS_INCOMPAT_FEATURE	./libe2fsck/kernel-jbd.h	225;"	d
JFS_HAS_RO_COMPAT_FEATURE	./libe2fsck/kernel-jbd.h	222;"	d
JFS_KNOWN_COMPAT_FEATURES	./libe2fsck/kernel-jbd.h	238;"	d
JFS_KNOWN_INCOMPAT_FEATURES	./libe2fsck/kernel-jbd.h	240;"	d
JFS_KNOWN_ROCOMPAT_FEATURES	./libe2fsck/kernel-jbd.h	239;"	d
JFS_LOADED	./libe2fsck/kernel-jbd.h	603;"	d
JFS_MAGIC_NUMBER	./libe2fsck/kernel-jbd.h	85;"	d
JFS_MIN_JOURNAL_BLOCKS	./libe2fsck/kernel-jbd.h	74;"	d
JFS_REVOKE_BLOCK	./libe2fsck/kernel-jbd.h	99;"	d
JFS_SUPERBLOCK_V1	./libe2fsck/kernel-jbd.h	97;"	d
JFS_SUPERBLOCK_V2	./libe2fsck/kernel-jbd.h	98;"	d
JFS_UNMOUNT	./libe2fsck/kernel-jbd.h	599;"	d
JFS_USERS_MAX	./libe2fsck/kernel-jbd.h	168;"	d
JFS_USERS_SIZE	./libe2fsck/kernel-jbd.h	169;"	d
JOURNAL_REVOKE_DEFAULT_HASH	./libe2fsck/kernel-jbd.h	742;"	d
J_ASSERT	./libe2fsck/jfs_compat.h	51;"	d
J_ASSERT	./libe2fsck/kernel-jbd.h	251;"	d
J_ASSERT	./libe2fsck/kernel-jbd.h	276;"	d
J_ASSERT	./libe2fsck/kernel-jbd.h	949;"	d
J_ASSERT_BH	./libe2fsck/kernel-jbd.h	263;"	d
J_ASSERT_BH	./libe2fsck/kernel-jbd.h	271;"	d
J_ASSERT_BH	./libe2fsck/kernel-jbd.h	950;"	d
J_ASSERT_JH	./libe2fsck/kernel-jbd.h	269;"	d
J_ASSERT_JH	./libe2fsck/kernel-jbd.h	272;"	d
KERN_DEBUG	./libe2fsck/jfs_compat.h	13;"	d
KERN_ERR	./libe2fsck/jfs_compat.h	12;"	d
KILL_NOT_MD_COMPONENT	./libmdadm/mdadm_errcode.h	/^	KILL_NOT_MD_COMPONENT,$/;"	e	enum:__anon9
KILL_OPEN_DEV_FAIL	./libmdadm/mdadm_errcode.h	/^	KILL_OPEN_DEV_FAIL = 501,$/;"	e	enum:__anon9
KILL_ZERO_SUPERBLOCK_FAIL	./libmdadm/mdadm_errcode.h	/^	KILL_ZERO_SUPERBLOCK_FAIL,$/;"	e	enum:__anon9
K_DEV_FS	./libe2fsck/jfs_user.h	39;"	d
K_DEV_JOURNAL	./libe2fsck/jfs_user.h	40;"	d
Kill	./libmdadm/mdadm.h	/^extern int Kill(char *dev, struct supertype *st, int force, int verbose, int noexcl);$/;"	p	signature:(char *dev, struct supertype *st, int force, int verbose, int noexcl)
Kill_subarray	./libmdadm/mdadm.h	/^extern int Kill_subarray(char *dev, char *subarray, int verbose);$/;"	p	signature:(char *dev, char *subarray, int verbose)
LEVEL_CONTAINER	./libmdadm/mdadm.h	1417;"	d
LEVEL_FAULTY	./libmdadm/mdadm.h	1414;"	d
LEVEL_LINEAR	./libmdadm/mdadm.h	1413;"	d
LEVEL_MULTIPATH	./libmdadm/mdadm.h	1412;"	d
LEVEL_NONE	./libmdadm/mdadm.h	1421;"	d
LEVEL_UNSUPPORTED	./libmdadm/mdadm.h	1418;"	d
LINUX_S_IFBLK	./libmke2fs/ext2fs.h	471;"	d
LINUX_S_IFCHR	./libmke2fs/ext2fs.h	473;"	d
LINUX_S_IFDIR	./libmke2fs/ext2fs.h	472;"	d
LINUX_S_IFIFO	./libmke2fs/ext2fs.h	474;"	d
LINUX_S_IFLNK	./libmke2fs/ext2fs.h	469;"	d
LINUX_S_IFMT	./libmke2fs/ext2fs.h	467;"	d
LINUX_S_IFREG	./libmke2fs/ext2fs.h	470;"	d
LINUX_S_IFSOCK	./libmke2fs/ext2fs.h	468;"	d
LINUX_S_IRGRP	./libmke2fs/ext2fs.h	485;"	d
LINUX_S_IROTH	./libmke2fs/ext2fs.h	490;"	d
LINUX_S_IRUSR	./libmke2fs/ext2fs.h	480;"	d
LINUX_S_IRWXG	./libmke2fs/ext2fs.h	484;"	d
LINUX_S_IRWXO	./libmke2fs/ext2fs.h	489;"	d
LINUX_S_IRWXU	./libmke2fs/ext2fs.h	479;"	d
LINUX_S_ISBLK	./libmke2fs/ext2fs.h	498;"	d
LINUX_S_ISCHR	./libmke2fs/ext2fs.h	497;"	d
LINUX_S_ISDIR	./libmke2fs/ext2fs.h	496;"	d
LINUX_S_ISFIFO	./libmke2fs/ext2fs.h	499;"	d
LINUX_S_ISGID	./libmke2fs/ext2fs.h	476;"	d
LINUX_S_ISLNK	./libmke2fs/ext2fs.h	494;"	d
LINUX_S_ISREG	./libmke2fs/ext2fs.h	495;"	d
LINUX_S_ISSOCK	./libmke2fs/ext2fs.h	500;"	d
LINUX_S_ISUID	./libmke2fs/ext2fs.h	475;"	d
LINUX_S_ISVTX	./libmke2fs/ext2fs.h	477;"	d
LINUX_S_IWGRP	./libmke2fs/ext2fs.h	486;"	d
LINUX_S_IWOTH	./libmke2fs/ext2fs.h	491;"	d
LINUX_S_IWUSR	./libmke2fs/ext2fs.h	481;"	d
LINUX_S_IXGRP	./libmke2fs/ext2fs.h	487;"	d
LINUX_S_IXOTH	./libmke2fs/ext2fs.h	492;"	d
LINUX_S_IXUSR	./libmke2fs/ext2fs.h	482;"	d
LIST_HEAD_INIT	./libe2fsck/kernel-list.h	18;"	d
LOCAL	./libmdadm/mdadm.h	1323;"	d
LOCALEDIR	./libe2fsck/e2fsck.h	43;"	d
LOCAL_ANY	./libmdadm/mdadm.h	1324;"	d
LOG_LABEL	./FilesystemManager.cpp	17;"	d	file:
LOG_LABEL	./RAIDManager.cpp	11;"	d	file:
Lock	./test_utils.h	/^	void Lock() {$/;"	f	class:CriticalSection	access:public	signature:()
MANAGE	./libmdadm/mdadm.h	/^	MANAGE,$/;"	e	enum:mode
MANAGE_ADD_ADD_NEW_DEVS_FAIL	./libmdadm/mdadm_errcode.h	/^	MANAGE_ADD_ADD_NEW_DEVS_FAIL,$/;"	e	enum:__anon9
MANAGE_ADD_ARRAY_FAILED	./libmdadm/mdadm_errcode.h	/^	MANAGE_ADD_ARRAY_FAILED,$/;"	e	enum:__anon9
MANAGE_ADD_CANNOT_GET_EXCLUSIVE_ACCESS	./libmdadm/mdadm_errcode.h	/^	MANAGE_ADD_CANNOT_GET_EXCLUSIVE_ACCESS,$/;"	e	enum:__anon9
MANAGE_ADD_CANNOT_LOAD_ARRAY_METADATA	./libmdadm/mdadm_errcode.h	/^	MANAGE_ADD_CANNOT_LOAD_ARRAY_METADATA,$/;"	e	enum:__anon9
MANAGE_ADD_DEV_SIZE_NOT_LARGE_ENOUGH	./libmdadm/mdadm_errcode.h	/^	MANAGE_ADD_DEV_SIZE_NOT_LARGE_ENOUGH,$/;"	e	enum:__anon9
MANAGE_ADD_GET_DEV_SIZE_FAIL	./libmdadm/mdadm_errcode.h	/^	MANAGE_ADD_GET_DEV_SIZE_FAIL = 251, $/;"	e	enum:__anon9
MANAGE_ADD_HOT_ADD_FAIL	./libmdadm/mdadm_errcode.h	/^	MANAGE_ADD_HOT_ADD_FAIL,$/;"	e	enum:__anon9
MANAGE_ADD_READD_IMPOSSIBLE	./libmdadm/mdadm_errcode.h	/^	MANAGE_ADD_READD_IMPOSSIBLE,$/;"	e	enum:__anon9
MANAGE_ADD_READ_SYSFS_FAIL	./libmdadm/mdadm_errcode.h	/^	MANAGE_ADD_READ_SYSFS_FAIL,$/;"	e	enum:__anon9
MANAGE_ADD_UPDATE_SUPERBLOCK_FAIL	./libmdadm/mdadm_errcode.h	/^	MANAGE_ADD_UPDATE_SUPERBLOCK_FAIL,$/;"	e	enum:__anon9
MANAGE_ADD_WASTED_DEV_SIZE	./libmdadm/mdadm_errcode.h	/^	MANAGE_ADD_WASTED_DEV_SIZE,$/;"	e	enum:__anon9
MANAGE_ADD_WRITE_INIT_SUPERBLOCK_FAIL	./libmdadm/mdadm_errcode.h	/^	MANAGE_ADD_WRITE_INIT_SUPERBLOCK_FAIL,$/;"	e	enum:__anon9
MANAGE_Add	./unitest/TestingLoop.cpp	/^	MANAGE_Add = 'a',$/;"	e	enum:__anon12	file:
MANAGE_CANNOT_ADD_DISKS_TO_MEMBER_ARRAY	./libmdadm/mdadm_errcode.h	/^	MANAGE_CANNOT_ADD_DISKS_TO_MEMBER_ARRAY,$/;"	e	enum:__anon9
MANAGE_CANNOT_FIND_DEV	./libmdadm/mdadm_errcode.h	/^	MANAGE_CANNOT_FIND_DEV,$/;"	e	enum:__anon9
MANAGE_CANNOT_OPEN_DEV	./libmdadm/mdadm_errcode.h	/^	MANAGE_CANNOT_OPEN_DEV,$/;"	e	enum:__anon9
MANAGE_CANNOT_REMOVE_DISKS_FROM_MEMBER_ARRAY	./libmdadm/mdadm_errcode.h	/^	MANAGE_CANNOT_REMOVE_DISKS_FROM_MEMBER_ARRAY,$/;"	e	enum:__anon9
MANAGE_CASE	./unitest/TestingLoop.cpp	39;"	d	file:
MANAGE_DEVICE_BUSY	./libmdadm/mdadm_errcode.h	/^	MANAGE_DEVICE_BUSY,$/;"	e	enum:__anon9
MANAGE_GET_ARRAY_INFO_FAIL	./libmdadm/mdadm_errcode.h	/^	MANAGE_GET_ARRAY_INFO_FAIL,$/;"	e	enum:__anon9
MANAGE_MD_IN_USE	./libmdadm/mdadm_errcode.h	/^	MANAGE_MD_IN_USE,$/;"	e	enum:__anon9
MANAGE_MarkFaulty	./unitest/TestingLoop.cpp	/^	MANAGE_MarkFaulty = 'f',$/;"	e	enum:__anon12	file:
MANAGE_NEED_MEANINGFUL_DISPOSITION	./libmdadm/mdadm_errcode.h	/^	MANAGE_NEED_MEANINGFUL_DISPOSITION,$/;"	e	enum:__anon9
MANAGE_NOT_BLOCK_DEV	./libmdadm/mdadm_errcode.h	/^	MANAGE_NOT_BLOCK_DEV,$/;"	e	enum:__anon9
MANAGE_NOT_MEANINGFUL_FOR_ARRAY	./libmdadm/mdadm_errcode.h	/^	MANAGE_NOT_MEANINGFUL_FOR_ARRAY,$/;"	e	enum:__anon9
MANAGE_NOT_MEANINGFUL_FOR_R10	./libmdadm/mdadm_errcode.h	/^	MANAGE_NOT_MEANINGFUL_FOR_R10,$/;"	e	enum:__anon9
MANAGE_NO_MATCHING_DEV	./libmdadm/mdadm_errcode.h	/^	MANAGE_NO_MATCHING_DEV,$/;"	e	enum:__anon9
MANAGE_OPEN_SYSFD_FAIL	./libmdadm/mdadm_errcode.h	/^	MANAGE_OPEN_SYSFD_FAIL,$/;"	e	enum:__anon9
MANAGE_REMOVE_CANNOT_GET_EXCLUSIVE_ACCESS	./libmdadm/mdadm_errcode.h	/^	MANAGE_REMOVE_CANNOT_GET_EXCLUSIVE_ACCESS = 271,$/;"	e	enum:__anon9
MANAGE_REMOVE_GET_CONTAINER_NAME_FAIL	./libmdadm/mdadm_errcode.h	/^	MANAGE_REMOVE_GET_CONTAINER_NAME_FAIL,$/;"	e	enum:__anon9
MANAGE_REMOVE_HOT_REMOVE_FAIL	./libmdadm/mdadm_errcode.h	/^	MANAGE_REMOVE_HOT_REMOVE_FAIL,$/;"	e	enum:__anon9
MANAGE_REMOVE_IN_USE	./libmdadm/mdadm_errcode.h	/^	MANAGE_REMOVE_IN_USE,$/;"	e	enum:__anon9
MANAGE_REMOVE_NOT_MEMBER	./libmdadm/mdadm_errcode.h	/^	MANAGE_REMOVE_NOT_MEMBER,$/;"	e	enum:__anon9
MANAGE_REPLACE_CANNOT_FIND_MD_INFO	./libmdadm/mdadm_errcode.h	/^	MANAGE_REPLACE_CANNOT_FIND_MD_INFO,$/;"	e	enum:__anon9
MANAGE_REPLACE_DISK_NOT_ACTIVE	./libmdadm/mdadm_errcode.h	/^	MANAGE_REPLACE_DISK_NOT_ACTIVE,$/;"	e	enum:__anon9
MANAGE_REPLACE_MD_NOT_FOUND	./libmdadm/mdadm_errcode.h	/^	MANAGE_REPLACE_MD_NOT_FOUND,$/;"	e	enum:__anon9
MANAGE_REPLACE_REQUEST_REPLACEMENT_FAIL	./libmdadm/mdadm_errcode.h	/^	MANAGE_REPLACE_REQUEST_REPLACEMENT_FAIL,$/;"	e	enum:__anon9
MANAGE_REPLACE_UNSUPPORTED_METADATA_VER	./libmdadm/mdadm_errcode.h	/^	MANAGE_REPLACE_UNSUPPORTED_METADATA_VER = 291,$/;"	e	enum:__anon9
MANAGE_Readd	./unitest/TestingLoop.cpp	/^	MANAGE_Readd = 'A',$/;"	e	enum:__anon12	file:
MANAGE_Remove	./unitest/TestingLoop.cpp	/^	MANAGE_Remove = 'r',$/;"	e	enum:__anon12	file:
MANAGE_Replace	./unitest/TestingLoop.cpp	/^	MANAGE_Replace = 'R',$/;"	e	enum:__anon12	file:
MANAGE_SET_FAULTY_FAIL	./libmdadm/mdadm_errcode.h	/^	MANAGE_SET_FAULTY_FAIL,$/;"	e	enum:__anon9
MANAGE_STOP_CONTAINER_FAIL	./libmdadm/mdadm_errcode.h	/^	MANAGE_STOP_CONTAINER_FAIL,$/;"	e	enum:__anon9
MANAGE_STOP_MD_FAIL	./libmdadm/mdadm_errcode.h	/^	MANAGE_STOP_MD_FAIL = 201,$/;"	e	enum:__anon9
MANAGE_UNSUPPORTED_ARRAY	./libmdadm/mdadm_errcode.h	/^	MANAGE_UNSUPPORTED_ARRAY,$/;"	e	enum:__anon9
MANAGE_WITH_ACTIVE_DISK	./libmdadm/mdadm_errcode.h	/^	MANAGE_WITH_ACTIVE_DISK,$/;"	e	enum:__anon9
MANAGE_WITH_ARG_FAIL	./libmdadm/mdadm_errcode.h	/^	MANAGE_WITH_ARG_FAIL,$/;"	e	enum:__anon9
MANAGE_WITH_CANNOT_FOUND_MD_INFO	./libmdadm/mdadm_errcode.h	/^	MANAGE_WITH_CANNOT_FOUND_MD_INFO = 311,$/;"	e	enum:__anon9
MANAGE_WITH_FAULTY_DISK	./libmdadm/mdadm_errcode.h	/^	MANAGE_WITH_FAULTY_DISK,$/;"	e	enum:__anon9
MANAGE_WITH_MD_NOT_FOUND	./libmdadm/mdadm_errcode.h	/^	MANAGE_WITH_MD_NOT_FOUND,$/;"	e	enum:__anon9
MANAGE_WITH_PREFER_REPLACEMENT_FAIL	./libmdadm/mdadm_errcode.h	/^	MANAGE_WITH_PREFER_REPLACEMENT_FAIL,$/;"	e	enum:__anon9
MAP_DIR	./libmdadm/mdadm.h	76;"	d
MAP_FILE	./libmdadm/mdadm.h	82;"	d
MAX_DISKS	./libmdadm/mdadm.h	1509;"	d
MAX_DISK_NUM	./libmdadm/mdadm_other.h	4;"	d
MAX_EXTENT_DEPTH_COUNT	./libe2fsck/e2fsck.h	203;"	d
MAX_SIZE	./libmdadm/mdadm.h	1514;"	d
MBR	./libmdadm/part.h	/^struct MBR {$/;"	s
MBR::magic	./libmdadm/part.h	/^	__u16 magic;$/;"	m	struct:MBR	access:public
MBR::pad	./libmdadm/part.h	/^	__u8 pad[446];$/;"	m	struct:MBR	access:public
MBR::parts	./libmdadm/part.h	/^	struct MBR_part_record parts[MBR_PARTITIONS];$/;"	m	struct:MBR	typeref:struct:MBR::MBR_part_record	access:public
MBR_GPT_PARTITION_TYPE	./libmdadm/part.h	52;"	d
MBR_PARTITIONS	./libmdadm/part.h	30;"	d
MBR_SIGNATURE_MAGIC	./libmdadm/part.h	29;"	d
MBR_part_record	./libmdadm/part.h	/^struct MBR_part_record {$/;"	s
MBR_part_record::blocks_num	./libmdadm/part.h	/^  __u32 blocks_num;$/;"	m	struct:MBR_part_record	access:public
MBR_part_record::bootable	./libmdadm/part.h	/^  __u8 bootable;$/;"	m	struct:MBR_part_record	access:public
MBR_part_record::first_cyl	./libmdadm/part.h	/^  __u8 first_cyl;$/;"	m	struct:MBR_part_record	access:public
MBR_part_record::first_head	./libmdadm/part.h	/^  __u8 first_head;$/;"	m	struct:MBR_part_record	access:public
MBR_part_record::first_sect_lba	./libmdadm/part.h	/^  __u32 first_sect_lba;$/;"	m	struct:MBR_part_record	access:public
MBR_part_record::first_sector	./libmdadm/part.h	/^  __u8 first_sector;$/;"	m	struct:MBR_part_record	access:public
MBR_part_record::last_cyl	./libmdadm/part.h	/^  __u8 last_cyl;$/;"	m	struct:MBR_part_record	access:public
MBR_part_record::last_head	./libmdadm/part.h	/^  __u8 last_head;$/;"	m	struct:MBR_part_record	access:public
MBR_part_record::last_sector	./libmdadm/part.h	/^  __u8 last_sector;$/;"	m	struct:MBR_part_record	access:public
MBR_part_record::part_type	./libmdadm/part.h	/^  __u8 part_type;$/;"	m	struct:MBR_part_record	access:public
MDMON_DIR	./libmdadm/mdadm.h	93;"	d
MDProfile	./RAIDManager.h	/^	MDProfile()$/;"	f	struct:MDProfile	access:public	signature:()
MDProfile	./RAIDManager.h	/^	MDProfile(string dev)$/;"	f	struct:MDProfile	access:public	signature:(string dev)
MDProfile	./RAIDManager.h	/^struct MDProfile {$/;"	s
MDProfile::Dump	./RAIDManager.h	/^	void Dump() {$/;"	f	struct:MDProfile	access:public	signature:()
MDProfile::InitializeFSManager	./RAIDManager.h	/^	bool InitializeFSManager() {$/;"	f	struct:MDProfile	access:public	signature:()
MDProfile::MDProfile	./RAIDManager.h	/^	MDProfile()$/;"	f	struct:MDProfile	access:public	signature:()
MDProfile::MDProfile	./RAIDManager.h	/^	MDProfile(string dev)$/;"	f	struct:MDProfile	access:public	signature:(string dev)
MDProfile::ReadMDStat	./RAIDManager.h	/^	void ReadMDStat()$/;"	f	struct:MDProfile	access:public	signature:()
MDProfile::SetUDEVInformation	./RAIDManager.h	/^	void SetUDEVInformation()$/;"	f	struct:MDProfile	access:public	signature:()
MDProfile::m_bInMDStat	./RAIDManager.h	/^	bool m_bInMDStat;$/;"	m	struct:MDProfile	access:public
MDProfile::m_fsMgr	./RAIDManager.h	/^	smart_ptr<FilesystemManager> m_fsMgr;$/;"	m	struct:MDProfile	access:public
MDProfile::m_iDevCount	./RAIDManager.h	/^	int m_iDevCount;$/;"	m	struct:MDProfile	access:public
MDProfile::m_iMDNum	./RAIDManager.h	/^	int m_iMDNum;$/;"	m	struct:MDProfile	access:public
MDProfile::m_iRaidDisks	./RAIDManager.h	/^	int m_iRaidDisks; $/;"	m	struct:MDProfile	access:public
MDProfile::m_strDevPath	./RAIDManager.h	/^	string m_strDevPath;$/;"	m	struct:MDProfile	access:public
MDProfile::m_strSysName	./RAIDManager.h	/^	string m_strSysName;$/;"	m	struct:MDProfile	access:public
MDProfile::m_uuid	./RAIDManager.h	/^	int m_uuid[4];$/;"	m	struct:MDProfile	access:public
MDProfile::m_vMembers	./RAIDManager.h	/^	vector<string> m_vMembers;$/;"	m	struct:MDProfile	access:public
MDProfile::operator =	./RAIDManager.h	/^	MDProfile& operator=(MDProfile& rhs)$/;"	f	struct:MDProfile	access:public	signature:(MDProfile& rhs)
MDProfile::operator ==	./RAIDManager.h	/^	bool operator==(MDProfile& rhs)$/;"	f	struct:MDProfile	access:public	signature:(MDProfile& rhs)
MDProfile::~MDProfile	./RAIDManager.h	/^	~MDProfile()$/;"	f	struct:MDProfile	access:public	signature:()
MD_DISK_ACTIVE	./libmdadm/md_p.h	78;"	d
MD_DISK_FAULTY	./libmdadm/md_p.h	77;"	d
MD_DISK_REMOVED	./libmdadm/md_p.h	80;"	d
MD_DISK_REPLACEMENT	./libmdadm/md_p.h	87;"	d
MD_DISK_SYNC	./libmdadm/md_p.h	79;"	d
MD_DISK_WRITEMOSTLY	./libmdadm/md_p.h	82;"	d
MD_MAJOR	./libmdadm/mdadm.h	59;"	d
MD_MAJOR	./libmdadm/mdmon.h	68;"	d
MD_NEW_SIZE_BLOCKS	./libmdadm/md_p.h	49;"	d
MD_NEW_SIZE_SECTORS	./libmdadm/md_p.h	48;"	d
MD_RESERVED_BLOCKS	./libmdadm/md_p.h	46;"	d
MD_RESERVED_BYTES	./libmdadm/md_p.h	44;"	d
MD_RESERVED_SECTORS	./libmdadm/md_p.h	45;"	d
MD_SB_BBM_ERRORS	./libmdadm/md_p.h	105;"	d
MD_SB_BITMAP_PRESENT	./libmdadm/md_p.h	109;"	d
MD_SB_BLOCKS	./libmdadm/md_p.h	53;"	d
MD_SB_BLOCK_CONTAINER_RESHAPE	./libmdadm/md_p.h	106;"	d
MD_SB_BLOCK_VOLUME	./libmdadm/md_p.h	107;"	d
MD_SB_BYTES	./libmdadm/md_p.h	51;"	d
MD_SB_CLEAN	./libmdadm/md_p.h	103;"	d
MD_SB_DESCRIPTOR_OFFSET	./libmdadm/md_p.h	62;"	d
MD_SB_DESCRIPTOR_WORDS	./libmdadm/md_p.h	68;"	d
MD_SB_DISKS	./libmdadm/md_p.h	69;"	d
MD_SB_DISKS_OFFSET	./libmdadm/md_p.h	61;"	d
MD_SB_DISKS_WORDS	./libmdadm/md_p.h	70;"	d
MD_SB_EQUAL_WORDS	./libmdadm/md_p.h	72;"	d
MD_SB_ERRORS	./libmdadm/md_p.h	104;"	d
MD_SB_GENERIC_CONSTANT_WORDS	./libmdadm/md_p.h	64;"	d
MD_SB_GENERIC_OFFSET	./libmdadm/md_p.h	59;"	d
MD_SB_GENERIC_STATE_WORDS	./libmdadm/md_p.h	65;"	d
MD_SB_GENERIC_WORDS	./libmdadm/md_p.h	66;"	d
MD_SB_MAGIC	./libmdadm/md_p.h	98;"	d
MD_SB_PERSONALITY_OFFSET	./libmdadm/md_p.h	60;"	d
MD_SB_PERSONALITY_WORDS	./libmdadm/md_p.h	67;"	d
MD_SB_RESERVED_WORDS	./libmdadm/md_p.h	71;"	d
MD_SB_SECTORS	./libmdadm/md_p.h	54;"	d
MD_SB_WORDS	./libmdadm/md_p.h	52;"	d
METADATA	./libmdadm/mdadm.h	1326;"	d
MISC	./libmdadm/mdadm.h	/^	MISC,$/;"	e	enum:mode
MKE2FS_ABORT_CHECK_PROFILE	./libmke2fs/mke2fs_err.h	/^	MKE2FS_ABORT_CHECK_PROFILE,$/;"	e	enum:__anon4
MKE2FS_BAD_PRIMARY_SB_GROUP_DESCRIPTOR	./libmke2fs/mke2fs_err.h	/^	MKE2FS_BAD_PRIMARY_SB_GROUP_DESCRIPTOR,$/;"	e	enum:__anon4
MKE2FS_BLOCKSIZE_TOO_SMALL	./libmke2fs/mke2fs_err.h	/^	MKE2FS_BLOCKSIZE_TOO_SMALL,$/;"	e	enum:__anon4
MKE2FS_BLOCKS_PER_GROUP_NOT_MULTIPLE_OF_8	./libmke2fs/mke2fs_err.h	/^	MKE2FS_BLOCKS_PER_GROUP_NOT_MULTIPLE_OF_8,$/;"	e	enum:__anon4
MKE2FS_BLOCK_PER_GROUP_OUT_OF_RANGE	./libmke2fs/mke2fs_err.h	/^	MKE2FS_BLOCK_PER_GROUP_OUT_OF_RANGE,$/;"	e	enum:__anon4
MKE2FS_CHECK_MOUNT_POINT_FAIL	./libmke2fs/mke2fs_err.h	/^	MKE2FS_CHECK_MOUNT_POINT_FAIL,$/;"	e	enum:__anon4
MKE2FS_CLUSTER_SIZE_SMALLER_THAN_BLOCK_SIZE	./libmke2fs/mke2fs_err.h	/^	MKE2FS_CLUSTER_SIZE_SMALLER_THAN_BLOCK_SIZE,$/;"	e	enum:__anon4
MKE2FS_COULD_NOT_DETERMINE_DEV_SIZE	./libmke2fs/mke2fs_err.h	/^	MKE2FS_COULD_NOT_DETERMINE_DEV_SIZE,$/;"	e	enum:__anon4
MKE2FS_COULD_NOT_PARSE_UUID	./libmke2fs/mke2fs_err.h	/^	MKE2FS_COULD_NOT_PARSE_UUID,$/;"	e	enum:__anon4
MKE2FS_COULD_NOT_WRITE_BLOCKS_IN_INODE_TABLES	./libmke2fs/mke2fs_err.h	/^	MKE2FS_COULD_NOT_WRITE_BLOCKS_IN_INODE_TABLES,$/;"	e	enum:__anon4
MKE2FS_DEVICE_SIZE_REPORT_TO_BE_0	./libmke2fs/mke2fs_err.h	/^	MKE2FS_DEVICE_SIZE_REPORT_TO_BE_0,$/;"	e	enum:__anon4
MKE2FS_EMPTY_STRING	./libmke2fs/mke2fs_err.h	/^	MKE2FS_EMPTY_STRING,$/;"	e	enum:__anon4
MKE2FS_ENABLE_MULTIPLE_MOUNT_PROTECTION_ERROR	./libmke2fs/mke2fs_err.h	/^	MKE2FS_ENABLE_MULTIPLE_MOUNT_PROTECTION_ERROR,$/;"	e	enum:__anon4
MKE2FS_EXT2FS_CLOSE_ERROR	./libmke2fs/mke2fs_err.h	/^	MKE2FS_EXT2FS_CLOSE_ERROR,$/;"	e	enum:__anon4
MKE2FS_EXTENTS_ENABLED_FOR_64BIT_FS_NOLY	./libmke2fs/mke2fs_err.h	/^	MKE2FS_EXTENTS_ENABLED_FOR_64BIT_FS_NOLY,$/;"	e	enum:__anon4
MKE2FS_FAIL_TO_ADD_JOURNAL	./libmke2fs/mke2fs_err.h	/^	MKE2FS_FAIL_TO_ADD_JOURNAL,$/;"	e	enum:__anon4
MKE2FS_FAIL_TO_ALLOCATE_FS_TABLES	./libmke2fs/mke2fs_err.h	/^	MKE2FS_FAIL_TO_ALLOCATE_FS_TABLES,$/;"	e	enum:__anon4
MKE2FS_FAIL_TO_ALLOCATE_MEMORY	./libmke2fs/mke2fs_err.h	/^	MKE2FS_FAIL_TO_ALLOCATE_MEMORY,$/;"	e	enum:__anon4
MKE2FS_FAIL_TO_CONVERT_SUBCLUSTER_BITMAP	./libmke2fs/mke2fs_err.h	/^	MKE2FS_FAIL_TO_CONVERT_SUBCLUSTER_BITMAP,$/;"	e	enum:__anon4
MKE2FS_FAIL_TO_CREATE_JOURNAL	./libmke2fs/mke2fs_err.h	/^	MKE2FS_FAIL_TO_CREATE_JOURNAL,$/;"	e	enum:__anon4
MKE2FS_FAIL_TO_CREATE_ROOT_DIR	./libmke2fs/mke2fs_err.h	/^	MKE2FS_FAIL_TO_CREATE_ROOT_DIR,$/;"	e	enum:__anon4
MKE2FS_FAIL_TO_DETERMINE_FS_SIZE	./libmke2fs/mke2fs_err.h	/^	MKE2FS_FAIL_TO_DETERMINE_FS_SIZE,$/;"	e	enum:__anon4
MKE2FS_FAIL_TO_DETERMINE_HW_SECTOR_SIZE	./libmke2fs/mke2fs_err.h	/^	MKE2FS_FAIL_TO_DETERMINE_HW_SECTOR_SIZE,$/;"	e	enum:__anon4
MKE2FS_FAIL_TO_DETERMINE_MOUNT_STATUS	./libmke2fs/mke2fs_err.h	/^	MKE2FS_FAIL_TO_DETERMINE_MOUNT_STATUS,$/;"	e	enum:__anon4
MKE2FS_FAIL_TO_DETERMINE_PHY_SECTOR_SIZE	./libmke2fs/mke2fs_err.h	/^	MKE2FS_FAIL_TO_DETERMINE_PHY_SECTOR_SIZE,$/;"	e	enum:__anon4
MKE2FS_FAIL_TO_GET_BLKID_CACHE	./libmke2fs/mke2fs_err.h	/^	MKE2FS_FAIL_TO_GET_BLKID_CACHE,$/;"	e	enum:__anon4
MKE2FS_FAIL_TO_INITIALIZE_JOURNAL_SUPERBLOCK	./libmke2fs/mke2fs_err.h	/^	MKE2FS_FAIL_TO_INITIALIZE_JOURNAL_SUPERBLOCK,$/;"	e	enum:__anon4
MKE2FS_FAIL_TO_INITIALIZE_SUPERBLOCK	./libmke2fs/mke2fs_err.h	/^	MKE2FS_FAIL_TO_INITIALIZE_SUPERBLOCK,$/;"	e	enum:__anon4
MKE2FS_FAIL_TO_OPEN_BB_FILE	./libmke2fs/mke2fs_err.h	/^	MKE2FS_FAIL_TO_OPEN_BB_FILE,$/;"	e	enum:__anon4
MKE2FS_FAIL_TO_OPEN_JOURNAL_DEV	./libmke2fs/mke2fs_err.h	/^	MKE2FS_FAIL_TO_OPEN_JOURNAL_DEV,$/;"	e	enum:__anon4
MKE2FS_FAIL_TO_PARSE_FSTYPE	./libmke2fs/mke2fs_err.h	/^	MKE2FS_FAIL_TO_PARSE_FSTYPE,$/;"	e	enum:__anon4
MKE2FS_FAIL_TO_READ_BB_FILE	./libmke2fs/mke2fs_err.h	/^	MKE2FS_FAIL_TO_READ_BB_FILE,$/;"	e	enum:__anon4
MKE2FS_FAIL_TO_READ_ROOT_INODE	./libmke2fs/mke2fs_err.h	/^	MKE2FS_FAIL_TO_READ_ROOT_INODE,$/;"	e	enum:__anon4
MKE2FS_FAIL_TO_SET_ROOT_INODE_OWNERSHIP	./libmke2fs/mke2fs_err.h	/^	MKE2FS_FAIL_TO_SET_ROOT_INODE_OWNERSHIP,$/;"	e	enum:__anon4
MKE2FS_FAIL_TO_WRITE_JOURNAL_SB	./libmke2fs/mke2fs_err.h	/^	MKE2FS_FAIL_TO_WRITE_JOURNAL_SB,$/;"	e	enum:__anon4
MKE2FS_FAIL_TO_ZERO_JOURNAL_DEV	./libmke2fs/mke2fs_err.h	/^	MKE2FS_FAIL_TO_ZERO_JOURNAL_DEV,$/;"	e	enum:__anon4
MKE2FS_FEATURES_CANNOT_ENABLED_SIMULTANEOUSLY	./libmke2fs/mke2fs_err.h	/^	MKE2FS_FEATURES_CANNOT_ENABLED_SIMULTANEOUSLY,$/;"	e	enum:__anon4
MKE2FS_FLEX_BG_FEATURE_NOT_ENABLED	./libmke2fs/mke2fs_err.h	/^	MKE2FS_FLEX_BG_FEATURE_NOT_ENABLED,$/;"	e	enum:__anon4
MKE2FS_FLEX_BG_SIZE_NOT_POWER_OF_2	./libmke2fs/mke2fs_err.h	/^	MKE2FS_FLEX_BG_SIZE_NOT_POWER_OF_2,$/;"	e	enum:__anon4
MKE2FS_FS_FEATURE_NOT_SUPPORT	./libmke2fs/mke2fs_err.h	/^	MKE2FS_FS_FEATURE_NOT_SUPPORT,$/;"	e	enum:__anon4
MKE2FS_ILLEGAL_BLOCKS_PER_GROUP	./libmke2fs/mke2fs_err.h	/^	MKE2FS_ILLEGAL_BLOCKS_PER_GROUP,$/;"	e	enum:__anon4
MKE2FS_INVALID_BB_LIST	./libmke2fs/mke2fs_err.h	/^	MKE2FS_INVALID_BB_LIST,$/;"	e	enum:__anon4
MKE2FS_INVALID_BLOCK_SIZE	./libmke2fs/mke2fs_err.h	/^	MKE2FS_INVALID_BLOCK_SIZE,$/;"	e	enum:__anon4
MKE2FS_INVALID_CLUSTER_SIZE	./libmke2fs/mke2fs_err.h	/^	MKE2FS_INVALID_CLUSTER_SIZE,$/;"	e	enum:__anon4
MKE2FS_INVALID_FS_OPTIONS	./libmke2fs/mke2fs_err.h	/^	MKE2FS_INVALID_FS_OPTIONS,$/;"	e	enum:__anon4
MKE2FS_INVALID_HANDLE	./libmke2fs/mke2fs_err.h	/^	MKE2FS_INVALID_HANDLE = 1001,$/;"	e	enum:__anon4
MKE2FS_INVALID_INODE_RATIO	./libmke2fs/mke2fs_err.h	/^	MKE2FS_INVALID_INODE_RATIO,$/;"	e	enum:__anon4
MKE2FS_INVALID_INODE_SIZE	./libmke2fs/mke2fs_err.h	/^	MKE2FS_INVALID_INODE_SIZE,$/;"	e	enum:__anon4
MKE2FS_INVALID_MOUNT_OPTIONS	./libmke2fs/mke2fs_err.h	/^	MKE2FS_INVALID_MOUNT_OPTIONS,$/;"	e	enum:__anon4
MKE2FS_INVALID_RESERVED_RATIO	./libmke2fs/mke2fs_err.h	/^	MKE2FS_INVALID_RESERVED_RATIO,$/;"	e	enum:__anon4
MKE2FS_JOURNAL_BLOCKSIZE_SMALLER_THAN_MINIMUM_BLOCKSIZE	./libmke2fs/mke2fs_err.h	/^	MKE2FS_JOURNAL_BLOCKSIZE_SMALLER_THAN_MINIMUM_BLOCKSIZE,$/;"	e	enum:__anon4
MKE2FS_MARK_BAD_BLOCKS_ERROR	./libmke2fs/mke2fs_err.h	/^	MKE2FS_MARK_BAD_BLOCKS_ERROR,$/;"	e	enum:__anon4
MKE2FS_MOUNTED	./libmke2fs/mke2fs_err.h	/^	MKE2FS_MOUNTED,$/;"	e	enum:__anon4
MKE2FS_NEED_EXTENTS_FEATURE	./libmke2fs/mke2fs_err.h	/^	MKE2FS_NEED_EXTENTS_FEATURE,$/;"	e	enum:__anon4
MKE2FS_NOT_BLOCK_DEV	./libmke2fs/mke2fs_err.h	/^	MKE2FS_NOT_BLOCK_DEV,$/;"	e	enum:__anon4
MKE2FS_NOT_SUPPORT_JOURNAL	./libmke2fs/mke2fs_err.h	/^	MKE2FS_NOT_SUPPORT_JOURNAL,$/;"	e	enum:__anon4
MKE2FS_NOT_SUPPORT_RESERVED_ONLINE_RESIZE	./libmke2fs/mke2fs_err.h	/^	MKE2FS_NOT_SUPPORT_RESERVED_ONLINE_RESIZE,$/;"	e	enum:__anon4
MKE2FS_NOT_SUPPORT_SPARSE_SB	./libmke2fs/mke2fs_err.h	/^	MKE2FS_NOT_SUPPORT_SPARSE_SB,$/;"	e	enum:__anon4
MKE2FS_OOM_ERASING_SECTORS	./libmke2fs/mke2fs_err.h	/^	MKE2FS_OOM_ERASING_SECTORS,$/;"	e	enum:__anon4
MKE2FS_PROFILE_ERROR	./libmke2fs/mke2fs_err.h	/^	MKE2FS_PROFILE_ERROR,$/;"	e	enum:__anon4
MKE2FS_RESERVING_BLOCKS_FOR_ONLINE_RESIZE_ERROR	./libmke2fs/mke2fs_err.h	/^	MKE2FS_RESERVING_BLOCKS_FOR_ONLINE_RESIZE_ERROR,$/;"	e	enum:__anon4
MKE2FS_SETUP_TDB_ERROR	./libmke2fs/mke2fs_err.h	/^	MKE2FS_SETUP_TDB_ERROR,$/;"	e	enum:__anon4
MKE2FS_TOO_MANY_INODES	./libmke2fs/mke2fs_err.h	/^	MKE2FS_TOO_MANY_INODES,	$/;"	e	enum:__anon4
MKE2FS_UNAME_ERROR	./libmke2fs/mke2fs_err.h	/^	MKE2FS_UNAME_ERROR,$/;"	e	enum:__anon4
MKE2FS_UNKNOWN_OS	./libmke2fs/mke2fs_err.h	/^	MKE2FS_UNKNOWN_OS,$/;"	e	enum:__anon4
MKE2FS_UNSUITABLE_BLOCKSIZE_FOR_32BIT	./libmke2fs/mke2fs_err.h	/^	MKE2FS_UNSUITABLE_BLOCKSIZE_FOR_32BIT,$/;"	e	enum:__anon4
MKE2FS_UNSUITABLE_CLUSTER_SIZE	./libmke2fs/mke2fs_err.h	/^	MKE2FS_UNSUITABLE_CLUSTER_SIZE,$/;"	e	enum:__anon4
MKE2FS_UNSUITABLE_INODE_CONFIG	./libmke2fs/mke2fs_err.h	/^	MKE2FS_UNSUITABLE_INODE_CONFIG,	$/;"	e	enum:__anon4
MONITOR	./libmdadm/mdadm.h	/^	MONITOR,$/;"	e	enum:mode
MSG_MAX_LEN	./libmdadm/msg.h	37;"	d
MakeDirectory	./test_utils.cpp	/^bool MakeDirectory(const string& pathname)$/;"	f	signature:(const string& pathname)
MakeDirectory	./test_utils.h	/^extern bool MakeDirectory(const string& pathname);$/;"	p	signature:(const string& pathname)
MakeFilesystemProgress	./FilesystemManager.cpp	/^void FilesystemManager::MakeFilesystemProgress(void *pData, int stat,$/;"	f	class:FilesystemManager	signature:(void *pData, int stat, int current, int total)
MakeFilesystemProgress	./FilesystemManager.h	/^	static void MakeFilesystemProgress(void *pData, int stat,$/;"	p	class:FilesystemManager	access:public	signature:(void *pData, int stat, int current, int total)
ManageRAIDSubdevs	./RAIDManager.cpp	/^bool RAIDManager::ManageRAIDSubdevs(const string& mddev, vector<string>& vDevList, int operation)$/;"	f	class:RAIDManager	signature:(const string& mddev, vector<string>& vDevList, int operation)
ManageRAIDSubdevs	./RAIDManager.h	/^	bool ManageRAIDSubdevs(const string& mddev, vector<string>& vDevList, int operation);$/;"	p	class:RAIDManager	access:private	signature:(const string& mddev, vector<string>& vDevList, int operation)
Manage_ro	./libmdadm/mdadm.h	/^extern int Manage_ro(char *devname, int fd, int readonly);$/;"	p	signature:(char *devname, int fd, int readonly)
Manage_run	./libmdadm/mdadm.h	/^extern int Manage_run(char *devname, int fd, struct context *c);$/;"	p	signature:(char *devname, int fd, struct context *c)
Manage_stop	./libmdadm/mdadm.h	/^extern int Manage_stop(char *devname, int fd, int quiet,$/;"	p	signature:(char *devname, int fd, int quiet, int will_retry)
Manage_subdevs	./libmdadm/mdadm.h	/^extern int Manage_subdevs(char *devname, int fd,$/;"	p	signature:(char *devname, int fd, struct mddev_dev *devlist, int verbose, int test, char *update, int force)
MarkFaultyMDDisks	./RAIDManager.cpp	/^bool RAIDManager::MarkFaultyMDDisks(const string& mddev, vector<string>& vDevList)$/;"	f	class:RAIDManager	signature:(const string& mddev, vector<string>& vDevList)
MarkFaultyMDDisks	./RAIDManager.h	/^	bool MarkFaultyMDDisks(const string& mddev, vector<string>& vDevList);$/;"	p	class:RAIDManager	access:public	signature:(const string& mddev, vector<string>& vDevList)
MaxSector	./libmdadm/mdadm.h	222;"	d
MdpMinorShift	./libmdadm/mdadm.h	60;"	d
ModeMask	./libmdadm/mdadm.h	1439;"	d
ModeShift	./libmdadm/mdadm.h	1440;"	d
Modes	./libmdadm/mdadm.h	1431;"	d
Monitor	./libmdadm/mdadm.h	/^extern int Monitor(struct mddev_dev *devlist,$/;"	p	signature:(struct mddev_dev *devlist, char *mailaddr, char *alert_cmd, struct context *c, int daemonise, int oneshot, int dosyslog, char *pidfile, int increments, int share)
Mount	./FilesystemManager.cpp	/^bool FilesystemManager::Mount()$/;"	f	class:FilesystemManager	signature:()
Mount	./FilesystemManager.cpp	/^bool FilesystemManager::Mount(const string& strMountPoint)$/;"	f	class:FilesystemManager	signature:(const string& strMountPoint)
Mount	./FilesystemManager.h	/^	bool Mount();$/;"	p	class:FilesystemManager	access:public	signature:()
Mount	./FilesystemManager.h	/^	bool Mount(const string& strMountPoint);$/;"	p	class:FilesystemManager	access:public	signature:(const string& strMountPoint)
Mount	./RAIDManager.cpp	/^bool RAIDManager::Mount(const string& mddev)$/;"	f	class:RAIDManager	signature:(const string& mddev)
Mount	./RAIDManager.h	/^	bool Mount(const string& mddev);$/;"	p	class:RAIDManager	access:public	signature:(const string& mddev)
NEEDED	./libmdadm/bitmap.h	94;"	d
NEEDED_MASK	./libmdadm/bitmap.h	91;"	d
NLS_CAT_NAME	./libe2fsck/e2fsck.h	40;"	d
NO_INLINE_FUNCS	./libmke2fs/ext2fs.h	29;"	d
NO_RESHAPE	./libmdadm/mdadm.h	200;"	d
N_	./libe2fsck/e2fsck.h	34;"	d
N_	./libe2fsck/e2fsck.h	36;"	d
N_	./libe2fsck/e2fsck.h	47;"	d
Name	./libmdadm/mdadm.h	267;"	d
NoPersist	./libmdadm/mdadm.h	1437;"	d
NotifyChange	./RAIDManager.cpp	/^void RAIDManager::NotifyChange()$/;"	f	class:RAIDManager	signature:()
NotifyChange	./RAIDManager.h	/^	void NotifyChange();$/;"	p	class:RAIDManager	access:private	signature:()
OPERATION_CASE	./unitest/TestingLoop.cpp	33;"	d	file:
OP_ADDDISK	./unitest/TestingLoop.cpp	/^	OP_ADDDISK = 'a',$/;"	e	enum:__anon11	file:
OP_ASSEMBLERAID	./unitest/TestingLoop.cpp	/^	OP_ASSEMBLERAID = 'A',$/;"	e	enum:__anon11	file:
OP_CREATERAID	./unitest/TestingLoop.cpp	/^	OP_CREATERAID = 'C',$/;"	e	enum:__anon11	file:
OP_DELETERAID	./unitest/TestingLoop.cpp	/^	OP_DELETERAID = 'D',$/;"	e	enum:__anon11	file:
OP_DONOTHING	./unitest/TestingLoop.cpp	/^	OP_DONOTHING = 'N',$/;"	e	enum:__anon11	file:
OP_MANAGEMDDISK	./unitest/TestingLoop.cpp	/^	OP_MANAGEMDDISK = 'M',$/;"	e	enum:__anon11	file:
OP_REMDISK	./unitest/TestingLoop.cpp	/^	OP_REMDISK = 'r',$/;"	e	enum:__anon11	file:
OP_STOPRAID	./unitest/TestingLoop.cpp	/^	OP_STOPRAID = 'S',$/;"	e	enum:__anon11	file:
OpenMDDev	./RAIDManager.cpp	/^int RAIDManager::OpenMDDev(const string& mddev_path)$/;"	f	class:RAIDManager	signature:(const string& mddev_path)
OpenMDDev	./RAIDManager.h	/^	int OpenMDDev(const string& mddev_path);$/;"	p	class:RAIDManager	access:private	signature:(const string& mddev_path)
PAGEPTR_BLOCK_MASK	./libmdadm/bitmap.h	119;"	d
PAGEPTR_BLOCK_RATIO	./libmdadm/bitmap.h	115;"	d
PAGEPTR_BLOCK_SHIFT	./libmdadm/bitmap.h	117;"	d
PAGE_BITS	./libmdadm/bitmap.h	82;"	d
PAGE_BIT_SHIFT	./libmdadm/bitmap.h	83;"	d
PAGE_COUNTER_MASK	./libmdadm/bitmap.h	103;"	d
PAGE_COUNTER_RATIO	./libmdadm/bitmap.h	99;"	d
PAGE_COUNTER_SHIFT	./libmdadm/bitmap.h	101;"	d
PATH_MAX	./libmdadm/mdadm.h	1495;"	d
PLATFORM_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	205;"	d	file:
PLATFORM_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	208;"	d	file:
PLATFORM_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	211;"	d	file:
PLATFORM_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	214;"	d	file:
PLATFORM_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	217;"	d	file:
PLATFORM_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	220;"	d	file:
PLATFORM_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	223;"	d	file:
PLATFORM_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	226;"	d	file:
PLATFORM_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	229;"	d	file:
PLATFORM_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	232;"	d	file:
PLATFORM_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	235;"	d	file:
PLATFORM_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	238;"	d	file:
PLATFORM_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	241;"	d	file:
PLATFORM_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	244;"	d	file:
PLATFORM_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	247;"	d	file:
PLATFORM_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	250;"	d	file:
PLATFORM_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	253;"	d	file:
PLATFORM_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	256;"	d	file:
PLATFORM_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	259;"	d	file:
PLATFORM_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	262;"	d	file:
PLATFORM_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	265;"	d	file:
PLATFORM_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	268;"	d	file:
PLATFORM_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	271;"	d	file:
PLATFORM_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	274;"	d	file:
PLATFORM_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	277;"	d	file:
PLATFORM_ID	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	280;"	d	file:
PLATFORM_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	205;"	d	file:
PLATFORM_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	208;"	d	file:
PLATFORM_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	211;"	d	file:
PLATFORM_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	214;"	d	file:
PLATFORM_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	217;"	d	file:
PLATFORM_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	220;"	d	file:
PLATFORM_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	223;"	d	file:
PLATFORM_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	226;"	d	file:
PLATFORM_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	229;"	d	file:
PLATFORM_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	232;"	d	file:
PLATFORM_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	235;"	d	file:
PLATFORM_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	238;"	d	file:
PLATFORM_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	241;"	d	file:
PLATFORM_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	244;"	d	file:
PLATFORM_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	247;"	d	file:
PLATFORM_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	250;"	d	file:
PLATFORM_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	253;"	d	file:
PLATFORM_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	256;"	d	file:
PLATFORM_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	259;"	d	file:
PLATFORM_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	262;"	d	file:
PLATFORM_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	265;"	d	file:
PLATFORM_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	268;"	d	file:
PLATFORM_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	271;"	d	file:
PLATFORM_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	274;"	d	file:
PLATFORM_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	277;"	d	file:
PLATFORM_ID	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	280;"	d	file:
PLATFORM_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	205;"	d	file:
PLATFORM_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	208;"	d	file:
PLATFORM_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	211;"	d	file:
PLATFORM_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	214;"	d	file:
PLATFORM_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	217;"	d	file:
PLATFORM_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	220;"	d	file:
PLATFORM_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	223;"	d	file:
PLATFORM_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	226;"	d	file:
PLATFORM_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	229;"	d	file:
PLATFORM_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	232;"	d	file:
PLATFORM_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	235;"	d	file:
PLATFORM_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	238;"	d	file:
PLATFORM_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	241;"	d	file:
PLATFORM_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	244;"	d	file:
PLATFORM_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	247;"	d	file:
PLATFORM_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	250;"	d	file:
PLATFORM_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	253;"	d	file:
PLATFORM_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	256;"	d	file:
PLATFORM_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	259;"	d	file:
PLATFORM_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	262;"	d	file:
PLATFORM_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	265;"	d	file:
PLATFORM_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	268;"	d	file:
PLATFORM_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	271;"	d	file:
PLATFORM_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	274;"	d	file:
PLATFORM_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	277;"	d	file:
PLATFORM_ID	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	280;"	d	file:
PRINT_RAID_DEBUG	./libmdadm/md_u.h	24;"	d
PRL_LATCHED	./libe2fsck/problem.h	51;"	d
PRL_NO	./libe2fsck/problem.h	50;"	d
PRL_SUPPRESS	./libe2fsck/problem.h	52;"	d
PRL_VARIABLE	./libe2fsck/problem.h	54;"	d
PRL_YES	./libe2fsck/problem.h	49;"	d
PROFILE_ITER_LIST_SECTION	./libe2fsck/profile.h	50;"	d
PROFILE_ITER_LIST_SECTION	./libmke2fs/profile.h	50;"	d
PROFILE_ITER_RELATIONS_ONLY	./libe2fsck/profile.h	52;"	d
PROFILE_ITER_RELATIONS_ONLY	./libmke2fs/profile.h	52;"	d
PROFILE_ITER_SECTIONS_ONLY	./libe2fsck/profile.h	51;"	d
PROFILE_ITER_SECTIONS_ONLY	./libmke2fs/profile.h	51;"	d
PROF_ADD_NOT_SECTION	./libmke2fs/prof_err.h	12;"	d
PROF_BAD_BOOLEAN	./libmke2fs/prof_err.h	36;"	d
PROF_BAD_GROUP_LVL	./libmke2fs/prof_err.h	15;"	d
PROF_BAD_INTEGER	./libmke2fs/prof_err.h	37;"	d
PROF_BAD_LINK_LIST	./libmke2fs/prof_err.h	14;"	d
PROF_BAD_NAMESET	./libmke2fs/prof_err.h	31;"	d
PROF_BAD_PARENT_PTR	./libmke2fs/prof_err.h	16;"	d
PROF_EINVAL	./libmke2fs/prof_err.h	19;"	d
PROF_END_OF_SECTIONS	./libmke2fs/prof_err.h	30;"	d
PROF_EXISTS	./libmke2fs/prof_err.h	35;"	d
PROF_EXTRA_CBRACE	./libmke2fs/prof_err.h	24;"	d
PROF_FAIL_OPEN	./libmke2fs/prof_err.h	34;"	d
PROF_INVALID_SECTION	./libmke2fs/prof_err.h	29;"	d
PROF_MAGIC_FILE	./libmke2fs/prof_err.h	33;"	d
PROF_MAGIC_FILE_DATA	./libmke2fs/prof_err.h	38;"	d
PROF_MAGIC_ITERATOR	./libmke2fs/prof_err.h	17;"	d
PROF_MAGIC_NODE	./libmke2fs/prof_err.h	9;"	d
PROF_MAGIC_PROFILE	./libmke2fs/prof_err.h	26;"	d
PROF_MAGIC_SECTION	./libmke2fs/prof_err.h	27;"	d
PROF_MISSING_OBRACE	./libmke2fs/prof_err.h	25;"	d
PROF_NO_PROFILE	./libmke2fs/prof_err.h	32;"	d
PROF_NO_RELATION	./libmke2fs/prof_err.h	11;"	d
PROF_NO_SECTION	./libmke2fs/prof_err.h	10;"	d
PROF_READ_ONLY	./libmke2fs/prof_err.h	20;"	d
PROF_RELATION_SYNTAX	./libmke2fs/prof_err.h	23;"	d
PROF_SECTION_NOTOP	./libmke2fs/prof_err.h	21;"	d
PROF_SECTION_SYNTAX	./libmke2fs/prof_err.h	22;"	d
PROF_SECTION_WITH_VALUE	./libmke2fs/prof_err.h	13;"	d
PROF_SET_SECTION_VALUE	./libmke2fs/prof_err.h	18;"	d
PROF_TOPSECTION_ITER_NOSUPP	./libmke2fs/prof_err.h	28;"	d
PROF_VERSION	./libmke2fs/prof_err.h	8;"	d
PROTECT_ARRAY	./libmdadm/md_u.h	36;"	d
PR_0_64BIT_WITHOUT_EXTENTS	./libe2fsck/problem.h	253;"	d
PR_0_ADD_UUID	./libe2fsck/problem.h	85;"	d
PR_0_BACKUP_JNL	./libe2fsck/problem.h	178;"	d
PR_0_BB_NOT_GROUP	./libe2fsck/problem.h	61;"	d
PR_0_BB_UNINIT_LAST	./libe2fsck/problem.h	214;"	d
PR_0_BLOCKS_PER_GROUP	./libe2fsck/problem.h	79;"	d
PR_0_CANT_FIND_JOURNAL	./libe2fsck/problem.h	109;"	d
PR_0_CHECK_DESC_FAILED	./libe2fsck/problem.h	250;"	d
PR_0_CLEAR_RESIZE_INODE	./libe2fsck/problem.h	184;"	d
PR_0_CLEAR_TESTFS_FLAG	./libe2fsck/problem.h	220;"	d
PR_0_CLEAR_V2_JOURNAL	./libe2fsck/problem.h	169;"	d
PR_0_DIRHASH_HINT	./libe2fsck/problem.h	199;"	d
PR_0_ERR_MOVE_JOURNAL	./libe2fsck/problem.h	166;"	d
PR_0_EXTERNAL_JOURNAL_HINT	./libe2fsck/problem.h	196;"	d
PR_0_EXT_JOURNAL_BAD_SUPER	./libe2fsck/problem.h	112;"	d
PR_0_FIRST_DATA_BLOCK	./libe2fsck/problem.h	82;"	d
PR_0_FIRST_META_BG_TOO_BIG	./libe2fsck/problem.h	256;"	d
PR_0_FREE_BLOCK_COUNT	./libe2fsck/problem.h	235;"	d
PR_0_FREE_INODE_COUNT	./libe2fsck/problem.h	232;"	d
PR_0_FS_REV_LEVEL	./libe2fsck/problem.h	136;"	d
PR_0_FS_SIZE_WRONG	./libe2fsck/problem.h	73;"	d
PR_0_FUTURE_SB_LAST_MOUNT	./libe2fsck/problem.h	190;"	d
PR_0_FUTURE_SB_LAST_MOUNT_FUDGED	./libe2fsck/problem.h	223;"	d
PR_0_FUTURE_SB_LAST_WRITE	./libe2fsck/problem.h	193;"	d
PR_0_FUTURE_SB_LAST_WRITE_FUDGED	./libe2fsck/problem.h	226;"	d
PR_0_GDT_CSUM	./libe2fsck/problem.h	202;"	d
PR_0_GDT_CSUM_LATCH	./libe2fsck/problem.h	229;"	d
PR_0_GDT_ITABLE_UNUSED	./libe2fsck/problem.h	211;"	d
PR_0_GDT_UNINIT	./libe2fsck/problem.h	205;"	d
PR_0_GETSIZE_ERROR	./libe2fsck/problem.h	94;"	d
PR_0_HIDE_QUOTA	./libe2fsck/problem.h	238;"	d
PR_0_HURD_CLEAR_FILETYPE	./libe2fsck/problem.h	100;"	d
PR_0_IB_NOT_GROUP	./libe2fsck/problem.h	64;"	d
PR_0_INODE_COUNT_WRONG	./libe2fsck/problem.h	97;"	d
PR_0_ITABLE_NOT_GROUP	./libe2fsck/problem.h	67;"	d
PR_0_JNL_TXN_CORRUPT	./libe2fsck/problem.h	217;"	d
PR_0_JOURNAL_BAD_INODE	./libe2fsck/problem.h	103;"	d
PR_0_JOURNAL_BAD_SUPER	./libe2fsck/problem.h	121;"	d
PR_0_JOURNAL_BAD_UUID	./libe2fsck/problem.h	115;"	d
PR_0_JOURNAL_HAS_JOURNAL	./libe2fsck/problem.h	124;"	d
PR_0_JOURNAL_RECOVERY_CLEAR	./libe2fsck/problem.h	130;"	d
PR_0_JOURNAL_RECOVER_SET	./libe2fsck/problem.h	127;"	d
PR_0_JOURNAL_RESET_JOURNAL	./libe2fsck/problem.h	133;"	d
PR_0_JOURNAL_RUN	./libe2fsck/problem.h	172;"	d
PR_0_JOURNAL_RUN_DEFAULT	./libe2fsck/problem.h	175;"	d
PR_0_JOURNAL_UNSUPP_INCOMPAT	./libe2fsck/problem.h	157;"	d
PR_0_JOURNAL_UNSUPP_MULTIFS	./libe2fsck/problem.h	106;"	d
PR_0_JOURNAL_UNSUPP_ROCOMPAT	./libe2fsck/problem.h	154;"	d
PR_0_JOURNAL_UNSUPP_SUPER	./libe2fsck/problem.h	118;"	d
PR_0_JOURNAL_UNSUPP_VERSION	./libe2fsck/problem.h	160;"	d
PR_0_MISC_CORRUPT_SUPER	./libe2fsck/problem.h	91;"	d
PR_0_MMP_INVALID_BLK	./libe2fsck/problem.h	241;"	d
PR_0_MMP_INVALID_MAGIC	./libe2fsck/problem.h	244;"	d
PR_0_MOVE_JOURNAL	./libe2fsck/problem.h	163;"	d
PR_0_NONZERO_RESERVED_GDT_BLOCKS	./libe2fsck/problem.h	181;"	d
PR_0_NO_FRAGMENTS	./libe2fsck/problem.h	76;"	d
PR_0_OPEN_FAILED	./libe2fsck/problem.h	247;"	d
PR_0_ORPHAN_ALREADY_CLEARED_BLOCK	./libe2fsck/problem.h	145;"	d
PR_0_ORPHAN_CLEAR_INODE	./libe2fsck/problem.h	139;"	d
PR_0_ORPHAN_ILLEGAL_BLOCK_NUM	./libe2fsck/problem.h	142;"	d
PR_0_ORPHAN_ILLEGAL_HEAD_INODE	./libe2fsck/problem.h	148;"	d
PR_0_ORPHAN_ILLEGAL_INODE	./libe2fsck/problem.h	151;"	d
PR_0_RELOCATE_HINT	./libe2fsck/problem.h	88;"	d
PR_0_RESIZE_INODE_INVALID	./libe2fsck/problem.h	187;"	d
PR_0_SB_CORRUPT	./libe2fsck/problem.h	70;"	d
PR_1B_ADJ_EA_REFCOUNT	./libe2fsck/problem.h	616;"	d
PR_1B_ALLOCATE_IBITMAP_ERROR	./libe2fsck/problem.h	610;"	d
PR_1B_BLOCK_ITERATE	./libe2fsck/problem.h	613;"	d
PR_1B_DUP_BLOCK	./libe2fsck/problem.h	601;"	d
PR_1B_DUP_BLOCK_END	./libe2fsck/problem.h	604;"	d
PR_1B_DUP_BLOCK_HEADER	./libe2fsck/problem.h	598;"	d
PR_1B_ISCAN_ERROR	./libe2fsck/problem.h	607;"	d
PR_1B_PASS_HEADER	./libe2fsck/problem.h	595;"	d
PR_1C_PASS_HEADER	./libe2fsck/problem.h	619;"	d
PR_1D_CLONE_ERROR	./libe2fsck/problem.h	647;"	d
PR_1D_CLONE_QUESTION	./libe2fsck/problem.h	641;"	d
PR_1D_DELETE_QUESTION	./libe2fsck/problem.h	644;"	d
PR_1D_DUP_BLOCKS_DEALT	./libe2fsck/problem.h	638;"	d
PR_1D_DUP_FILE	./libe2fsck/problem.h	626;"	d
PR_1D_DUP_FILE_LIST	./libe2fsck/problem.h	629;"	d
PR_1D_NUM_DUP_INODES	./libe2fsck/problem.h	635;"	d
PR_1D_PASS_HEADER	./libe2fsck/problem.h	623;"	d
PR_1D_SHARE_METADATA	./libe2fsck/problem.h	632;"	d
PR_1_ADD_DBLOCK	./libe2fsck/problem.h	392;"	d
PR_1_ALLOCATE_BBITMAP_ERROR	./libe2fsck/problem.h	374;"	d
PR_1_ALLOCATE_DBCOUNT	./libe2fsck/problem.h	380;"	d
PR_1_ALLOCATE_IBITMAP_ERROR	./libe2fsck/problem.h	371;"	d
PR_1_ALLOCATE_ICOUNT	./libe2fsck/problem.h	377;"	d
PR_1_ALLOCATE_REFCOUNT	./libe2fsck/problem.h	428;"	d
PR_1_ATTR_HASH	./libe2fsck/problem.h	512;"	d
PR_1_ATTR_NAME_LEN	./libe2fsck/problem.h	500;"	d
PR_1_ATTR_VALUE_BLOCK	./libe2fsck/problem.h	506;"	d
PR_1_ATTR_VALUE_OFFSET	./libe2fsck/problem.h	503;"	d
PR_1_ATTR_VALUE_SIZE	./libe2fsck/problem.h	509;"	d
PR_1_BAD_EA_BLOCK	./libe2fsck/problem.h	434;"	d
PR_1_BAD_GROUP_DESCRIPTORS	./libe2fsck/problem.h	347;"	d
PR_1_BAD_I_BLOCKS	./libe2fsck/problem.h	302;"	d
PR_1_BAD_I_SIZE	./libe2fsck/problem.h	299;"	d
PR_1_BAD_PRIMARY_BLOCK	./libe2fsck/problem.h	332;"	d
PR_1_BAD_PRIMARY_BLOCK_PROMPT	./libe2fsck/problem.h	335;"	d
PR_1_BAD_PRIMARY_GROUP_DESCRIPTOR	./libe2fsck/problem.h	341;"	d
PR_1_BAD_PRIMARY_SUPERBLOCK	./libe2fsck/problem.h	338;"	d
PR_1_BAD_SUPERBLOCK	./libe2fsck/problem.h	344;"	d
PR_1_BBINODE_BAD_METABLOCK	./libe2fsck/problem.h	326;"	d
PR_1_BBINODE_BAD_METABLOCK_PROMPT	./libe2fsck/problem.h	329;"	d
PR_1_BB_BAD_BLOCK	./libe2fsck/problem.h	293;"	d
PR_1_BB_CONFLICT	./libe2fsck/problem.h	284;"	d
PR_1_BB_FS_BLOCK	./libe2fsck/problem.h	491;"	d
PR_1_BB_ILLEGAL_BLOCK_NUM	./libe2fsck/problem.h	317;"	d
PR_1_BLOCK_ITERATE	./libe2fsck/problem.h	386;"	d
PR_1_BLOCK_OVERLAPS_METADATA	./libe2fsck/problem.h	308;"	d
PR_1_COLLAPSE_DBLOCK	./libe2fsck/problem.h	582;"	d
PR_1_COMPR_SET	./libe2fsck/problem.h	407;"	d
PR_1_CONVERT_SUBCLUSTER	./libe2fsck/problem.h	550;"	d
PR_1_CRITICAL_METADATA_COLLISION	./libe2fsck/problem.h	579;"	d
PR_1_DUP_BLOCKS_PREENSTOP	./libe2fsck/problem.h	323;"	d
PR_1_EA_ALLOC_COLLISION	./libe2fsck/problem.h	452;"	d
PR_1_EA_ALLOC_REGION_ABORT	./libe2fsck/problem.h	449;"	d
PR_1_EA_BAD_NAME	./libe2fsck/problem.h	455;"	d
PR_1_EA_BAD_VALUE	./libe2fsck/problem.h	458;"	d
PR_1_EA_MULTI_BLOCK	./libe2fsck/problem.h	446;"	d
PR_1_EXTATTR_READ_ABORT	./libe2fsck/problem.h	437;"	d
PR_1_EXTATTR_REFCOUNT	./libe2fsck/problem.h	440;"	d
PR_1_EXTATTR_WRITE_ABORT	./libe2fsck/problem.h	443;"	d
PR_1_EXTENTS_SET	./libe2fsck/problem.h	530;"	d
PR_1_EXTENT_BAD_START_BLK	./libe2fsck/problem.h	524;"	d
PR_1_EXTENT_ENDS_BEYOND	./libe2fsck/problem.h	527;"	d
PR_1_EXTENT_END_OUT_OF_BOUNDS	./libe2fsck/problem.h	570;"	d
PR_1_EXTENT_FEATURE	./libe2fsck/problem.h	533;"	d
PR_1_EXTENT_HEADER_INVALID	./libe2fsck/problem.h	545;"	d
PR_1_EXTENT_INDEX_START_INVALID	./libe2fsck/problem.h	568;"	d
PR_1_EXTENT_ITERATE_FAILURE	./libe2fsck/problem.h	521;"	d
PR_1_EXTENT_LENGTH_ZERO	./libe2fsck/problem.h	565;"	d
PR_1_EXTRA_ISIZE	./libe2fsck/problem.h	497;"	d
PR_1_FAST_SYMLINK_EXTENT_FL	./libe2fsck/problem.h	539;"	d
PR_1_FS_REV_LEVEL	./libe2fsck/problem.h	413;"	d
PR_1_HTREE_BADROOT	./libe2fsck/problem.h	479;"	d
PR_1_HTREE_DEPTH	./libe2fsck/problem.h	488;"	d
PR_1_HTREE_HASHV	./libe2fsck/problem.h	482;"	d
PR_1_HTREE_INCOMPAT	./libe2fsck/problem.h	485;"	d
PR_1_HTREE_NODIR	./libe2fsck/problem.h	476;"	d
PR_1_HTREE_SET	./libe2fsck/problem.h	473;"	d
PR_1_IB_BAD_BLOCK	./libe2fsck/problem.h	296;"	d
PR_1_IB_CONFLICT	./libe2fsck/problem.h	287;"	d
PR_1_ICOUNT_STORE	./libe2fsck/problem.h	389;"	d
PR_1_ILLEGAL_BLOCK_NUM	./libe2fsck/problem.h	305;"	d
PR_1_INLINE_DATA_FEATURE	./libe2fsck/problem.h	573;"	d
PR_1_INLINE_DATA_SET	./libe2fsck/problem.h	576;"	d
PR_1_INODE_BBLOCK_LATCH	./libe2fsck/problem.h	320;"	d
PR_1_INODE_BLOCK_LATCH	./libe2fsck/problem.h	311;"	d
PR_1_INODE_TOOBIG	./libe2fsck/problem.h	461;"	d
PR_1_INVALID_BAD_INODE	./libe2fsck/problem.h	562;"	d
PR_1_ISCAN_ERROR	./libe2fsck/problem.h	383;"	d
PR_1_ITABLE_CONFLICT	./libe2fsck/problem.h	290;"	d
PR_1_JOURNAL_BAD_MODE	./libe2fsck/problem.h	419;"	d
PR_1_JOURNAL_INODE_NOT_CLEAR	./libe2fsck/problem.h	416;"	d
PR_1_LOW_DTIME	./libe2fsck/problem.h	422;"	d
PR_1_MISALIGNED_CLUSTER	./libe2fsck/problem.h	588;"	d
PR_1_ORPHAN_LIST_REFUGEES	./libe2fsck/problem.h	425;"	d
PR_1_OUT_OF_ORDER_EXTENTS	./libe2fsck/problem.h	542;"	d
PR_1_PASS_HEADER	./libe2fsck/problem.h	263;"	d
PR_1_PROGERR_CLAIMED_BLOCK	./libe2fsck/problem.h	350;"	d
PR_1_QUOTA_BAD_MODE	./libe2fsck/problem.h	553;"	d
PR_1_QUOTA_INODE_NOT_CLEAR	./libe2fsck/problem.h	556;"	d
PR_1_QUOTA_INODE_NOT_HIDDEN	./libe2fsck/problem.h	559;"	d
PR_1_READ_EA_BLOCK	./libe2fsck/problem.h	431;"	d
PR_1_READ_EXTENT	./libe2fsck/problem.h	518;"	d
PR_1_READ_INODE	./libe2fsck/problem.h	395;"	d
PR_1_RELOC_BLOCK_ALLOCATE	./libe2fsck/problem.h	353;"	d
PR_1_RELOC_FROM_TO	./libe2fsck/problem.h	359;"	d
PR_1_RELOC_MEMORY_ALLOCATE	./libe2fsck/problem.h	356;"	d
PR_1_RELOC_READ_ERR	./libe2fsck/problem.h	365;"	d
PR_1_RELOC_TO	./libe2fsck/problem.h	362;"	d
PR_1_RELOC_WRITE_ERR	./libe2fsck/problem.h	368;"	d
PR_1_RESERVED_BAD_MODE	./libe2fsck/problem.h	272;"	d
PR_1_RESIZE_INODE_CREATE	./libe2fsck/problem.h	494;"	d
PR_1_ROOT_DTIME	./libe2fsck/problem.h	269;"	d
PR_1_ROOT_NO_DIR	./libe2fsck/problem.h	266;"	d
PR_1_SET_DTIME	./libe2fsck/problem.h	278;"	d
PR_1_SET_IMAGIC	./libe2fsck/problem.h	401;"	d
PR_1_SET_IMMUTABLE	./libe2fsck/problem.h	404;"	d
PR_1_SET_NONZSIZE	./libe2fsck/problem.h	410;"	d
PR_1_SUPPRESS_MESSAGES	./libe2fsck/problem.h	398;"	d
PR_1_TOOBIG_DIR	./libe2fsck/problem.h	464;"	d
PR_1_TOOBIG_REG	./libe2fsck/problem.h	467;"	d
PR_1_TOOBIG_SYMLINK	./libe2fsck/problem.h	470;"	d
PR_1_TOO_MANY_BAD_BLOCKS	./libe2fsck/problem.h	314;"	d
PR_1_TREAT_AS_DIRECTORY	./libe2fsck/problem.h	515;"	d
PR_1_UNINIT_DBLOCK	./libe2fsck/problem.h	585;"	d
PR_1_UNSET_EXTENT_FL	./libe2fsck/problem.h	536;"	d
PR_1_ZERO_DTIME	./libe2fsck/problem.h	275;"	d
PR_1_ZERO_LENGTH_DIR	./libe2fsck/problem.h	281;"	d
PR_2_1ST_NOT_DOT	./libe2fsck/problem.h	687;"	d
PR_2_2ND_NOT_DOT_DOT	./libe2fsck/problem.h	690;"	d
PR_2_ADJ_EA_REFCOUNT	./libe2fsck/problem.h	813;"	d
PR_2_ALLOCATE_ICOUNT	./libe2fsck/problem.h	744;"	d
PR_2_ALLOC_DIRBOCK	./libe2fsck/problem.h	756;"	d
PR_2_BAD_BLOCK_DEV	./libe2fsck/problem.h	729;"	d
PR_2_BAD_CHAR_DEV	./libe2fsck/problem.h	726;"	d
PR_2_BAD_FIFO	./libe2fsck/problem.h	765;"	d
PR_2_BAD_FILETYPE	./libe2fsck/problem.h	774;"	d
PR_2_BAD_INO	./libe2fsck/problem.h	660;"	d
PR_2_BAD_INODE_DOT	./libe2fsck/problem.h	657;"	d
PR_2_BAD_MODE	./libe2fsck/problem.h	708;"	d
PR_2_BAD_NAME	./libe2fsck/problem.h	678;"	d
PR_2_BAD_SOCKET	./libe2fsck/problem.h	768;"	d
PR_2_BB_INODE	./libe2fsck/problem.h	669;"	d
PR_2_BLOCKS_HI_ZERO	./libe2fsck/problem.h	840;"	d
PR_2_CLEAR_FILETYPE	./libe2fsck/problem.h	777;"	d
PR_2_DBLIST_ITERATE	./libe2fsck/problem.h	747;"	d
PR_2_DEALLOC_INODE	./libe2fsck/problem.h	759;"	d
PR_2_DIRECTORY_HOLE	./libe2fsck/problem.h	717;"	d
PR_2_DIR_ACL_ZERO	./libe2fsck/problem.h	699;"	d
PR_2_DIR_CORRUPTED	./libe2fsck/problem.h	711;"	d
PR_2_DOT_DOT_NULL_TERM	./libe2fsck/problem.h	723;"	d
PR_2_DOT_NULL_TERM	./libe2fsck/problem.h	720;"	d
PR_2_DUPLICATE_DIRENT	./libe2fsck/problem.h	831;"	d
PR_2_DUP_DOT	./libe2fsck/problem.h	732;"	d
PR_2_DUP_DOT_DOT	./libe2fsck/problem.h	735;"	d
PR_2_FADDR_ZERO	./libe2fsck/problem.h	693;"	d
PR_2_FEATURE_LARGE_FILES	./libe2fsck/problem.h	789;"	d
PR_2_FILENAME_LONG	./libe2fsck/problem.h	714;"	d
PR_2_FILE_ACL_BAD	./libe2fsck/problem.h	786;"	d
PR_2_FILE_ACL_ZERO	./libe2fsck/problem.h	696;"	d
PR_2_FINAL_RECLEN	./libe2fsck/problem.h	741;"	d
PR_2_FRAG_ZERO	./libe2fsck/problem.h	702;"	d
PR_2_FSIZE_ZERO	./libe2fsck/problem.h	705;"	d
PR_2_HTREE_BADBLK	./libe2fsck/problem.h	810;"	d
PR_2_HTREE_BAD_COUNT	./libe2fsck/problem.h	822;"	d
PR_2_HTREE_BAD_DEPTH	./libe2fsck/problem.h	828;"	d
PR_2_HTREE_BAD_LIMIT	./libe2fsck/problem.h	819;"	d
PR_2_HTREE_BAD_ROOT	./libe2fsck/problem.h	816;"	d
PR_2_HTREE_CLEAR	./libe2fsck/problem.h	804;"	d
PR_2_HTREE_DUPREF	./libe2fsck/problem.h	795;"	d
PR_2_HTREE_HASH_ORDER	./libe2fsck/problem.h	825;"	d
PR_2_HTREE_MAX_HASH	./libe2fsck/problem.h	801;"	d
PR_2_HTREE_MIN_HASH	./libe2fsck/problem.h	798;"	d
PR_2_HTREE_NOTREF	./libe2fsck/problem.h	792;"	d
PR_2_INOREF_BG_INO_UNINIT	./libe2fsck/problem.h	846;"	d
PR_2_INOREF_IN_UNUSED	./libe2fsck/problem.h	849;"	d
PR_2_INVALID_SYMLINK	./libe2fsck/problem.h	783;"	d
PR_2_I_FILE_ACL_HI_ZERO	./libe2fsck/problem.h	852;"	d
PR_2_LINK_DIR	./libe2fsck/problem.h	672;"	d
PR_2_LINK_DOT	./libe2fsck/problem.h	666;"	d
PR_2_LINK_ROOT	./libe2fsck/problem.h	675;"	d
PR_2_MISSING_DOT	./libe2fsck/problem.h	681;"	d
PR_2_MISSING_DOT_DOT	./libe2fsck/problem.h	684;"	d
PR_2_NON_UNIQUE_FILE	./libe2fsck/problem.h	834;"	d
PR_2_NO_DIRINFO	./libe2fsck/problem.h	738;"	d
PR_2_NULL_NAME	./libe2fsck/problem.h	780;"	d
PR_2_PASS_HEADER	./libe2fsck/problem.h	654;"	d
PR_2_READ_DIRBLOCK	./libe2fsck/problem.h	750;"	d
PR_2_REPORT_DUP_DIRENT	./libe2fsck/problem.h	837;"	d
PR_2_SET_FILETYPE	./libe2fsck/problem.h	771;"	d
PR_2_SPLIT_DOT	./libe2fsck/problem.h	762;"	d
PR_2_UNEXPECTED_HTREE_BLOCK	./libe2fsck/problem.h	843;"	d
PR_2_UNUSED_INODE	./libe2fsck/problem.h	663;"	d
PR_2_WRITE_DIRBLOCK	./libe2fsck/problem.h	753;"	d
PR_3A_OPTIMIZE_DIR	./libe2fsck/problem.h	946;"	d
PR_3A_OPTIMIZE_DIR_END	./libe2fsck/problem.h	949;"	d
PR_3A_OPTIMIZE_DIR_ERR	./libe2fsck/problem.h	940;"	d
PR_3A_OPTIMIZE_DIR_HEADER	./libe2fsck/problem.h	943;"	d
PR_3A_OPTIMIZE_ITER	./libe2fsck/problem.h	937;"	d
PR_3A_PASS_HEADER	./libe2fsck/problem.h	934;"	d
PR_3_ADJUST_INODE	./libe2fsck/problem.h	901;"	d
PR_3_ALLOCATE_IBITMAP_ERROR	./libe2fsck/problem.h	910;"	d
PR_3_BAD_DOT_DOT	./libe2fsck/problem.h	874;"	d
PR_3_CANT_EXPAND_LPF	./libe2fsck/problem.h	880;"	d
PR_3_CANT_RECONNECT	./libe2fsck/problem.h	883;"	d
PR_3_CREATE_LPF_ERROR	./libe2fsck/problem.h	916;"	d
PR_3_CREATE_ROOT_ERROR	./libe2fsck/problem.h	913;"	d
PR_3_ERR_FIND_LPF	./libe2fsck/problem.h	886;"	d
PR_3_ERR_LPF_NEW_BLOCK	./libe2fsck/problem.h	889;"	d
PR_3_ERR_LPF_NEW_DIR_BLOCK	./libe2fsck/problem.h	895;"	d
PR_3_ERR_LPF_NEW_INODE	./libe2fsck/problem.h	892;"	d
PR_3_ERR_LPF_WRITE_BLOCK	./libe2fsck/problem.h	898;"	d
PR_3_EXPAND_LF_DIR	./libe2fsck/problem.h	865;"	d
PR_3_FIX_PARENT_ERR	./libe2fsck/problem.h	904;"	d
PR_3_FIX_PARENT_NOFIND	./libe2fsck/problem.h	907;"	d
PR_3_LPF_NOTDIR	./libe2fsck/problem.h	928;"	d
PR_3_NO_DIRINFO	./libe2fsck/problem.h	925;"	d
PR_3_NO_LF_DIR	./libe2fsck/problem.h	871;"	d
PR_3_NO_LPF	./libe2fsck/problem.h	877;"	d
PR_3_NO_ROOT_INODE	./libe2fsck/problem.h	862;"	d
PR_3_NO_ROOT_INODE_ABORT	./libe2fsck/problem.h	922;"	d
PR_3_PASS_HEADER	./libe2fsck/problem.h	859;"	d
PR_3_ROOT_NOT_DIR_ABORT	./libe2fsck/problem.h	919;"	d
PR_3_UNCONNECTED_DIR	./libe2fsck/problem.h	868;"	d
PR_4_BAD_REF_COUNT	./libe2fsck/problem.h	965;"	d
PR_4_INCONSISTENT_COUNT	./libe2fsck/problem.h	968;"	d
PR_4_PASS_HEADER	./libe2fsck/problem.h	956;"	d
PR_4_UNATTACHED_INODE	./libe2fsck/problem.h	962;"	d
PR_4_ZERO_LEN_INODE	./libe2fsck/problem.h	959;"	d
PR_5_BLOCK_BITMAP_END	./libe2fsck/problem.h	993;"	d
PR_5_BLOCK_BITMAP_HEADER	./libe2fsck/problem.h	984;"	d
PR_5_BLOCK_BMAP_PADDING	./libe2fsck/problem.h	981;"	d
PR_5_BLOCK_RANGE_UNUSED	./libe2fsck/problem.h	1035;"	d
PR_5_BLOCK_RANGE_USED	./libe2fsck/problem.h	1038;"	d
PR_5_BLOCK_UNINIT	./libe2fsck/problem.h	1047;"	d
PR_5_BLOCK_UNUSED	./libe2fsck/problem.h	987;"	d
PR_5_BLOCK_USED	./libe2fsck/problem.h	990;"	d
PR_5_BMAP_ENDPOINTS	./libe2fsck/problem.h	1023;"	d
PR_5_COPY_BBITMAP_ERROR	./libe2fsck/problem.h	1032;"	d
PR_5_COPY_IBITMAP_ERROR	./libe2fsck/problem.h	1029;"	d
PR_5_FREE_BLOCK_COUNT	./libe2fsck/problem.h	1020;"	d
PR_5_FREE_BLOCK_COUNT_GROUP	./libe2fsck/problem.h	1017;"	d
PR_5_FREE_DIR_COUNT_GROUP	./libe2fsck/problem.h	1011;"	d
PR_5_FREE_INODE_COUNT	./libe2fsck/problem.h	1014;"	d
PR_5_FREE_INODE_COUNT_GROUP	./libe2fsck/problem.h	1008;"	d
PR_5_FUDGE_BITMAP_ERROR	./libe2fsck/problem.h	1026;"	d
PR_5_INODE_BITMAP_END	./libe2fsck/problem.h	1005;"	d
PR_5_INODE_BITMAP_HEADER	./libe2fsck/problem.h	996;"	d
PR_5_INODE_BMAP_PADDING	./libe2fsck/problem.h	978;"	d
PR_5_INODE_RANGE_UNUSED	./libe2fsck/problem.h	1041;"	d
PR_5_INODE_RANGE_USED	./libe2fsck/problem.h	1044;"	d
PR_5_INODE_UNINIT	./libe2fsck/problem.h	1050;"	d
PR_5_INODE_UNUSED	./libe2fsck/problem.h	999;"	d
PR_5_INODE_USED	./libe2fsck/problem.h	1002;"	d
PR_5_PASS_HEADER	./libe2fsck/problem.h	975;"	d
PR_6_FLUSH_FILESYSTEM	./libe2fsck/problem.h	1066;"	d
PR_6_IO_FLUSH	./libe2fsck/problem.h	1069;"	d
PR_6_RECREATE_JOURNAL	./libe2fsck/problem.h	1057;"	d
PR_6_SET_BG_CHECKSUM	./libe2fsck/problem.h	1063;"	d
PR_6_UPDATE_QUOTAS	./libe2fsck/problem.h	1060;"	d
PR_AFTER_CODE	./libe2fsck/problemP.h	37;"	d
PR_CONFIG	./libe2fsck/problemP.h	44;"	d
PR_FATAL	./libe2fsck/problemP.h	36;"	d
PR_FORCE_NO	./libe2fsck/problemP.h	46;"	d
PR_LATCH	./libe2fsck/problem.h	44;"	d
PR_LATCH_BBITMAP	./libe2fsck/problem.h	36;"	d
PR_LATCH_BBLOCK	./libe2fsck/problem.h	34;"	d
PR_LATCH_BG_CHECKSUM	./libe2fsck/problem.h	42;"	d
PR_LATCH_BLOCK	./libe2fsck/problem.h	33;"	d
PR_LATCH_DBLOCK	./libe2fsck/problem.h	38;"	d
PR_LATCH_IBITMAP	./libe2fsck/problem.h	35;"	d
PR_LATCH_LOW_DTIME	./libe2fsck/problem.h	39;"	d
PR_LATCH_MASK	./libe2fsck/problem.h	32;"	d
PR_LATCH_OPTIMIZE_DIR	./libe2fsck/problem.h	41;"	d
PR_LATCH_RELOC	./libe2fsck/problem.h	37;"	d
PR_LATCH_TOOBIG	./libe2fsck/problem.h	40;"	d
PR_MSG_ONLY	./libe2fsck/problemP.h	32;"	d
PR_NOCOLLATE	./libe2fsck/problemP.h	40;"	d
PR_NO_DEFAULT	./libe2fsck/problemP.h	31;"	d
PR_NO_NOMSG	./libe2fsck/problemP.h	41;"	d
PR_NO_OK	./libe2fsck/problemP.h	30;"	d
PR_PREEN_NO	./libe2fsck/problemP.h	42;"	d
PR_PREEN_NOHDR	./libe2fsck/problemP.h	43;"	d
PR_PREEN_NOMSG	./libe2fsck/problemP.h	39;"	d
PR_PREEN_OK	./libe2fsck/problemP.h	29;"	d
P_	./libe2fsck/e2fsck.h	38;"	d
P_	./libe2fsck/e2fsck.h	48;"	d
QUERY_NULL_POINTER	./libmdadm/mdadm_errcode.h	/^	QUERY_NULL_POINTER,									$/;"	e	enum:__anon9
QUERY_OPEN_DEV_FAIL	./libmdadm/mdadm_errcode.h	/^	QUERY_OPEN_DEV_FAIL = 551,$/;"	e	enum:__anon9
Query	./libmdadm/mdadm.h	/^extern int Query(char *dev);$/;"	p	signature:(char *dev)
QueryMDDetail	./RAIDManager.cpp	/^bool RAIDManager::QueryMDDetail(const string& mddev_path,$/;"	f	class:RAIDManager	signature:(const string& mddev_path, array_detail &ad)
QueryMDDetail	./RAIDManager.h	/^	bool QueryMDDetail(const string& mddev_path, array_detail &ad);$/;"	p	class:RAIDManager	access:private	signature:(const string& mddev_path, array_detail &ad)
QueryMDSuperBlockInDisk	./RAIDManager.cpp	/^int RAIDManager::QueryMDSuperBlockInDisk(const string& dev_path, examine_result &result)$/;"	f	class:RAIDManager	signature:(const string& dev_path, examine_result &result)
QueryMDSuperBlockInDisk	./RAIDManager.h	/^	int QueryMDSuperBlockInDisk(const string& dev_path, examine_result &result);$/;"	p	class:RAIDManager	access:private	signature:(const string& dev_path, examine_result &result)
RAIDDiskInfo	./RAIDManager.h	/^	RAIDDiskInfo()$/;"	f	struct:RAIDDiskInfo	access:public	signature:()
RAIDDiskInfo	./RAIDManager.h	/^struct RAIDDiskInfo {$/;"	s
RAIDDiskInfo::Dump	./RAIDManager.h	/^	void Dump()$/;"	f	struct:RAIDDiskInfo	access:public	signature:()
RAIDDiskInfo::RAIDDiskInfo	./RAIDManager.h	/^	RAIDDiskInfo()$/;"	f	struct:RAIDDiskInfo	access:public	signature:()
RAIDDiskInfo::m_RaidUUID	./RAIDManager.h	/^	int32_t		m_RaidUUID[4];			\/* Get after Examine(). *\/$/;"	m	struct:RAIDDiskInfo	access:public
RAIDDiskInfo::m_bHasMDSB	./RAIDManager.h	/^	bool		m_bHasMDSB;$/;"	m	struct:RAIDDiskInfo	access:public
RAIDDiskInfo::m_diskProfile	./RAIDManager.h	/^	DiskProfile m_diskProfile;$/;"	m	struct:RAIDDiskInfo	access:public
RAIDDiskInfo::m_iMajor	./RAIDManager.h	/^	int32_t		m_iMajor;				\/* For confirming whether disk is valid or not. *\/$/;"	m	struct:RAIDDiskInfo	access:public
RAIDDiskInfo::m_iMinor	./RAIDManager.h	/^	int32_t		m_iMinor;				\/* For confirming whether disk is valid or not. *\/$/;"	m	struct:RAIDDiskInfo	access:public
RAIDDiskInfo::m_iRaidDiskNum	./RAIDManager.h	/^	int32_t		m_iRaidDiskNum;$/;"	m	struct:RAIDDiskInfo	access:public
RAIDDiskInfo::m_iState	./RAIDManager.h	/^	int32_t		m_iState;$/;"	m	struct:RAIDDiskInfo	access:public
RAIDDiskInfo::m_strDevPath	./RAIDManager.h	/^	string		m_strDevPath;			\/* Device node *\/$/;"	m	struct:RAIDDiskInfo	access:public
RAIDDiskInfo::m_strState	./RAIDManager.h	/^	string		m_strState;$/;"	m	struct:RAIDDiskInfo	access:public
RAIDDiskInfo::operator =	./RAIDManager.h	/^	RAIDDiskInfo& operator=(const RAIDDiskInfo& rhs)$/;"	f	struct:RAIDDiskInfo	access:public	signature:(const RAIDDiskInfo& rhs)
RAIDDiskInfo::operator =	./RAIDManager.h	/^	RAIDDiskInfo& operator=(const struct array_disk_info& rhs)$/;"	f	struct:RAIDDiskInfo	access:public	signature:(const struct array_disk_info& rhs)
RAIDDiskInfo::operator ==	./RAIDManager.h	/^	bool operator==(const DiskProfile& profile) const$/;"	f	struct:RAIDDiskInfo	access:public	signature:(const DiskProfile& profile) const
RAIDDiskInfo::operator ==	./RAIDManager.h	/^	bool operator==(const RAIDDiskInfo& rhs) const$/;"	f	struct:RAIDDiskInfo	access:public	signature:(const RAIDDiskInfo& rhs) const
RAIDDiskInfo::operator ==	./RAIDManager.h	/^	bool operator==(const string& rhs) const$/;"	f	struct:RAIDDiskInfo	access:public	signature:(const string& rhs) const
RAIDDiskInfo::~RAIDDiskInfo	./RAIDManager.h	/^	~RAIDDiskInfo() {}$/;"	f	struct:RAIDDiskInfo	access:public	signature:()
RAIDInfo	./RAIDManager.h	/^	RAIDInfo()$/;"	f	struct:RAIDInfo	access:public	signature:()
RAIDInfo	./RAIDManager.h	/^struct RAIDInfo {$/;"	s
RAIDInfo::Dump	./RAIDManager.h	/^	void Dump()$/;"	f	struct:RAIDInfo	access:public	signature:()
RAIDInfo::IsRAIDStatusChanged	./RAIDManager.h	/^	bool IsRAIDStatusChanged(const RAIDInfo& previous) {$/;"	f	struct:RAIDInfo	access:public	signature:(const RAIDInfo& previous)
RAIDInfo::RAIDInfo	./RAIDManager.h	/^	RAIDInfo()$/;"	f	struct:RAIDInfo	access:public	signature:()
RAIDInfo::m_CreationTime	./RAIDManager.h	/^	time_t			m_CreationTime;$/;"	m	struct:RAIDInfo	access:public
RAIDInfo::m_UUID	./RAIDManager.h	/^	uint32_t		m_UUID[4];$/;"	m	struct:RAIDInfo	access:public
RAIDInfo::m_UpdateTime	./RAIDManager.h	/^	time_t			m_UpdateTime;$/;"	m	struct:RAIDInfo	access:public
RAIDInfo::m_bFormat	./RAIDManager.h	/^	bool			m_bFormat;$/;"	m	struct:RAIDInfo	access:public
RAIDInfo::m_bInactive	./RAIDManager.h	/^	bool			m_bInactive;$/;"	m	struct:RAIDInfo	access:public
RAIDInfo::m_bMount	./RAIDManager.h	/^	bool			m_bMount;$/;"	m	struct:RAIDInfo	access:public
RAIDInfo::m_bRebuilding	./RAIDManager.h	/^	bool			m_bRebuilding;$/;"	m	struct:RAIDInfo	access:public
RAIDInfo::m_bSuperBlockPersistent	./RAIDManager.h	/^	bool			m_bSuperBlockPersistent;$/;"	m	struct:RAIDInfo	access:public
RAIDInfo::m_iActiveDiskNum	./RAIDManager.h	/^	int32_t			m_iActiveDiskNum;$/;"	m	struct:RAIDInfo	access:public
RAIDInfo::m_iChunkSize	./RAIDManager.h	/^	int32_t			m_iChunkSize;$/;"	m	struct:RAIDInfo	access:public
RAIDInfo::m_iFailedDiskNum	./RAIDManager.h	/^	int32_t			m_iFailedDiskNum;$/;"	m	struct:RAIDInfo	access:public
RAIDInfo::m_iFormatProgress	./RAIDManager.h	/^	int32_t			m_iFormatProgress;$/;"	m	struct:RAIDInfo	access:public
RAIDInfo::m_iFormatingState	./RAIDManager.h	/^	int32_t			m_iFormatingState;$/;"	m	struct:RAIDInfo	access:public
RAIDInfo::m_iMDNum	./RAIDManager.h	/^	int32_t			m_iMDNum;$/;"	m	struct:RAIDInfo	access:public
RAIDInfo::m_iRAIDDiskNum	./RAIDManager.h	/^	int32_t			m_iRAIDDiskNum;$/;"	m	struct:RAIDInfo	access:public
RAIDInfo::m_iRAIDLevel	./RAIDManager.h	/^	int32_t			m_iRAIDLevel;$/;"	m	struct:RAIDInfo	access:public
RAIDInfo::m_iRebuildingProgress	./RAIDManager.h	/^	int32_t			m_iRebuildingProgress;$/;"	m	struct:RAIDInfo	access:public
RAIDInfo::m_iSpareDiskNum	./RAIDManager.h	/^	int32_t			m_iSpareDiskNum;$/;"	m	struct:RAIDInfo	access:public
RAIDInfo::m_iState	./RAIDManager.h	/^	int32_t			m_iState;$/;"	m	struct:RAIDInfo	access:public
RAIDInfo::m_iTotalDiskNum	./RAIDManager.h	/^	int32_t			m_iTotalDiskNum;$/;"	m	struct:RAIDInfo	access:public
RAIDInfo::m_iWorkingDiskNum	./RAIDManager.h	/^	int32_t			m_iWorkingDiskNum;$/;"	m	struct:RAIDInfo	access:public
RAIDInfo::m_strDevPath	./RAIDManager.h	/^	string			m_strDevPath;$/;"	m	struct:RAIDInfo	access:public
RAIDInfo::m_strLayout	./RAIDManager.h	/^	string			m_strLayout;$/;"	m	struct:RAIDInfo	access:public
RAIDInfo::m_strMountPoint	./RAIDManager.h	/^	string			m_strMountPoint;$/;"	m	struct:RAIDInfo	access:public
RAIDInfo::m_strRebuildingOperation	./RAIDManager.h	/^	string			m_strRebuildingOperation;$/;"	m	struct:RAIDInfo	access:public
RAIDInfo::m_strState	./RAIDManager.h	/^	string			m_strState;$/;"	m	struct:RAIDInfo	access:public
RAIDInfo::m_strSysName	./RAIDManager.h	/^	string			m_strSysName;$/;"	m	struct:RAIDInfo	access:public
RAIDInfo::m_ullTotalCapacity	./RAIDManager.h	/^	int64_t			m_ullTotalCapacity;$/;"	m	struct:RAIDInfo	access:public
RAIDInfo::m_ullUsedSize	./RAIDManager.h	/^	int64_t			m_ullUsedSize;$/;"	m	struct:RAIDInfo	access:public
RAIDInfo::m_vDiskList	./RAIDManager.h	/^	vector<RAIDDiskInfo>	m_vDiskList;$/;"	m	struct:RAIDInfo	access:public
RAIDInfo::operator =	./RAIDManager.h	/^	RAIDInfo& operator=(const RAIDInfo& rhs)$/;"	f	struct:RAIDInfo	access:public	signature:(const RAIDInfo& rhs)
RAIDInfo::operator =	./RAIDManager.h	/^	RAIDInfo& operator=(const struct array_detail& rhs)$/;"	f	struct:RAIDInfo	access:public	signature:(const struct array_detail& rhs)
RAIDInfo::operator ==	./RAIDManager.h	/^	bool operator==(const RAIDInfo& rhs) const$/;"	f	struct:RAIDInfo	access:public	signature:(const RAIDInfo& rhs) const
RAIDInfo::operator ==	./RAIDManager.h	/^	bool operator==(const string& rhs) const$/;"	f	struct:RAIDInfo	access:public	signature:(const string& rhs) const
RAIDInfo::~RAIDInfo	./RAIDManager.h	/^	~RAIDInfo() {$/;"	f	struct:RAIDInfo	access:public	signature:()
RAIDMANAGER_MONITOR_INTERVAL	./RAIDManager.cpp	12;"	d	file:
RAIDManager	./RAIDManager.cpp	/^RAIDManager::RAIDManager()$/;"	f	class:RAIDManager	signature:()
RAIDManager	./RAIDManager.h	/^	RAIDManager();$/;"	p	class:RAIDManager	access:public	signature:()
RAIDManager	./RAIDManager.h	/^class RAIDManager : public AprThreadWorker {$/;"	c	inherits:AprThreadWorker
RAIDManager::AddDisk	./RAIDManager.cpp	/^bool RAIDManager::AddDisk(const string& dev)$/;"	f	class:RAIDManager	signature:(const string& dev)
RAIDManager::AddDisk	./RAIDManager.h	/^	bool AddDisk(const string& dev);$/;"	p	class:RAIDManager	access:public	signature:(const string& dev)
RAIDManager::AddMDDisks	./RAIDManager.cpp	/^bool RAIDManager::AddMDDisks(const string& mddev, vector<string>& vDevList)$/;"	f	class:RAIDManager	signature:(const string& mddev, vector<string>& vDevList)
RAIDManager::AddMDDisks	./RAIDManager.h	/^	bool AddMDDisks(const string& mddev, vector<string>& vDevList);$/;"	p	class:RAIDManager	access:public	signature:(const string& mddev, vector<string>& vDevList)
RAIDManager::AssembleRAID	./RAIDManager.cpp	/^bool RAIDManager::AssembleRAID(const int uuid[4], string& mddev)$/;"	f	class:RAIDManager	signature:(const int uuid[4], string& mddev)
RAIDManager::AssembleRAID	./RAIDManager.cpp	/^int RAIDManager::AssembleRAID(const string& mddev, const int uuid[4])$/;"	f	class:RAIDManager	signature:(const string& mddev, const int uuid[4])
RAIDManager::AssembleRAID	./RAIDManager.h	/^	bool AssembleRAID(const int uuid[4], string &mddev);$/;"	p	class:RAIDManager	access:private	signature:(const int uuid[4], string &mddev)
RAIDManager::AssembleRAID	./RAIDManager.h	/^	int AssembleRAID(const string& mddev, const int uuid[4]);$/;"	p	class:RAIDManager	access:private	signature:(const string& mddev, const int uuid[4])
RAIDManager::CheckFileSystem	./RAIDManager.h	/^	bool CheckFileSystem();$/;"	p	class:RAIDManager	access:public	signature:()
RAIDManager::CreateRAID	./RAIDManager.cpp	/^bool RAIDManager::CreateRAID(vector<string>& vDevList, int level)$/;"	f	class:RAIDManager	signature:(vector<string>& vDevList, int level)
RAIDManager::CreateRAID	./RAIDManager.cpp	/^int RAIDManager::CreateRAID(const string& mddev, vector<string>& vDevList, int level)$/;"	f	class:RAIDManager	signature:(const string& mddev, vector<string>& vDevList, int level)
RAIDManager::CreateRAID	./RAIDManager.h	/^	bool CreateRAID(vector<string>& vDevList, int level);$/;"	p	class:RAIDManager	access:public	signature:(vector<string>& vDevList, int level)
RAIDManager::CreateRAID	./RAIDManager.h	/^	int CreateRAID(const string& mddev, vector<string>& vDevList, int level);$/;"	p	class:RAIDManager	access:private	signature:(const string& mddev, vector<string>& vDevList, int level)
RAIDManager::DeleteRAID	./RAIDManager.cpp	/^bool RAIDManager::DeleteRAID(const string& mddev)$/;"	f	class:RAIDManager	signature:(const string& mddev)
RAIDManager::DeleteRAID	./RAIDManager.h	/^	bool DeleteRAID(const string& mddev);$/;"	p	class:RAIDManager	access:public	signature:(const string& mddev)
RAIDManager::DoFileSystemRecovery	./RAIDManager.h	/^	bool DoFileSystemRecovery();$/;"	p	class:RAIDManager	access:public	signature:()
RAIDManager::Dump	./RAIDManager.cpp	/^void RAIDManager::Dump()$/;"	f	class:RAIDManager	signature:()
RAIDManager::Dump	./RAIDManager.h	/^	void Dump();$/;"	p	class:RAIDManager	access:public	signature:()
RAIDManager::Format	./RAIDManager.cpp	/^bool RAIDManager::Format(const string& mddev)$/;"	f	class:RAIDManager	signature:(const string& mddev)
RAIDManager::Format	./RAIDManager.h	/^	bool Format(const string& mddev);$/;"	p	class:RAIDManager	access:public	signature:(const string& mddev)
RAIDManager::FreeDevList	./RAIDManager.cpp	/^void RAIDManager::FreeDevList(struct mddev_dev* devlist)$/;"	f	class:RAIDManager	signature:(struct mddev_dev* devlist)
RAIDManager::FreeDevList	./RAIDManager.h	/^	void FreeDevList(struct mddev_dev* devlist);$/;"	p	class:RAIDManager	access:private	signature:(struct mddev_dev* devlist)
RAIDManager::FreeMDNum	./RAIDManager.cpp	/^void RAIDManager::FreeMDNum(int n)$/;"	f	class:RAIDManager	signature:(int n)
RAIDManager::FreeMDNum	./RAIDManager.h	/^	void FreeMDNum(int n);$/;"	p	class:RAIDManager	access:private	signature:(int n)
RAIDManager::FreeVolumeNum	./RAIDManager.cpp	/^void RAIDManager::FreeVolumeNum(int n)$/;"	f	class:RAIDManager	signature:(int n)
RAIDManager::FreeVolumeNum	./RAIDManager.h	/^	void FreeVolumeNum(int n);$/;"	p	class:RAIDManager	access:private	signature:(int n)
RAIDManager::GenerateMDSysName	./RAIDManager.cpp	/^string RAIDManager::GenerateMDSysName(int num)$/;"	f	class:RAIDManager	signature:(int num)
RAIDManager::GenerateMDSysName	./RAIDManager.h	/^	string GenerateMDSysName(int num);$/;"	p	class:RAIDManager	access:private	signature:(int num)
RAIDManager::GenerateRAIDInfo	./RAIDManager.cpp	/^bool RAIDManager::GenerateRAIDInfo(const MDProfile &profile, RAIDInfo& info)$/;"	f	class:RAIDManager	signature:(const MDProfile &profile, RAIDInfo& info)
RAIDManager::GenerateRAIDInfo	./RAIDManager.h	/^	bool GenerateRAIDInfo(const MDProfile &profile, RAIDInfo& info);$/;"	p	class:RAIDManager	access:private	signature:(const MDProfile &profile, RAIDInfo& info)
RAIDManager::GetDeviceNodeBySymLink	./RAIDManager.cpp	/^string RAIDManager::GetDeviceNodeBySymLink(const string& symlink)$/;"	f	class:RAIDManager	signature:(const string& symlink)
RAIDManager::GetDeviceNodeBySymLink	./RAIDManager.h	/^	string GetDeviceNodeBySymLink(const string& symlink);$/;"	p	class:RAIDManager	access:private	signature:(const string& symlink)
RAIDManager::GetFileSystemStatus	./RAIDManager.h	/^	bool GetFileSystemStatus();$/;"	p	class:RAIDManager	access:public	signature:()
RAIDManager::GetFormatProgress	./RAIDManager.cpp	/^bool RAIDManager::GetFormatProgress(const string& mddev,$/;"	f	class:RAIDManager	signature:(const string& mddev, int& stat, int& progress)
RAIDManager::GetFormatProgress	./RAIDManager.h	/^	bool GetFormatProgress(const string& mddev,$/;"	p	class:RAIDManager	access:public	signature:(const string& mddev, int& stat, int& progress)
RAIDManager::GetFreeDiskInfo	./RAIDManager.cpp	/^bool RAIDManager::GetFreeDiskInfo(const string& symlink, RAIDDiskInfo &info)$/;"	f	class:RAIDManager	signature:(const string& symlink, RAIDDiskInfo &info)
RAIDManager::GetFreeDiskInfo	./RAIDManager.h	/^	bool GetFreeDiskInfo(const string& symlink, RAIDDiskInfo &info);$/;"	p	class:RAIDManager	access:public	signature:(const string& symlink, RAIDDiskInfo &info)
RAIDManager::GetFreeDisksInfo	./RAIDManager.cpp	/^void RAIDManager::GetFreeDisksInfo(vector<RAIDDiskInfo> &list)$/;"	f	class:RAIDManager	signature:(vector<RAIDDiskInfo> &list)
RAIDManager::GetFreeDisksInfo	./RAIDManager.h	/^	void GetFreeDisksInfo(vector<RAIDDiskInfo> &list);$/;"	p	class:RAIDManager	access:public	signature:(vector<RAIDDiskInfo> &list)
RAIDManager::GetFreeMDNum	./RAIDManager.cpp	/^int RAIDManager::GetFreeMDNum()$/;"	f	class:RAIDManager	signature:()
RAIDManager::GetFreeMDNum	./RAIDManager.h	/^	int GetFreeMDNum();$/;"	p	class:RAIDManager	access:private	signature:()
RAIDManager::GetFreeVolumeNum	./RAIDManager.cpp	/^int RAIDManager::GetFreeVolumeNum()$/;"	f	class:RAIDManager	signature:()
RAIDManager::GetFreeVolumeNum	./RAIDManager.h	/^	int GetFreeVolumeNum();$/;"	p	class:RAIDManager	access:private	signature:()
RAIDManager::GetLastError	./RAIDManager.cpp	/^void RAIDManager::GetLastError(string &log)$/;"	f	class:RAIDManager	signature:(string &log)
RAIDManager::GetLastError	./RAIDManager.h	/^	void GetLastError(string &log);$/;"	p	class:RAIDManager	access:public	signature:(string &log)
RAIDManager::GetRAIDInfo	./RAIDManager.cpp	/^bool RAIDManager::GetRAIDInfo(const string& mddev, RAIDInfo& info)$/;"	f	class:RAIDManager	signature:(const string& mddev, RAIDInfo& info)
RAIDManager::GetRAIDInfo	./RAIDManager.cpp	/^void RAIDManager::GetRAIDInfo(vector<RAIDInfo>& list)$/;"	f	class:RAIDManager	signature:(vector<RAIDInfo>& list)
RAIDManager::GetRAIDInfo	./RAIDManager.h	/^	bool GetRAIDInfo(const string& mddev, RAIDInfo& info);$/;"	p	class:RAIDManager	access:public	signature:(const string& mddev, RAIDInfo& info)
RAIDManager::GetRAIDInfo	./RAIDManager.h	/^	void GetRAIDInfo(vector<RAIDInfo>& list);$/;"	p	class:RAIDManager	access:public	signature:(vector<RAIDInfo>& list)
RAIDManager::Initialize	./RAIDManager.cpp	/^bool RAIDManager::Initialize()$/;"	f	class:RAIDManager	signature:()
RAIDManager::Initialize	./RAIDManager.h	/^	bool Initialize();$/;"	p	class:RAIDManager	access:private	signature:()
RAIDManager::InitializeContext	./RAIDManager.cpp	/^void RAIDManager::InitializeContext(struct context& c, int force, int runstop, int verbose)$/;"	f	class:RAIDManager	signature:(struct context& c, int force, int runstop, int verbose)
RAIDManager::InitializeContext	./RAIDManager.h	/^	void InitializeContext(struct context& c, int force = 1, int runstop = 1, int verbose = 0);$/;"	p	class:RAIDManager	access:private	signature:(struct context& c, int force = 1, int runstop = 1, int verbose = 0)
RAIDManager::InitializeContext	./RAIDManager.h	/^	void InitializeContext(struct context& c, int force = 1, int runstop = 1, int verbose = 1);$/;"	p	class:RAIDManager	access:private	signature:(struct context& c, int force = 1, int runstop = 1, int verbose = 1)
RAIDManager::InitializeDevList	./RAIDManager.cpp	/^struct mddev_dev* RAIDManager::InitializeDevList(const string& replace, const string& with)$/;"	f	class:RAIDManager	signature:(const string& replace, const string& with)
RAIDManager::InitializeDevList	./RAIDManager.cpp	/^struct mddev_dev* RAIDManager::InitializeDevList(vector<string>& devNameList, int disposition)$/;"	f	class:RAIDManager	signature:(vector<string>& devNameList, int disposition)
RAIDManager::InitializeDevList	./RAIDManager.h	/^	struct mddev_dev* InitializeDevList(const string& replace, const string& with);$/;"	p	class:RAIDManager	access:private	signature:(const string& replace, const string& with)
RAIDManager::InitializeDevList	./RAIDManager.h	/^	struct mddev_dev* InitializeDevList(vector<string>& devNameList, int disposition = 0);$/;"	p	class:RAIDManager	access:private	signature:(vector<string>& devNameList, int disposition = 0)
RAIDManager::InitializeMDDevIdent	./RAIDManager.cpp	/^void RAIDManager::InitializeMDDevIdent(struct mddev_ident& ident, int uuid_set, const int uuid[4], int bitmap_fd, char* bitmap_file)$/;"	f	class:RAIDManager	signature:(struct mddev_ident& ident, int uuid_set, const int uuid[4], int bitmap_fd, char* bitmap_file)
RAIDManager::InitializeMDDevIdent	./RAIDManager.h	/^	void InitializeMDDevIdent(struct mddev_ident& ident, int uuid_set, const int uuid[4], int bitmap_fd = -1, char* bitmap_file = NULL);$/;"	p	class:RAIDManager	access:private	signature:(struct mddev_ident& ident, int uuid_set, const int uuid[4], int bitmap_fd = -1, char* bitmap_file = NULL)
RAIDManager::InitializeShape	./RAIDManager.cpp	/^void RAIDManager::InitializeShape(struct shape& s, int raiddisks, int level, int chunk, int bitmap_chunk, char* bitmap_file)$/;"	f	class:RAIDManager	signature:(struct shape& s, int raiddisks, int level, int chunk, int bitmap_chunk, char* bitmap_file)
RAIDManager::InitializeShape	./RAIDManager.h	/^	void InitializeShape(struct shape& s, int raiddisks, int level, int chunk = 512, int bitmap_chunk = UnSet, char* bitmap_file = NULL);$/;"	p	class:RAIDManager	access:private	signature:(struct shape& s, int raiddisks, int level, int chunk = 512, int bitmap_chunk = UnSet, char* bitmap_file = NULL)
RAIDManager::IsDiskExistInRAIDDiskList	./RAIDManager.h	/^	bool IsDiskExistInRAIDDiskList(const string& dev);$/;"	p	class:RAIDManager	access:private	signature:(const string& dev)
RAIDManager::IsDiskExistInRAIDDiskList	./RAIDManager.h	/^	bool IsDiskExistInRAIDDiskList(vector<string>& vDevList);$/;"	p	class:RAIDManager	access:private	signature:(vector<string>& vDevList)
RAIDManager::IsFormated	./RAIDManager.cpp	/^bool RAIDManager::IsFormated(const string& mddev)$/;"	f	class:RAIDManager	signature:(const string& mddev)
RAIDManager::IsFormated	./RAIDManager.h	/^	bool IsFormated(const string& mddev);$/;"	p	class:RAIDManager	access:public	signature:(const string& mddev)
RAIDManager::IsMDDevInRAIDInfoList	./RAIDManager.h	/^	vector<RAIDInfo>::iterator IsMDDevInRAIDInfoList(const string &mddev);$/;"	p	class:RAIDManager	access:private	signature:(const string &mddev)
RAIDManager::IsMDDevInRAIDInfoList	./RAIDManager.h	/^	vector<RAIDInfo>::iterator IsMDDevInRAIDInfoList(const string &mddev, RAIDInfo& info);$/;"	p	class:RAIDManager	access:private	signature:(const string &mddev, RAIDInfo& info)
RAIDManager::IsMounted	./RAIDManager.cpp	/^bool RAIDManager::IsMounted(const string& mddev, int &num)$/;"	f	class:RAIDManager	signature:(const string& mddev, int &num)
RAIDManager::IsMounted	./RAIDManager.h	/^	bool IsMounted(const string& mddev, int &num);$/;"	p	class:RAIDManager	access:public	signature:(const string& mddev, int &num)
RAIDManager::ManageRAIDSubdevs	./RAIDManager.cpp	/^bool RAIDManager::ManageRAIDSubdevs(const string& mddev, vector<string>& vDevList, int operation)$/;"	f	class:RAIDManager	signature:(const string& mddev, vector<string>& vDevList, int operation)
RAIDManager::ManageRAIDSubdevs	./RAIDManager.h	/^	bool ManageRAIDSubdevs(const string& mddev, vector<string>& vDevList, int operation);$/;"	p	class:RAIDManager	access:private	signature:(const string& mddev, vector<string>& vDevList, int operation)
RAIDManager::MarkFaultyMDDisks	./RAIDManager.cpp	/^bool RAIDManager::MarkFaultyMDDisks(const string& mddev, vector<string>& vDevList)$/;"	f	class:RAIDManager	signature:(const string& mddev, vector<string>& vDevList)
RAIDManager::MarkFaultyMDDisks	./RAIDManager.h	/^	bool MarkFaultyMDDisks(const string& mddev, vector<string>& vDevList);$/;"	p	class:RAIDManager	access:public	signature:(const string& mddev, vector<string>& vDevList)
RAIDManager::Mount	./RAIDManager.cpp	/^bool RAIDManager::Mount(const string& mddev)$/;"	f	class:RAIDManager	signature:(const string& mddev)
RAIDManager::Mount	./RAIDManager.h	/^	bool Mount(const string& mddev);$/;"	p	class:RAIDManager	access:public	signature:(const string& mddev)
RAIDManager::NotifyChange	./RAIDManager.cpp	/^void RAIDManager::NotifyChange()$/;"	f	class:RAIDManager	signature:()
RAIDManager::NotifyChange	./RAIDManager.h	/^	void NotifyChange();$/;"	p	class:RAIDManager	access:private	signature:()
RAIDManager::OpenMDDev	./RAIDManager.cpp	/^int RAIDManager::OpenMDDev(const string& mddev_path)$/;"	f	class:RAIDManager	signature:(const string& mddev_path)
RAIDManager::OpenMDDev	./RAIDManager.h	/^	int OpenMDDev(const string& mddev_path);$/;"	p	class:RAIDManager	access:private	signature:(const string& mddev_path)
RAIDManager::QueryMDDetail	./RAIDManager.cpp	/^bool RAIDManager::QueryMDDetail(const string& mddev_path,$/;"	f	class:RAIDManager	signature:(const string& mddev_path, array_detail &ad)
RAIDManager::QueryMDDetail	./RAIDManager.h	/^	bool QueryMDDetail(const string& mddev_path, array_detail &ad);$/;"	p	class:RAIDManager	access:private	signature:(const string& mddev_path, array_detail &ad)
RAIDManager::QueryMDSuperBlockInDisk	./RAIDManager.cpp	/^int RAIDManager::QueryMDSuperBlockInDisk(const string& dev_path, examine_result &result)$/;"	f	class:RAIDManager	signature:(const string& dev_path, examine_result &result)
RAIDManager::QueryMDSuperBlockInDisk	./RAIDManager.h	/^	int QueryMDSuperBlockInDisk(const string& dev_path, examine_result &result);$/;"	p	class:RAIDManager	access:private	signature:(const string& dev_path, examine_result &result)
RAIDManager::RAIDManager	./RAIDManager.cpp	/^RAIDManager::RAIDManager()$/;"	f	class:RAIDManager	signature:()
RAIDManager::RAIDManager	./RAIDManager.h	/^	RAIDManager();$/;"	p	class:RAIDManager	access:public	signature:()
RAIDManager::ReaddMDDisks	./RAIDManager.cpp	/^bool RAIDManager::ReaddMDDisks(const string& mddev, vector<string>& vDevList)$/;"	f	class:RAIDManager	signature:(const string& mddev, vector<string>& vDevList)
RAIDManager::ReaddMDDisks	./RAIDManager.h	/^	bool ReaddMDDisks(const string& mddev, vector<string>& vDevList);$/;"	p	class:RAIDManager	access:public	signature:(const string& mddev, vector<string>& vDevList)
RAIDManager::RegisterCB	./RAIDManager.cpp	/^void RAIDManager::RegisterCB(raidmgr_cb cb)$/;"	f	class:RAIDManager	signature:(raidmgr_cb cb)
RAIDManager::RegisterCB	./RAIDManager.h	/^	void RegisterCB(raidmgr_cb cb);$/;"	p	class:RAIDManager	access:public	signature:(raidmgr_cb cb)
RAIDManager::RemoveDisk	./RAIDManager.cpp	/^bool RAIDManager::RemoveDisk(const string& dev)$/;"	f	class:RAIDManager	signature:(const string& dev)
RAIDManager::RemoveDisk	./RAIDManager.h	/^	bool RemoveDisk(const string& dev);$/;"	p	class:RAIDManager	access:public	signature:(const string& dev)
RAIDManager::RemoveMDDisks	./RAIDManager.cpp	/^bool RAIDManager::RemoveMDDisks(const string& mddev, vector<string>& vDevList)$/;"	f	class:RAIDManager	signature:(const string& mddev, vector<string>& vDevList)
RAIDManager::RemoveMDDisks	./RAIDManager.h	/^	bool RemoveMDDisks(const string& mddev, vector<string>& vDevList);$/;"	p	class:RAIDManager	access:public	signature:(const string& mddev, vector<string>& vDevList)
RAIDManager::ReplaceMDDisk	./RAIDManager.cpp	/^bool RAIDManager::ReplaceMDDisk(const string& mddev, const string& replace, const string& with)$/;"	f	class:RAIDManager	signature:(const string& mddev, const string& replace, const string& with)
RAIDManager::ReplaceMDDisk	./RAIDManager.h	/^	bool ReplaceMDDisk(const string& mddev, const string& replace, const string& with);$/;"	p	class:RAIDManager	access:public	signature:(const string& mddev, const string& replace, const string& with)
RAIDManager::SearchDiskBelong2RAID	./RAIDManager.h	/^	vector<RAIDInfo>::iterator SearchDiskBelong2RAID(RAIDDiskInfo& devInfo);$/;"	p	class:RAIDManager	access:private	signature:(RAIDDiskInfo& devInfo)
RAIDManager::SetLastError	./RAIDManager.cpp	/^void RAIDManager::SetLastError(const string &fmt, ...)$/;"	f	class:RAIDManager	signature:(const string &fmt, ...)
RAIDManager::SetLastError	./RAIDManager.h	/^	void SetLastError(const string &fmt, ...);$/;"	p	class:RAIDManager	access:public	signature:(const string &fmt, ...)
RAIDManager::SetMDNum	./RAIDManager.cpp	/^void RAIDManager::SetMDNum(int n)$/;"	f	class:RAIDManager	signature:(int n)
RAIDManager::SetMDNum	./RAIDManager.h	/^	void SetMDNum(int n);$/;"	p	class:RAIDManager	access:private	signature:(int n)
RAIDManager::SetVolumeNum	./RAIDManager.cpp	/^void RAIDManager::SetVolumeNum(int n)$/;"	f	class:RAIDManager	signature:(int n)
RAIDManager::SetVolumeNum	./RAIDManager.h	/^	void SetVolumeNum(int n);$/;"	p	class:RAIDManager	access:private	signature:(int n)
RAIDManager::StopRAID	./RAIDManager.cpp	/^bool RAIDManager::StopRAID(const string& mddev)$/;"	f	class:RAIDManager	signature:(const string& mddev)
RAIDManager::StopRAID	./RAIDManager.h	/^	bool StopRAID(const string& mddev);$/;"	p	class:RAIDManager	access:private	signature:(const string& mddev)
RAIDManager::ThreadProc	./RAIDManager.cpp	/^void RAIDManager::ThreadProc()$/;"	f	class:RAIDManager	signature:()
RAIDManager::ThreadProc	./RAIDManager.h	/^	void ThreadProc();$/;"	p	class:RAIDManager	access:protected	signature:()
RAIDManager::Unmount	./RAIDManager.cpp	/^bool RAIDManager::Unmount(const string& mddev)$/;"	f	class:RAIDManager	signature:(const string& mddev)
RAIDManager::Unmount	./RAIDManager.h	/^	bool Unmount(const string& mddev);$/;"	p	class:RAIDManager	access:public	signature:(const string& mddev)
RAIDManager::UpdateRAIDDiskList	./RAIDManager.h	/^	void UpdateRAIDDiskList(vector<RAIDDiskInfo>& vRAIDDiskInfoList, const string& mddev);$/;"	p	class:RAIDManager	access:private	signature:(vector<RAIDDiskInfo>& vRAIDDiskInfoList, const string& mddev)
RAIDManager::eTC_STOP	./RAIDManager.h	/^		eTC_STOP,$/;"	e	enum:RAIDManager::__anon13
RAIDManager::m_bUsedMD	./RAIDManager.h	/^	bool m_bUsedMD[128];$/;"	m	class:RAIDManager	access:private
RAIDManager::m_bUsedVolume	./RAIDManager.h	/^	bool m_bUsedVolume[128];$/;"	m	class:RAIDManager	access:private
RAIDManager::m_cb	./RAIDManager.h	/^	raidmgr_cb m_cb;$/;"	m	class:RAIDManager	access:private
RAIDManager::m_csDiskProfiles	./RAIDManager.h	/^	CriticalSection m_csDiskProfiles;$/;"	m	class:RAIDManager	access:private
RAIDManager::m_csLastError	./RAIDManager.h	/^	CriticalSection m_csLastError;$/;"	m	class:RAIDManager	access:private
RAIDManager::m_csMDProfiles	./RAIDManager.h	/^	CriticalSection m_csMDProfiles;$/;"	m	class:RAIDManager	access:private
RAIDManager::m_csNotifyChange	./RAIDManager.h	/^	CriticalSection m_csNotifyChange;$/;"	m	class:RAIDManager	access:private
RAIDManager::m_csUsedMD	./RAIDManager.h	/^	CriticalSection m_csUsedMD;$/;"	m	class:RAIDManager	access:private
RAIDManager::m_csUsedVolume	./RAIDManager.h	/^	CriticalSection m_csUsedVolume;$/;"	m	class:RAIDManager	access:private
RAIDManager::m_mapDiskProfiles	./RAIDManager.h	/^	map<string, DiskProfile> m_mapDiskProfiles; \/* \/dev\/sdX, profile *\/$/;"	m	class:RAIDManager	access:private
RAIDManager::m_mapMDProfiles	./RAIDManager.h	/^	map<string, MDProfile> m_mapMDProfiles; \/* \/dev\/mdX, profile *\/$/;"	m	class:RAIDManager	access:private
RAIDManager::m_pNotifyChange	./RAIDManager.h	/^	AprCond *m_pNotifyChange;$/;"	m	class:RAIDManager	access:private
RAIDManager::m_semAssemble	./RAIDManager.h	/^	Semaphore m_semAssemble;$/;"	m	class:RAIDManager	access:private
RAIDManager::m_strLastError	./RAIDManager.h	/^	string m_strLastError;$/;"	m	class:RAIDManager	access:private
RAIDManager::~RAIDManager	./RAIDManager.cpp	/^RAIDManager::~RAIDManager()$/;"	f	class:RAIDManager	signature:()
RAIDManager::~RAIDManager	./RAIDManager.h	/^	~RAIDManager();$/;"	p	class:RAIDManager	access:public	signature:()
RAID_AUTORUN	./libmdadm/md_u.h	25;"	d
RAID_STATUS_BIT_DEGRADE	./libmdadm/mdadm_other.h	/^	RAID_STATUS_BIT_DEGRADE,$/;"	e	enum:__anon10
RAID_STATUS_BIT_FAILED	./libmdadm/mdadm_other.h	/^	RAID_STATUS_BIT_FAILED,$/;"	e	enum:__anon10
RAID_STATUS_BIT_FILESYS_ERR	./libmdadm/mdadm_other.h	/^	RAID_STATUS_BIT_FILESYS_ERR,$/;"	e	enum:__anon10
RAID_STATUS_BIT_FUNCTIONAL	./libmdadm/mdadm_other.h	/^	RAID_STATUS_BIT_FUNCTIONAL = 0,$/;"	e	enum:__anon10
RAID_STATUS_BIT_RECOVERING	./libmdadm/mdadm_other.h	/^	RAID_STATUS_BIT_RECOVERING,$/;"	e	enum:__anon10
RAID_STATUS_BIT_UNFORMATED	./libmdadm/mdadm_other.h	/^	RAID_STATUS_BIT_UNFORMATED,$/;"	e	enum:__anon10
RAID_STATUS_BIT_UNMOUNTED	./libmdadm/mdadm_other.h	/^	RAID_STATUS_BIT_UNMOUNTED,$/;"	e	enum:__anon10
RAID_VERSION	./libmdadm/md_u.h	21;"	d
READ	./libe2fsck/jfs_compat.h	15;"	d
RESHAPE_NO_BACKUP	./libmdadm/mdadm.h	203;"	d
RESOURCE_TRACK	./libe2fsck/e2fsck.h	123;"	d
RESTART_ARRAY_RW	./libmdadm/md_u.h	46;"	d
RESYNC	./libmdadm/bitmap.h	95;"	d
RESYNC_DELAYED	./libmdadm/mdadm.h	1499;"	d
RESYNC_MASK	./libmdadm/bitmap.h	92;"	d
RESYNC_NONE	./libmdadm/mdadm.h	1498;"	d
RESYNC_PENDING	./libmdadm/mdadm.h	1500;"	d
RESYNC_UNKNOWN	./libmdadm/mdadm.h	1501;"	d
ROLLBACK_METADATA_CHANGES	./libmdadm/mdadm.h	825;"	d
ROUND_UP	./libmdadm/mdadm.h	1357;"	d
ROUND_UP_PTR	./libmdadm/mdadm.h	1358;"	d
RUN_ARRAY	./libmdadm/md_u.h	42;"	d
ReadFixable	./libmdadm/mdadm.h	1430;"	d
ReadMDStat	./RAIDManager.h	/^	void ReadMDStat()$/;"	f	struct:DiskProfile	access:public	signature:()
ReadMDStat	./RAIDManager.h	/^	void ReadMDStat()$/;"	f	struct:MDProfile	access:public	signature:()
ReadPersistent	./libmdadm/mdadm.h	1428;"	d
ReadTransient	./libmdadm/mdadm.h	1426;"	d
ReaddMDDisks	./RAIDManager.cpp	/^bool RAIDManager::ReaddMDDisks(const string& mddev, vector<string>& vDevList)$/;"	f	class:RAIDManager	signature:(const string& mddev, vector<string>& vDevList)
ReaddMDDisks	./RAIDManager.h	/^	bool ReaddMDDisks(const string& mddev, vector<string>& vDevList);$/;"	p	class:RAIDManager	access:public	signature:(const string& mddev, vector<string>& vDevList)
RebuildMap	./libmdadm/mdadm.h	/^extern void RebuildMap(void);$/;"	p	signature:(void)
RegisterCB	./RAIDManager.cpp	/^void RAIDManager::RegisterCB(raidmgr_cb cb)$/;"	f	class:RAIDManager	signature:(raidmgr_cb cb)
RegisterCB	./RAIDManager.h	/^	void RegisterCB(raidmgr_cb cb);$/;"	p	class:RAIDManager	access:public	signature:(raidmgr_cb cb)
RemoveDisk	./RAIDManager.cpp	/^bool RAIDManager::RemoveDisk(const string& dev)$/;"	f	class:RAIDManager	signature:(const string& dev)
RemoveDisk	./RAIDManager.h	/^	bool RemoveDisk(const string& dev);$/;"	p	class:RAIDManager	access:public	signature:(const string& dev)
RemoveMDDisks	./RAIDManager.cpp	/^bool RAIDManager::RemoveMDDisks(const string& mddev, vector<string>& vDevList)$/;"	f	class:RAIDManager	signature:(const string& mddev, vector<string>& vDevList)
RemoveMDDisks	./RAIDManager.h	/^	bool RemoveMDDisks(const string& mddev, vector<string>& vDevList);$/;"	p	class:RAIDManager	access:public	signature:(const string& mddev, vector<string>& vDevList)
ReplaceMDDisk	./RAIDManager.cpp	/^bool RAIDManager::ReplaceMDDisk(const string& mddev, const string& replace, const string& with)$/;"	f	class:RAIDManager	signature:(const string& mddev, const string& replace, const string& with)
ReplaceMDDisk	./RAIDManager.h	/^	bool ReplaceMDDisk(const string& mddev, const string& replace, const string& with);$/;"	p	class:RAIDManager	access:public	signature:(const string& mddev, const string& replace, const string& with)
Restore_metadata	./libmdadm/mdadm.h	/^extern int Restore_metadata(char *dev, char *dir, struct context *c,$/;"	p	signature:(char *dev, char *dir, struct context *c, struct supertype *st, int only)
RunSMARTSelfTest	./RAIDManager.h	/^	bool RunSMARTSelfTest(int type)$/;"	f	struct:DiskProfile	access:public	signature:(int type)
SET_ARRAY_INFO	./libmdadm/md_u.h	32;"	d
SET_BITMAP_FILE	./libmdadm/md_u.h	39;"	d
SET_DISK_FAULTY	./libmdadm/md_u.h	38;"	d
SET_DISK_INFO	./libmdadm/md_u.h	33;"	d
SGReadCapacity10	./RAIDManager.h	/^struct SGReadCapacity10 {$/;"	s
SGReadCapacity10::m_BlockLength	./RAIDManager.h	/^	uint8_t m_BlockLength[4];$/;"	m	struct:SGReadCapacity10	access:public
SGReadCapacity10::m_LogicalBlockAddr	./RAIDManager.h	/^	uint8_t m_LogicalBlockAddr[4];$/;"	m	struct:SGReadCapacity10	access:public
SGReadCapacity16	./RAIDManager.h	/^struct SGReadCapacity16 {$/;"	s
SGReadCapacity16::m_BlockLength	./RAIDManager.h	/^	uint8_t m_BlockLength[4];$/;"	m	struct:SGReadCapacity16	access:public
SGReadCapacity16::m_LogicalBlockAddr	./RAIDManager.h	/^	uint8_t m_LogicalBlockAddr[8];$/;"	m	struct:SGReadCapacity16	access:public
SGReadCapacity16::m_ProtectionInfo	./RAIDManager.h	/^	uint8_t m_ProtectionInfo; \/\/ bit 0: PROT_EN, bit 1:3: P_TYPE, bit 4:7: reserved$/;"	m	struct:SGReadCapacity16	access:public
SGReadCapacity16::m_Reserved	./RAIDManager.h	/^	uint8_t m_Reserved[19];$/;"	m	struct:SGReadCapacity16	access:public
SGSerialNoPage	./RAIDManager.h	/^struct SGSerialNoPage {$/;"	s
SGSerialNoPage::m_bytePQPDT	./RAIDManager.h	/^	uint8_t m_bytePQPDT; \/* bit 5-7: Peripheral Qualifier, bit 0-4: Peripheral Device Type *\/$/;"	m	struct:SGSerialNoPage	access:public
SGSerialNoPage::m_bytePageCode	./RAIDManager.h	/^	uint8_t m_bytePageCode;$/;"	m	struct:SGSerialNoPage	access:public
SGSerialNoPage::m_bytePageLength	./RAIDManager.h	/^	uint8_t m_bytePageLength;$/;"	m	struct:SGSerialNoPage	access:public
SGSerialNoPage::m_bytePageSN	./RAIDManager.h	/^	uint8_t m_bytePageSN[32];$/;"	m	struct:SGSerialNoPage	access:public
SGSerialNoPage::m_byteReservied	./RAIDManager.h	/^	uint8_t m_byteReservied;$/;"	m	struct:SGSerialNoPage	access:public
SHA1_H	./libmdadm/sha1.h	21;"	d
SPLICE_LOCK	./libe2fsck/kernel-jbd.h	885;"	d
START_ARRAY	./libmdadm/md_u.h	43;"	d
STOP_ARRAY	./libmdadm/md_u.h	44;"	d
STOP_ARRAY_RO	./libmdadm/md_u.h	45;"	d
SUCCESS	./libmdadm/mdadm_errcode.h	/^	SUCCESS = 0,$/;"	e	enum:__anon9
SUPERBLOCK_OFFSET	./libmke2fs/ext2fs.h	39;"	d
SUPERBLOCK_SIZE	./libmke2fs/ext2fs.h	40;"	d
SYSLOG_FACILITY	./libmdadm/mdadm.h	546;"	d
SYS_DEV_MAX	./libmdadm/platform-intel.h	/^	SYS_DEV_MAX$/;"	e	enum:sys_dev_type
SYS_DEV_SAS	./libmdadm/platform-intel.h	/^	SYS_DEV_SAS,$/;"	e	enum:sys_dev_type
SYS_DEV_SATA	./libmdadm/platform-intel.h	/^	SYS_DEV_SATA,$/;"	e	enum:sys_dev_type
SYS_DEV_UNKNOWN	./libmdadm/platform-intel.h	/^	SYS_DEV_UNKNOWN = 0,$/;"	e	enum:sys_dev_type
SearchDiskBelong2RAID	./RAIDManager.h	/^	vector<RAIDInfo>::iterator SearchDiskBelong2RAID(RAIDDiskInfo& devInfo);$/;"	p	class:RAIDManager	access:private	signature:(RAIDDiskInfo& devInfo)
Sendmail	./libmdadm/mdadm.h	543;"	d
SetAction	./libmdadm/mdadm.h	/^extern int SetAction(char *dev, char *action);$/;"	p	signature:(char *dev, char *action)
SetDeviceNode	./FilesystemManager.cpp	/^bool FilesystemManager::SetDeviceNode(const string &dev)$/;"	f	class:FilesystemManager	signature:(const string &dev)
SetDeviceNode	./FilesystemManager.h	/^	bool SetDeviceNode(const string &dev);$/;"	p	class:FilesystemManager	access:public	signature:(const string &dev)
SetDiskVendorInfomation	./RAIDManager.h	/^	void SetDiskVendorInfomation()$/;"	f	struct:DiskProfile	access:public	signature:()
SetFormatInfo	./FilesystemManager.cpp	/^void FilesystemManager::SetFormatInfo(bool format, int progress, int stat)$/;"	f	class:FilesystemManager	signature:(bool format, int progress, int stat)
SetFormatInfo	./FilesystemManager.h	/^	void SetFormatInfo(bool format, int progress,$/;"	p	class:FilesystemManager	access:public	signature:(bool format, int progress, int stat)
SetLastError	./RAIDManager.cpp	/^void RAIDManager::SetLastError(const string &fmt, ...)$/;"	f	class:RAIDManager	signature:(const string &fmt, ...)
SetLastError	./RAIDManager.h	/^	void SetLastError(const string &fmt, ...);$/;"	p	class:RAIDManager	access:public	signature:(const string &fmt, ...)
SetMDNum	./RAIDManager.cpp	/^void RAIDManager::SetMDNum(int n)$/;"	f	class:RAIDManager	signature:(int n)
SetMDNum	./RAIDManager.h	/^	void SetMDNum(int n);$/;"	p	class:RAIDManager	access:private	signature:(int n)
SetMountPoint	./FilesystemManager.cpp	/^void FilesystemManager::SetMountPoint(const string &mountpoint)$/;"	f	class:FilesystemManager	signature:(const string &mountpoint)
SetMountPoint	./FilesystemManager.h	/^	void SetMountPoint(const string &mountpoint);$/;"	p	class:FilesystemManager	access:public	signature:(const string &mountpoint)
SetSMARTInfo	./RAIDManager.h	/^	void SetSMARTInfo()$/;"	f	struct:DiskProfile	access:public	signature:()
SetUDEVInformation	./RAIDManager.h	/^	void SetUDEVInformation()$/;"	f	struct:DiskProfile	access:public	signature:()
SetUDEVInformation	./RAIDManager.h	/^	void SetUDEVInformation()$/;"	f	struct:MDProfile	access:public	signature:()
SetVolumeNum	./FilesystemManager.cpp	/^void FilesystemManager::SetVolumeNum(const int &num)$/;"	f	class:FilesystemManager	signature:(const int &num)
SetVolumeNum	./FilesystemManager.h	/^	void SetVolumeNum(const int &num);$/;"	p	class:FilesystemManager	access:public	signature:(const int &num)
SetVolumeNum	./RAIDManager.cpp	/^void RAIDManager::SetVolumeNum(int n)$/;"	f	class:RAIDManager	signature:(int n)
SetVolumeNum	./RAIDManager.h	/^	void SetVolumeNum(int n);$/;"	p	class:RAIDManager	access:private	signature:(int n)
SparcAdjust	./libmdadm/mdadm.h	/^	int	SparcAdjust;$/;"	m	struct:context	access:public
StopRAID	./RAIDManager.cpp	/^bool RAIDManager::StopRAID(const string& mddev)$/;"	f	class:RAIDManager	signature:(const string& mddev)
StopRAID	./RAIDManager.h	/^	bool StopRAID(const string& mddev);$/;"	p	class:RAIDManager	access:private	signature:(const string& mddev)
T_COMMIT	./libe2fsck/kernel-jbd.h	/^		T_COMMIT,$/;"	e	enum:transaction_s::__anon2
T_FINISHED	./libe2fsck/kernel-jbd.h	/^		T_FINISHED$/;"	e	enum:transaction_s::__anon2
T_FLUSH	./libe2fsck/kernel-jbd.h	/^		T_FLUSH,$/;"	e	enum:transaction_s::__anon2
T_LOCKED	./libe2fsck/kernel-jbd.h	/^		T_LOCKED,$/;"	e	enum:transaction_s::__anon2
T_RUNDOWN	./libe2fsck/kernel-jbd.h	/^		T_RUNDOWN,$/;"	e	enum:transaction_s::__anon2
T_RUNNING	./libe2fsck/kernel-jbd.h	/^		T_RUNNING,$/;"	e	enum:transaction_s::__anon2
TestingLoop	./unitest/RAIDManager_test.cpp	/^extern void TestingLoop(const char* cfg, RAIDManager& raid_mgr);$/;"	p	file:	signature:(const char* cfg, RAIDManager& raid_mgr)
TestingLoop	./unitest/TestingLoop.cpp	/^void TestingLoop(const char* cfg, RAIDManager& raid_mgr)$/;"	f	signature:(const char* cfg, RAIDManager& raid_mgr)
ThreadProc	./FilesystemManager.cpp	/^void FilesystemManager::ThreadProc()$/;"	f	class:FilesystemManager	signature:()
ThreadProc	./FilesystemManager.h	/^	void ThreadProc();$/;"	p	class:FilesystemManager	access:protected	signature:()
ThreadProc	./RAIDManager.cpp	/^void RAIDManager::ThreadProc()$/;"	f	class:RAIDManager	signature:()
ThreadProc	./RAIDManager.h	/^	void ThreadProc();$/;"	p	class:RAIDManager	access:protected	signature:()
UNPROTECT_ARRAY	./libmdadm/md_u.h	35;"	d
UUID_SIZE	./libe2fsck/kernel-jbd.h	167;"	d
UnSet	./libmdadm/mdadm.h	297;"	d
Unlock	./test_utils.h	/^	void Unlock() {$/;"	f	class:CriticalSection	access:public	signature:()
Unmount	./FilesystemManager.cpp	/^bool FilesystemManager::Unmount()$/;"	f	class:FilesystemManager	signature:()
Unmount	./FilesystemManager.h	/^	bool Unmount();$/;"	p	class:FilesystemManager	access:public	signature:()
Unmount	./RAIDManager.cpp	/^bool RAIDManager::Unmount(const string& mddev)$/;"	f	class:RAIDManager	signature:(const string& mddev)
Unmount	./RAIDManager.h	/^	bool Unmount(const string& mddev);$/;"	p	class:RAIDManager	access:public	signature:(const string& mddev)
UpdateRAIDDiskList	./RAIDManager.h	/^	void UpdateRAIDDiskList(vector<RAIDDiskInfo>& vRAIDDiskInfoList, const string& mddev);$/;"	p	class:RAIDManager	access:private	signature:(vector<RAIDDiskInfo>& vRAIDDiskInfoList, const string& mddev)
Update_subarray	./libmdadm/mdadm.h	/^extern int Update_subarray(char *dev, char *subarray, char *update, struct mddev_ident *ident, int quiet);$/;"	p	signature:(char *dev, char *subarray, char *update, struct mddev_ident *ident, int quiet)
VARIABLE_OFFSET	./libmdadm/mdadm.h	1521;"	d
VOLUME_RESHAPE	./libmdadm/mdadm.h	201;"	d
Version	./libmdadm/mdadm.h	1523;"	d
WRITE	./libe2fsck/jfs_compat.h	16;"	d
WRITE_INODE_TABLES_DONE	./libmke2fs/mke2fs.h	/^	WRITE_INODE_TABLES_DONE,$/;"	e	enum:__anon5
WRITE_INODE_TABLES_ERROR	./libmke2fs/mke2fs.h	/^	WRITE_INODE_TABLES_ERROR,$/;"	e	enum:__anon5
WRITE_INODE_TABLES_INIT	./libmke2fs/mke2fs.h	/^	WRITE_INODE_TABLES_INIT,$/;"	e	enum:__anon5
WRITE_INODE_TABLES_UNKNOWN	./libmke2fs/mke2fs.h	/^	WRITE_INODE_TABLES_UNKNOWN = 0,$/;"	e	enum:__anon5
WRITE_INODE_TABLES_WRITING	./libmke2fs/mke2fs.h	/^	WRITE_INODE_TABLES_WRITING,$/;"	e	enum:__anon5
WRITE_INODE_TABLES_WRITING_DONE	./libmke2fs/mke2fs.h	/^	WRITE_INODE_TABLES_WRITING_DONE,$/;"	e	enum:__anon5
WRITE_RAID_INFO	./libmdadm/md_u.h	34;"	d
Wait	./libmdadm/mdadm.h	/^extern int Wait(char *dev);$/;"	p	signature:(char *dev)
WaitClean	./libmdadm/mdadm.h	/^extern int WaitClean(char *dev, int sock, int verbose);$/;"	p	signature:(char *dev, int sock, int verbose)
WriteAll	./libmdadm/mdadm.h	1429;"	d
WriteHWLog	./test_utils.h	13;"	d
WritePersistent	./libmdadm/mdadm.h	1427;"	d
WriteTransient	./libmdadm/mdadm.h	1425;"	d
Write_rules	./libmdadm/mdadm.h	/^extern int Write_rules(char *rule_name);$/;"	p	signature:(char *rule_name)
_	./libe2fsck/e2fsck.h	32;"	d
_	./libe2fsck/e2fsck.h	46;"	d
_E2FSCK_H	./libe2fsck/e2fsck.h	10;"	d
_EXT2FS_EXT2FS_H	./libmke2fs/ext2fs.h	13;"	d
_FILE_OFFSET_BITS	./libmdadm/mdadm.h	26;"	d
_GNU_SOURCE	./libmdadm/mdadm.h	25;"	d
_INLINE_	./libe2fsck/jfs_user.h	129;"	d
_INLINE_	./libe2fsck/jfs_user.h	87;"	d
_INLINE_	./libe2fsck/jfs_user.h	89;"	d
_INLINE_	./libe2fsck/jfs_user.h	93;"	d
_INLINE_	./libe2fsck/jfs_user.h	96;"	d
_INLINE_	./libe2fsck/jfs_user.h	98;"	d
_INLINE_	./libmke2fs/ext2fs.h	1507;"	d
_INLINE_	./libmke2fs/ext2fs.h	1510;"	d
_INLINE_	./libmke2fs/ext2fs.h	1513;"	d
_INLINE_	./libmke2fs/ext2fs.h	1515;"	d
_INLINE_	./libmke2fs/ext2fs.h	1736;"	d
_JFS_COMPAT_H	./libe2fsck/jfs_compat.h	3;"	d
_LINUX_JBD_H	./libe2fsck/kernel-jbd.h	17;"	d
_LINUX_LIST_H	./libe2fsck/kernel-list.h	2;"	d
_MD_P_H	./libmdadm/md_p.h	16;"	d
_MD_U_H	./libmdadm/md_u.h	16;"	d
_PROFILE_H	./libe2fsck/profile.h	40;"	d
_PROFILE_H	./libmke2fs/profile.h	40;"	d
_ROUND_UP	./libmdadm/mdadm.h	1356;"	d
__E2FSCK_ERR_H__	./libe2fsck/e2fsck_err.h	2;"	d
__E2FSCK_LIB_H__	./libe2fsck/e2fsck_lib.h	2;"	d
__FILESYSTEM_MANAGER_H__	./FilesystemManager.h	2;"	d
__FUNCTION__	./libe2fsck/kernel-jbd.h	34;"	d
__MDADM_ERRORCODE__	./libmdadm/mdadm_errcode.h	2;"	d
__MDAMM_OTHER_H__	./libmdadm/mdadm_other.h	2;"	d
__MKE2FS_ERR_H__	./libmke2fs/mke2fs_err.h	2;"	d
__MKE2FS_H__	./libmke2fs/mke2fs.h	2;"	d
__RAIDMANAGER_H__	./RAIDManager.h	2;"	d
__TEST_UTILS_H__	./test_utils.h	2;"	d
___constant_swab32	./libe2fsck/crc32defs.h	34;"	d
__anon3::object_length	./libe2fsck/jfs_user.h	/^	int	object_length;$/;"	m	struct:__anon3	access:public
__be16_to_cpu	./libmdadm/mdadm.h	144;"	d
__be16_to_cpu	./libmdadm/mdadm.h	158;"	d
__be32	./libe2fsck/jfs_user.h	/^typedef unsigned int __be32;$/;"	t
__be32_to_cpu	./libe2fsck/crc32defs.h	45;"	d
__be32_to_cpu	./libe2fsck/crc32defs.h	52;"	d
__be32_to_cpu	./libmdadm/mdadm.h	145;"	d
__be32_to_cpu	./libmdadm/mdadm.h	159;"	d
__be64	./libe2fsck/jfs_user.h	/^typedef __u64 __be64;$/;"	t
__be64_to_cpu	./libmdadm/mdadm.h	146;"	d
__be64_to_cpu	./libmdadm/mdadm.h	160;"	d
__bitwise	./libmke2fs/ext2fs.h	68;"	d
__bitwise	./libmke2fs/ext2fs.h	70;"	d
__constant_cpu_to_be32	./libe2fsck/crc32defs.h	44;"	d
__constant_cpu_to_be32	./libe2fsck/crc32defs.h	51;"	d
__constant_cpu_to_le32	./libe2fsck/crc32defs.h	43;"	d
__constant_cpu_to_le32	./libe2fsck/crc32defs.h	50;"	d
__cpu_to_be16	./libmdadm/mdadm.h	141;"	d
__cpu_to_be16	./libmdadm/mdadm.h	155;"	d
__cpu_to_be32	./libe2fsck/crc32defs.h	46;"	d
__cpu_to_be32	./libe2fsck/crc32defs.h	53;"	d
__cpu_to_be32	./libmdadm/mdadm.h	142;"	d
__cpu_to_be32	./libmdadm/mdadm.h	156;"	d
__cpu_to_be64	./libmdadm/mdadm.h	143;"	d
__cpu_to_be64	./libmdadm/mdadm.h	157;"	d
__cpu_to_le16	./libmdadm/mdadm.h	134;"	d
__cpu_to_le16	./libmdadm/mdadm.h	148;"	d
__cpu_to_le32	./libe2fsck/crc32defs.h	47;"	d
__cpu_to_le32	./libe2fsck/crc32defs.h	54;"	d
__cpu_to_le32	./libmdadm/mdadm.h	135;"	d
__cpu_to_le32	./libmdadm/mdadm.h	149;"	d
__cpu_to_le64	./libmdadm/mdadm.h	136;"	d
__cpu_to_le64	./libmdadm/mdadm.h	150;"	d
__dl_head	./libmdadm/dlink.h	/^struct __dl_head$/;"	s
__dl_head::dh_next	./libmdadm/dlink.h	/^    void * dh_next;$/;"	m	struct:__dl_head	access:public
__dl_head::dh_prev	./libmdadm/dlink.h	/^    void * dh_prev;$/;"	m	struct:__dl_head	access:public
__fname_from_uuid	./libmdadm/mdadm.h	/^extern char *__fname_from_uuid(int id[4], int swap, char *buf, char sep);$/;"	p	signature:(int id[4], int swap, char *buf, char sep)
__getblk	./libe2fsck/jfs_user.h	148;"	d
__init	./libe2fsck/jfs_user.h	67;"	d
__inline__	./libe2fsck/kernel-list.h	25;"	d
__jbd_kmalloc	./libe2fsck/kernel-jbd.h	/^extern void * __jbd_kmalloc (char *where, size_t size, int flags, int retry);$/;"	p	signature:(char *where, size_t size, int flags, int retry)
__journal_abort	./libe2fsck/kernel-jbd.h	/^extern void	   __journal_abort      (journal_t *);$/;"	p	signature:(journal_t *)
__journal_clean_checkpoint_list	./libe2fsck/kernel-jbd.h	/^int __journal_clean_checkpoint_list(journal_t *journal);$/;"	p	signature:(journal_t *journal)
__journal_clean_data_list	./libe2fsck/kernel-jbd.h	/^extern void __journal_clean_data_list(transaction_t *transaction);$/;"	p	signature:(transaction_t *transaction)
__journal_drop_transaction	./libe2fsck/kernel-jbd.h	/^extern void	__journal_drop_transaction(journal_t *, transaction_t *);$/;"	p	signature:(journal_t *, transaction_t *)
__journal_file_buffer	./libe2fsck/kernel-jbd.h	/^extern void __journal_file_buffer(struct journal_head *, transaction_t *, int);$/;"	p	signature:(struct journal_head *, transaction_t *, int)
__journal_free_buffer	./libe2fsck/kernel-jbd.h	/^extern void __journal_free_buffer(struct journal_head *bh);$/;"	p	signature:(struct journal_head *bh)
__journal_insert_checkpoint	./libe2fsck/kernel-jbd.h	/^extern void __journal_insert_checkpoint(struct journal_head *,transaction_t *);$/;"	p	signature:(struct journal_head *,transaction_t *)
__journal_refile_buffer	./libe2fsck/kernel-jbd.h	/^extern void __journal_refile_buffer(struct journal_head *);$/;"	p	signature:(struct journal_head *)
__journal_remove_checkpoint	./libe2fsck/kernel-jbd.h	/^extern void __journal_remove_checkpoint(struct journal_head *);$/;"	p	signature:(struct journal_head *)
__journal_remove_journal_head	./libe2fsck/kernel-jbd.h	/^extern void	__journal_remove_journal_head(struct buffer_head *bh);$/;"	p	signature:(struct buffer_head *bh)
__journal_unfile_buffer	./libe2fsck/kernel-jbd.h	/^extern void __journal_unfile_buffer(struct journal_head *);$/;"	p	signature:(struct journal_head *)
__le16_to_cpu	./libmdadm/mdadm.h	137;"	d
__le16_to_cpu	./libmdadm/mdadm.h	151;"	d
__le32_to_cpu	./libe2fsck/crc32defs.h	48;"	d
__le32_to_cpu	./libe2fsck/crc32defs.h	55;"	d
__le32_to_cpu	./libmdadm/mdadm.h	138;"	d
__le32_to_cpu	./libmdadm/mdadm.h	152;"	d
__le64_to_cpu	./libmdadm/mdadm.h	139;"	d
__le64_to_cpu	./libmdadm/mdadm.h	153;"	d
__list_add	./libe2fsck/kernel-list.h	/^static __inline__ void __list_add(struct list_head * new,$/;"	f	signature:(struct list_head * new, struct list_head * prev, struct list_head * next)
__list_del	./libe2fsck/kernel-list.h	/^static __inline__ void __list_del(struct list_head * prev,$/;"	f	signature:(struct list_head * prev, struct list_head * next)
__u64	./libmdadm/md_p.h	/^typedef unsigned long long __u64;$/;"	t
__wait_on_journal	./libe2fsck/kernel-jbd.h	/^extern void		__wait_on_journal (journal_t *);$/;"	p	signature:(journal_t *)
_export	./libmdadm/mdadm.h	/^	int	_export;$/;"	m	struct:context	access:public
abort_code	./libe2fsck/e2fsck.h	/^	unsigned long abort_code;$/;"	m	struct:e2fsck_struct	access:public
abort_loc	./libe2fsck/e2fsck.h	/^	jmp_buf	abort_loc;$/;"	m	struct:e2fsck_struct	access:public
abort_reshape	./libmdadm/mdadm.h	/^void abort_reshape(struct mdinfo *sra);$/;"	p	signature:(struct mdinfo *sra)
ack	./libmdadm/msg.h	/^extern int ack(int fd, int tmo);$/;"	p	signature:(int fd, int tmo)
act_default	./libmdadm/mdadm.h	/^	act_default,$/;"	e	enum:policy_action
act_err	./libmdadm/mdadm.h	/^	act_err$/;"	e	enum:policy_action
act_force_spare	./libmdadm/mdadm.h	/^	act_force_spare, \/* this allow non-bare devices in any case *\/$/;"	e	enum:policy_action
act_include	./libmdadm/mdadm.h	/^	act_include,$/;"	e	enum:policy_action
act_re_add	./libmdadm/mdadm.h	/^	act_re_add,$/;"	e	enum:policy_action
act_spare	./libmdadm/mdadm.h	/^	act_spare,	\/* This only applies to bare devices *\/$/;"	e	enum:policy_action
act_spare_same_slot	./libmdadm/mdadm.h	/^	act_spare_same_slot, \/* this allows non-bare devices,$/;"	e	enum:policy_action
action	./libmdadm/mdadm.h	/^	char	*action;$/;"	m	struct:context	access:public
action_fd	./libmdadm/mdmon.h	/^	int action_fd;$/;"	m	struct:active_array	access:public
activate_spare	./libmdadm/mdadm.h	/^	struct mdinfo *(*activate_spare)(struct active_array *a,$/;"	m	struct:superswitch	typeref:struct:superswitch::activate_spare	access:public
active	./libmdadm/mdadm.h	/^	int		active;$/;"	m	struct:mdstat_ent	access:public
active	./libmdadm/mdmon.h	/^		   clean, active, write_pending, active_idle, bad_word};$/;"	e	enum:array_state
active_array	./libmdadm/mdmon.h	/^struct active_array {$/;"	s
active_array::action_fd	./libmdadm/mdmon.h	/^	int action_fd;$/;"	m	struct:active_array	access:public
active_array::check_degraded	./libmdadm/mdmon.h	/^	int check_degraded; \/* flag set by mon, read by manage *\/$/;"	m	struct:active_array	access:public
active_array::check_reshape	./libmdadm/mdmon.h	/^	int check_reshape; \/* flag set by mon, read by manage *\/$/;"	m	struct:active_array	access:public
active_array::container	./libmdadm/mdmon.h	/^	struct supertype *container;$/;"	m	struct:active_array	typeref:struct:active_array::supertype	access:public
active_array::curr_action	./libmdadm/mdmon.h	/^	enum sync_action prev_action, curr_action, next_action;$/;"	m	struct:active_array	typeref:enum:active_array::	access:public
active_array::curr_state	./libmdadm/mdmon.h	/^	enum array_state prev_state, curr_state, next_state;$/;"	m	struct:active_array	typeref:enum:active_array::	access:public
active_array::info	./libmdadm/mdmon.h	/^	struct mdinfo info;$/;"	m	struct:active_array	typeref:struct:active_array::mdinfo	access:public
active_array::last_checkpoint	./libmdadm/mdmon.h	/^	unsigned long long last_checkpoint; \/* sync_completed fires for many$/;"	m	struct:active_array	access:public
active_array::metadata_fd	./libmdadm/mdmon.h	/^	int metadata_fd; \/* for monitoring rw\/ro status *\/$/;"	m	struct:active_array	access:public
active_array::next	./libmdadm/mdmon.h	/^	struct active_array *next, *replaces;$/;"	m	struct:active_array	typeref:struct:active_array::active_array	access:public
active_array::next_action	./libmdadm/mdmon.h	/^	enum sync_action prev_action, curr_action, next_action;$/;"	m	struct:active_array	typeref:enum:active_array::	access:public
active_array::next_state	./libmdadm/mdmon.h	/^	enum array_state prev_state, curr_state, next_state;$/;"	m	struct:active_array	typeref:enum:active_array::	access:public
active_array::prev_action	./libmdadm/mdmon.h	/^	enum sync_action prev_action, curr_action, next_action;$/;"	m	struct:active_array	typeref:enum:active_array::sync_action	access:public
active_array::prev_state	./libmdadm/mdmon.h	/^	enum array_state prev_state, curr_state, next_state;$/;"	m	struct:active_array	typeref:enum:active_array::array_state	access:public
active_array::replaces	./libmdadm/mdmon.h	/^	struct active_array *next, *replaces;$/;"	m	struct:active_array	typeref:struct:active_array::	access:public
active_array::resync_start_fd	./libmdadm/mdmon.h	/^	int resync_start_fd;$/;"	m	struct:active_array	access:public
active_array::sync_completed_fd	./libmdadm/mdmon.h	/^	int sync_completed_fd; \/* for checkpoint notification events *\/$/;"	m	struct:active_array	access:public
active_array::to_remove	./libmdadm/mdmon.h	/^	int to_remove;$/;"	m	struct:active_array	access:public
active_disks	./libmdadm/md_p.h	/^	__u32 active_disks;	\/*  2 Number of currently active disks	      *\/$/;"	m	struct:mdp_superblock_s	access:public
active_disks	./libmdadm/md_u.h	/^	int active_disks;	\/*  2 Number of currently active disks	      *\/$/;"	m	struct:mdu_array_info_s	access:public
active_idle	./libmdadm/mdmon.h	/^		   clean, active, write_pending, active_idle, bad_word};$/;"	e	enum:array_state
add_dev	./libmdadm/mdadm.h	/^extern int add_dev(const char *name, const struct stat *stb, int flag, struct FTW *s);$/;"	p	signature:(const char *name, const struct stat *stb, int flag, struct FTW *s)
add_disk	./libmdadm/mdadm.h	/^extern int add_disk(int mdfd, struct supertype *st,$/;"	p	signature:(int mdfd, struct supertype *st, struct mdinfo *sra, struct mdinfo *info)
add_internal_bitmap	./libmdadm/mdadm.h	/^	int (*add_internal_bitmap)(struct supertype *st, int *chunkp,$/;"	m	struct:superswitch	access:public
add_to_super	./libmdadm/mdadm.h	/^	int (*add_to_super)(struct supertype *st, mdu_disk_info_t *dinfo,$/;"	m	struct:superswitch	access:public
after	./libmdadm/mdadm.h	/^	} before, after;$/;"	m	struct:reshape	typeref:struct:reshape::__anon8	access:public
append_metadata_update	./libmdadm/mdadm.h	/^extern void append_metadata_update(struct supertype *st, void *buf, int len);$/;"	p	signature:(struct supertype *st, void *buf, int len)
array	./libmdadm/mdadm.h	/^	mdu_array_info_t	array;$/;"	m	struct:mdinfo	access:public
arrayDisks	./libmdadm/mdadm_other.h	/^	struct array_disk_info arrayDisks[MAX_DISK_NUM];$/;"	m	struct:array_detail	typeref:struct:array_detail::array_disk_info	access:public
arrayInfo	./libmdadm/mdadm_other.h	/^	mdu_array_info_t arrayInfo;$/;"	m	struct:array_detail	access:public
arrayUUID	./libmdadm/mdadm_other.h	/^	int arrayUUID[4];$/;"	m	struct:examine_result	access:public
array_detail	./libmdadm/mdadm_other.h	/^struct array_detail {$/;"	s
array_detail::arrayDisks	./libmdadm/mdadm_other.h	/^	struct array_disk_info arrayDisks[MAX_DISK_NUM];$/;"	m	struct:array_detail	typeref:struct:array_detail::array_disk_info	access:public
array_detail::arrayInfo	./libmdadm/mdadm_other.h	/^	mdu_array_info_t arrayInfo;$/;"	m	struct:array_detail	access:public
array_detail::bInactive	./libmdadm/mdadm_other.h	/^	int bInactive;$/;"	m	struct:array_detail	access:public
array_detail::bIsRebuilding	./libmdadm/mdadm_other.h	/^	int bIsRebuilding;$/;"	m	struct:array_detail	access:public
array_detail::bIsSuperBlockPersistent	./libmdadm/mdadm_other.h	/^	int bIsSuperBlockPersistent;$/;"	m	struct:array_detail	access:public
array_detail::bReshapeActive	./libmdadm/mdadm_other.h	/^	int bReshapeActive;$/;"	m	struct:array_detail	access:public
array_detail::iDeltaDisks	./libmdadm/mdadm_other.h	/^	int iDeltaDisks;$/;"	m	struct:array_detail	access:public
array_detail::iEnough	./libmdadm/mdadm_other.h	/^	int iEnough; \/* 0: Raid disk is not enough. *\/$/;"	m	struct:array_detail	access:public
array_detail::iLayout	./libmdadm/mdadm_other.h	/^	int iLayout;$/;"	m	struct:array_detail	access:public
array_detail::iNewChunkSize	./libmdadm/mdadm_other.h	/^	int iNewChunkSize; \/* Byte *\/$/;"	m	struct:array_detail	access:public
array_detail::iRaidNewLevel	./libmdadm/mdadm_other.h	/^	int iRaidNewLevel;$/;"	m	struct:array_detail	access:public
array_detail::iRebuildProgress	./libmdadm/mdadm_other.h	/^	int iRebuildProgress; \/* -1 if no resync *\/$/;"	m	struct:array_detail	access:public
array_detail::strArrayDevName	./libmdadm/mdadm_other.h	/^	char strArrayDevName[32];$/;"	m	struct:array_detail	access:public
array_detail::strArraySize	./libmdadm/mdadm_other.h	/^	char strArraySize[32];$/;"	m	struct:array_detail	access:public
array_detail::strArrayState	./libmdadm/mdadm_other.h	/^	char strArrayState[128];$/;"	m	struct:array_detail	access:public
array_detail::strContainer	./libmdadm/mdadm_other.h	/^	char strContainer[32];$/;"	m	struct:array_detail	access:public
array_detail::strMember	./libmdadm/mdadm_other.h	/^	char strMember[32];$/;"	m	struct:array_detail	access:public
array_detail::strRaidLayout	./libmdadm/mdadm_other.h	/^	char strRaidLayout[32];$/;"	m	struct:array_detail	access:public
array_detail::strRaidLevel	./libmdadm/mdadm_other.h	/^	char strRaidLevel[16];$/;"	m	struct:array_detail	access:public
array_detail::strRaidNewLayout	./libmdadm/mdadm_other.h	/^	char strRaidNewLayout[32];$/;"	m	struct:array_detail	access:public
array_detail::strRebuildOperation	./libmdadm/mdadm_other.h	/^	char strRebuildOperation[16];$/;"	m	struct:array_detail	access:public
array_detail::strUsedSize	./libmdadm/mdadm_other.h	/^	char strUsedSize[32];$/;"	m	struct:array_detail	access:public
array_detail::uDiskCounter	./libmdadm/mdadm_other.h	/^	unsigned uDiskCounter;$/;"	m	struct:array_detail	access:public
array_detail::ullArraySize	./libmdadm/mdadm_other.h	/^	unsigned long long ullArraySize;$/;"	m	struct:array_detail	access:public
array_detail::ullReshapeProgress	./libmdadm/mdadm_other.h	/^	unsigned long long ullReshapeProgress;$/;"	m	struct:array_detail	access:public
array_detail::ullUsedSize	./libmdadm/mdadm_other.h	/^	unsigned long long ullUsedSize;$/;"	m	struct:array_detail	access:public
array_detail::uuid	./libmdadm/mdadm_other.h	/^	int uuid[4];$/;"	m	struct:array_detail	access:public
array_disk_info	./libmdadm/mdadm_other.h	/^struct array_disk_info {$/;"	s
array_disk_info::diskInfo	./libmdadm/mdadm_other.h	/^	mdu_disk_info_t diskInfo;$/;"	m	struct:array_disk_info	access:public
array_disk_info::strDevName	./libmdadm/mdadm_other.h	/^	char strDevName[64];$/;"	m	struct:array_disk_info	access:public
array_disk_info::strState	./libmdadm/mdadm_other.h	/^	char strState[256];$/;"	m	struct:array_disk_info	access:public
array_state	./libmdadm/mdmon.h	/^enum array_state { clear, inactive, suspended, readonly, read_auto,$/;"	g
arrays	./libmdadm/mdadm.h	/^	struct active_array *arrays;$/;"	m	struct:supertype	typeref:struct:supertype::active_array	access:public
ask	./libe2fsck/e2fsck.h	/^extern int ask(e2fsck_t ctx, const char * string, int def);$/;"	p	signature:(e2fsck_t ctx, const char * string, int def)
ask	./libmdadm/mdadm.h	/^extern int ask(char *mesg);$/;"	p	signature:(char *mesg)
ask_yn	./libe2fsck/e2fsck.h	/^extern int ask_yn(e2fsck_t ctx, const char * string, int def);$/;"	p	signature:(e2fsck_t ctx, const char * string, int def)
assemble_container_content	./libmdadm/mdadm.h	/^extern int assemble_container_content(struct supertype *st, int mdfd,$/;"	p	signature:(struct supertype *st, int mdfd, struct mdinfo *content, struct context *c, char *chosen_name, int *result)
assembled	./libmdadm/mdadm.h	/^		int assembled;	\/* set when assembly succeeds *\/$/;"	m	union:mddev_ident::__anon7	access:public
assert_spin_locked	./libe2fsck/kernel-jbd.h	926;"	d
assert_spin_locked	./libe2fsck/kernel-jbd.h	928;"	d
assume_clean	./libmdadm/mdadm.h	/^	int	assume_clean;$/;"	m	struct:shape	access:public
attr	./libmdadm/platform-intel.h	/^	__u32 attr;$/;"	m	struct:imsm_orom	access:public
attr_bits	./libmdadm/part.h	/^	unsigned char attr_bits[8];$/;"	m	struct:GPT_part_entry	access:public
autodetect	./libmdadm/mdadm.h	/^extern int autodetect(void);$/;"	p	signature:(void)
autof	./libmdadm/mdadm.h	/^	int	autof;		\/* 1 for normal, 2 for partitioned *\/$/;"	m	struct:mddev_ident	access:public
autof	./libmdadm/mdadm.h	/^	int	autof;$/;"	m	struct:context	access:public
autof	./libmdadm/mdadm.h	/^	int	autof;$/;"	m	struct:createinfo	access:public
avail_size	./libmdadm/mdadm.h	/^	__u64 (*avail_size)(struct supertype *st, __u64 size,$/;"	m	struct:superswitch	access:public
b	./libmdadm/platform-intel.h	/^	__u8 b[16];$/;"	m	struct:efi_guid	access:public
bHasBadblock	./libmdadm/mdadm_other.h	/^	unsigned bHasBadblock;$/;"	m	struct:examine_result	access:public
bHasMDDetail	./libmdadm/mdadm_other.h	/^	int bHasMDDetail;$/;"	m	struct:query_result	access:public
bHasMDError	./libmdadm/mdadm_other.h	/^	int bHasMDError;$/;"	m	struct:query_result	access:public
bInactive	./libmdadm/mdadm_other.h	/^	int bInactive;$/;"	m	struct:array_detail	access:public
bIsMD	./libmdadm/mdadm_other.h	/^	int bIsMD;$/;"	m	struct:query_result	access:public
bIsMDActive	./libmdadm/mdadm_other.h	/^	int bIsMDActive;$/;"	m	struct:query_result	access:public
bIsRebuilding	./libmdadm/mdadm_other.h	/^	int bIsRebuilding;$/;"	m	struct:array_detail	access:public
bIsSuperBlockPersistent	./libmdadm/mdadm_other.h	/^	int bIsSuperBlockPersistent;$/;"	m	struct:array_detail	access:public
bIsValid	./libmdadm/mdadm_other.h	/^	unsigned bIsValid;$/;"	m	struct:examine_result	access:public
bReshapeActive	./libmdadm/mdadm_other.h	/^	int bReshapeActive;$/;"	m	struct:array_detail	access:public
bSBChkSumError	./libmdadm/mdadm_other.h	/^	unsigned bSBChkSumError;$/;"	m	struct:examine_result	access:public
b_blocknr	./libe2fsck/jfs_user.h	/^	unsigned long long b_blocknr;$/;"	m	struct:buffer_head	access:public
b_ctx	./libe2fsck/jfs_user.h	/^	e2fsck_t	b_ctx;$/;"	m	struct:buffer_head	access:public
b_data	./libe2fsck/jfs_user.h	/^	char		b_data[1024];$/;"	m	struct:buffer_head	access:public
b_dirty	./libe2fsck/jfs_user.h	/^	int	 	b_dirty;$/;"	m	struct:buffer_head	access:public
b_err	./libe2fsck/jfs_user.h	/^	int	 	b_err;$/;"	m	struct:buffer_head	access:public
b_io	./libe2fsck/jfs_user.h	/^	io_channel 	b_io;$/;"	m	struct:buffer_head	access:public
b_size	./libe2fsck/jfs_user.h	/^	int	 	b_size;$/;"	m	struct:buffer_head	access:public
b_uptodate	./libe2fsck/jfs_user.h	/^	int	 	b_uptodate;$/;"	m	struct:buffer_head	access:public
backup_blocks	./libmdadm/mdadm.h	/^	unsigned long long backup_blocks;$/;"	m	struct:reshape	access:public
backup_file	./libmdadm/mdadm.h	/^	char	*backup_file;$/;"	m	struct:context	access:public
backup_lba	./libmdadm/part.h	/^	__u64 backup_lba;$/;"	m	struct:GPT	access:public
bad	./libmdadm/mdadm.h	/^	int	bad;$/;"	m	struct:map_ent	access:public
bad_action	./libmdadm/mdmon.h	/^enum sync_action { idle, reshape, resync, recover, check, repair, bad_action };$/;"	e	enum:sync_action
bad_blocks_filename	./libmke2fs/mke2fs.h	/^	char bad_blocks_filename[512];$/;"	m	struct:e2fs_cfg	access:public
bad_lost_and_found	./libe2fsck/e2fsck.h	/^	int bad_lost_and_found;$/;"	m	struct:e2fsck_struct	access:public
bad_word	./libmdadm/mdmon.h	/^		   clean, active, write_pending, active_idle, bad_word};$/;"	e	enum:array_state
badblock_check	./libe2fsck/e2fsck_lib.h	/^	int badblock_check; \/* 1: OPT_CHECKBLOCKS 2: OPT_CHECKBLOCKS + OPT_WRITECHECK*\/$/;"	m	struct:e2fsck_cfg	access:public
badblocks	./libmke2fs/ext2fs.h	/^	ext2_badblocks_list		badblocks;$/;"	m	struct:struct_ext2_filsys	access:public
badblocks_flags	./libmke2fs/ext2fsP.h	/^	int	badblocks_flags;$/;"	m	struct:ext2_struct_u32_list	access:public
badblocks_iterate	./libmke2fs/ext2fs.h	/^typedef struct ext2_struct_u32_iterate *badblocks_iterate;$/;"	t	typeref:struct:ext2_struct_u32_iterate
badblocks_list	./libmke2fs/ext2fs.h	/^typedef struct ext2_struct_u32_list *badblocks_list;$/;"	t	typeref:struct:ext2_struct_u32_list
badblocks_list_add	./libmke2fs/ext2fs.h	/^extern errcode_t badblocks_list_add(badblocks_list bb, blk_t blk);$/;"	p	signature:(badblocks_list bb, blk_t blk)
badblocks_list_create	./libmke2fs/ext2fs.h	/^extern errcode_t badblocks_list_create(badblocks_list *ret, int size);$/;"	p	signature:(badblocks_list *ret, int size)
badblocks_list_free	./libmke2fs/ext2fs.h	/^extern void badblocks_list_free(badblocks_list bb);$/;"	p	signature:(badblocks_list bb)
badblocks_list_iterate	./libmke2fs/ext2fs.h	/^extern int badblocks_list_iterate(badblocks_iterate iter, blk_t *blk);$/;"	p	signature:(badblocks_iterate iter, blk_t *blk)
badblocks_list_iterate_begin	./libmke2fs/ext2fs.h	/^extern errcode_t badblocks_list_iterate_begin(badblocks_list bb,$/;"	p	signature:(badblocks_list bb, badblocks_iterate *ret)
badblocks_list_iterate_end	./libmke2fs/ext2fs.h	/^extern void badblocks_list_iterate_end(badblocks_iterate iter);$/;"	p	signature:(badblocks_iterate iter)
badblocks_list_test	./libmke2fs/ext2fs.h	/^extern int badblocks_list_test(badblocks_list bb, blk_t blk);$/;"	p	signature:(badblocks_list bb, blk_t blk)
bb	./libmke2fs/ext2fsP.h	/^	ext2_u32_list		bb;$/;"	m	struct:ext2_struct_u32_iterate	access:public
bblist	./libmdadm/mdadm.h	/^	int	bblist;$/;"	m	struct:createinfo	access:public
be32_to_cpu	./libe2fsck/jfs_compat.h	19;"	d
before	./libmdadm/mdadm.h	/^	} before, after;$/;"	m	struct:reshape	typeref:struct:reshape::__anon8	access:public
bh2jh	./libe2fsck/kernel-jbd.h	/^static inline struct journal_head *bh2jh(struct buffer_head *bh)$/;"	f	signature:(struct buffer_head *bh)
bitmap	./libmdadm/bitmap.h	/^struct bitmap {$/;"	s
bitmap::bp	./libmdadm/bitmap.h	/^	struct bitmap_page *bp;$/;"	m	struct:bitmap	typeref:struct:bitmap::bitmap_page	access:public
bitmap::chunks	./libmdadm/bitmap.h	/^	unsigned long chunks; \/* total number of data chunks for the array *\/$/;"	m	struct:bitmap	access:public
bitmap::chunkshift	./libmdadm/bitmap.h	/^	unsigned long chunkshift; \/* chunksize = 2^chunkshift (for bitops) *\/$/;"	m	struct:bitmap	access:public
bitmap::chunksize	./libmdadm/bitmap.h	/^	unsigned long chunksize;$/;"	m	struct:bitmap	access:public
bitmap::complete_pages	./libmdadm/bitmap.h	/^	struct list_head complete_pages;$/;"	m	struct:bitmap	typeref:struct:bitmap::list_head	access:public
bitmap::counter_bits	./libmdadm/bitmap.h	/^	int counter_bits; \/* how many bits per block counter *\/$/;"	m	struct:bitmap	access:public
bitmap::daemon	./libmdadm/bitmap.h	/^	mdk_thread_t *daemon;$/;"	m	struct:bitmap	access:public
bitmap::daemon_sleep	./libmdadm/bitmap.h	/^	unsigned long daemon_sleep; \/* how many seconds between updates? *\/$/;"	m	struct:bitmap	access:public
bitmap::events_cleared	./libmdadm/bitmap.h	/^	__u64	events_cleared;$/;"	m	struct:bitmap	access:public
bitmap::file	./libmdadm/bitmap.h	/^	struct file *file; \/* backing disk file *\/$/;"	m	struct:bitmap	typeref:struct:bitmap::file	access:public
bitmap::file_pages	./libmdadm/bitmap.h	/^	unsigned long file_pages; \/* number of pages in the file *\/$/;"	m	struct:bitmap	access:public
bitmap::filemap	./libmdadm/bitmap.h	/^	struct page **filemap; \/* list of cache pages for the file *\/$/;"	m	struct:bitmap	typeref:struct:bitmap::page	access:public
bitmap::filemap_attr	./libmdadm/bitmap.h	/^	unsigned long *filemap_attr; \/* attributes associated w\/ filemap pages *\/$/;"	m	struct:bitmap	access:public
bitmap::flags	./libmdadm/bitmap.h	/^	unsigned long flags;$/;"	m	struct:bitmap	access:public
bitmap::lock	./libmdadm/bitmap.h	/^	spinlock_t lock;$/;"	m	struct:bitmap	access:public
bitmap::mddev	./libmdadm/bitmap.h	/^	mddev_t *mddev; \/* the md device that the bitmap is for *\/$/;"	m	struct:bitmap	access:public
bitmap::missing_pages	./libmdadm/bitmap.h	/^	unsigned long missing_pages; \/* number of pages not yet allocated *\/$/;"	m	struct:bitmap	access:public
bitmap::pages	./libmdadm/bitmap.h	/^	unsigned long pages; \/* total number of pages in the bitmap *\/$/;"	m	struct:bitmap	access:public
bitmap::sb_page	./libmdadm/bitmap.h	/^	struct page *sb_page; \/* cached copy of the bitmap file superblock *\/$/;"	m	struct:bitmap	typeref:struct:bitmap::page	access:public
bitmap::syncchunk	./libmdadm/bitmap.h	/^	unsigned long syncchunk;$/;"	m	struct:bitmap	access:public
bitmap::write_daemon	./libmdadm/bitmap.h	/^	mdk_thread_t *write_daemon;$/;"	m	struct:bitmap	access:public
bitmap::write_done	./libmdadm/bitmap.h	/^	struct semaphore write_done;$/;"	m	struct:bitmap	typeref:struct:bitmap::semaphore	access:public
bitmap::write_lock	./libmdadm/bitmap.h	/^	spinlock_t write_lock;$/;"	m	struct:bitmap	access:public
bitmap::write_pages	./libmdadm/bitmap.h	/^	struct list_head write_pages;$/;"	m	struct:bitmap	typeref:struct:bitmap::list_head	access:public
bitmap::write_pool	./libmdadm/bitmap.h	/^	mempool_t *write_pool;$/;"	m	struct:bitmap	access:public
bitmap::write_ready	./libmdadm/bitmap.h	/^	struct semaphore write_ready;$/;"	m	struct:bitmap	typeref:struct:bitmap::semaphore	access:public
bitmap::write_wait	./libmdadm/bitmap.h	/^	wait_queue_head_t write_wait;$/;"	m	struct:bitmap	access:public
bitmap::writeback_daemon	./libmdadm/bitmap.h	/^	mdk_thread_t *writeback_daemon;$/;"	m	struct:bitmap	access:public
bitmap::writes_pending	./libmdadm/bitmap.h	/^	unsigned long writes_pending;$/;"	m	struct:bitmap	access:public
bitmap_active	./libmdadm/bitmap.h	/^int  bitmap_active(struct bitmap *bitmap);$/;"	p	signature:(struct bitmap *bitmap)
bitmap_chunk	./libmdadm/mdadm.h	/^	int	bitmap_chunk;$/;"	m	struct:shape	access:public
bitmap_close_sync	./libmdadm/bitmap.h	/^void bitmap_close_sync(struct bitmap *bitmap);$/;"	p	signature:(struct bitmap *bitmap)
bitmap_counter_t	./libmdadm/bitmap.h	/^typedef __u16 bitmap_counter_t;$/;"	t
bitmap_create	./libmdadm/bitmap.h	/^int  bitmap_create(mddev_t *mddev);$/;"	p	signature:(mddev_t *mddev)
bitmap_destroy	./libmdadm/bitmap.h	/^void bitmap_destroy(mddev_t *mddev);$/;"	p	signature:(mddev_t *mddev)
bitmap_end_sync	./libmdadm/bitmap.h	/^void bitmap_end_sync(struct bitmap *bitmap, sector_t offset, int *blocks, int aborted);$/;"	p	signature:(struct bitmap *bitmap, sector_t offset, int *blocks, int aborted)
bitmap_endwrite	./libmdadm/bitmap.h	/^void bitmap_endwrite(struct bitmap *bitmap, sector_t offset, unsigned long sectors,$/;"	p	signature:(struct bitmap *bitmap, sector_t offset, unsigned long sectors, int success)
bitmap_fd	./libmdadm/mdadm.h	/^	int	bitmap_fd;$/;"	m	struct:mddev_ident	access:public
bitmap_file	./libmdadm/mdadm.h	/^	char	*bitmap_file;$/;"	m	struct:mddev_ident	access:public
bitmap_file	./libmdadm/mdadm.h	/^	char	*bitmap_file;$/;"	m	struct:shape	access:public
bitmap_offset	./libmdadm/mdadm.h	/^	long			bitmap_offset;	\/* 0 == none, 1 == a file *\/$/;"	m	struct:mdinfo	access:public
bitmap_page	./libmdadm/bitmap.h	/^struct bitmap_page {$/;"	s
bitmap_page::count	./libmdadm/bitmap.h	/^	int count;$/;"	m	struct:bitmap_page	access:public
bitmap_page::hijacked	./libmdadm/bitmap.h	/^	unsigned int hijacked;$/;"	m	struct:bitmap_page	access:public
bitmap_page::map	./libmdadm/bitmap.h	/^	char *map;$/;"	m	struct:bitmap_page	access:public
bitmap_print_sb	./libmdadm/bitmap.h	/^void bitmap_print_sb(struct bitmap *bitmap);$/;"	p	signature:(struct bitmap *bitmap)
bitmap_sectors	./libmdadm/mdadm.h	/^extern unsigned long bitmap_sectors(struct bitmap_super_s *bsb);$/;"	p	signature:(struct bitmap_super_s *bsb)
bitmap_setallbits	./libmdadm/bitmap.h	/^int  bitmap_setallbits(struct bitmap *bitmap);$/;"	p	signature:(struct bitmap *bitmap)
bitmap_start_sync	./libmdadm/bitmap.h	/^int bitmap_start_sync(struct bitmap *bitmap, sector_t offset, int *blocks);$/;"	p	signature:(struct bitmap *bitmap, sector_t offset, int *blocks)
bitmap_startwrite	./libmdadm/bitmap.h	/^void bitmap_startwrite(struct bitmap *bitmap, sector_t offset, unsigned long sectors);$/;"	p	signature:(struct bitmap *bitmap, sector_t offset, unsigned long sectors)
bitmap_state	./libmdadm/bitmap.h	/^enum bitmap_state {$/;"	g
bitmap_super_s	./libmdadm/bitmap.h	/^typedef struct bitmap_super_s {$/;"	s
bitmap_super_s::chunksize	./libmdadm/bitmap.h	/^	__u32 chunksize;    \/* 52  the bitmap chunk size in bytes *\/$/;"	m	struct:bitmap_super_s	access:public
bitmap_super_s::daemon_sleep	./libmdadm/bitmap.h	/^	__u32 daemon_sleep; \/* 56  seconds between disk flushes *\/$/;"	m	struct:bitmap_super_s	access:public
bitmap_super_s::events	./libmdadm/bitmap.h	/^	__u64 events;       \/* 24  event counter for the bitmap (1)*\/$/;"	m	struct:bitmap_super_s	access:public
bitmap_super_s::events_cleared	./libmdadm/bitmap.h	/^	__u64 events_cleared;\/*32  event counter when last bit cleared (2) *\/$/;"	m	struct:bitmap_super_s	access:public
bitmap_super_s::magic	./libmdadm/bitmap.h	/^	__u32 magic;        \/*  0  BITMAP_MAGIC *\/$/;"	m	struct:bitmap_super_s	access:public
bitmap_super_s::pad	./libmdadm/bitmap.h	/^	__u8  pad[256 - 64]; \/* set to zero *\/$/;"	m	struct:bitmap_super_s	access:public
bitmap_super_s::state	./libmdadm/bitmap.h	/^	__u32 state;        \/* 48  bitmap state information *\/$/;"	m	struct:bitmap_super_s	access:public
bitmap_super_s::sync_size	./libmdadm/bitmap.h	/^	__u64 sync_size;    \/* 40  the size of the md device's sync range(3) *\/$/;"	m	struct:bitmap_super_s	access:public
bitmap_super_s::uuid	./libmdadm/bitmap.h	/^	__u8  uuid[16];     \/*  8  128 bit uuid - must match md device uuid *\/$/;"	m	struct:bitmap_super_s	access:public
bitmap_super_s::version	./libmdadm/bitmap.h	/^	__u32 version;      \/*  4  the bitmap major for now, could change... *\/$/;"	m	struct:bitmap_super_s	access:public
bitmap_super_s::write_behind	./libmdadm/bitmap.h	/^	__u32 write_behind; \/* 60  number of outstanding write-behind writes *\/$/;"	m	struct:bitmap_super_s	access:public
bitmap_super_t	./libmdadm/bitmap.h	/^} bitmap_super_t;$/;"	t	typeref:struct:bitmap_super_s
bitmap_unplug	./libmdadm/bitmap.h	/^int bitmap_unplug(struct bitmap *bitmap);$/;"	p	signature:(struct bitmap *bitmap)
bitmap_update_sb	./libmdadm/bitmap.h	/^int bitmap_update_sb(struct bitmap *bitmap);$/;"	p	signature:(struct bitmap *bitmap)
bitmap_update_uuid	./libmdadm/mdadm.h	/^extern int bitmap_update_uuid(int fd, int *uuid, int swap);$/;"	p	signature:(int fd, int *uuid, int swap)
blk	./libe2fsck/problem.h	/^	blk64_t	blk, blk2;$/;"	m	struct:problem_context	access:public
blk	./libmke2fs/ext2fs.h	/^	blk64_t	blk;$/;"	m	struct:ext2_db_entry2	access:public
blk	./libmke2fs/ext2fs.h	/^	blk_t	blk;$/;"	m	struct:ext2_db_entry	access:public
blk2	./libe2fsck/problem.h	/^	blk64_t	blk, blk2;$/;"	m	struct:problem_context	access:public
blk64_t	./libmke2fs/ext2fs.h	/^typedef __u64 __bitwise		blk64_t;$/;"	t
blk_t	./libmke2fs/ext2fs.h	/^typedef __u32 __bitwise		blk_t;$/;"	t
blkcount	./libe2fsck/problem.h	/^	e2_blkcnt_t	blkcount;$/;"	m	struct:problem_context	access:public
blkid	./FilesystemManager.cpp	/^int FilesystemManager::blkid()$/;"	f	class:FilesystemManager	signature:()
blkid	./FilesystemManager.h	/^	int blkid();$/;"	p	class:FilesystemManager	access:private	signature:()
blkid	./libe2fsck/e2fsck.h	/^	blkid_cache blkid;	\/* blkid cache *\/$/;"	m	struct:e2fsck_struct	access:public
block_alloc_stats	./libmke2fs/ext2fs.h	/^	void (*block_alloc_stats)(ext2_filsys fs, blk64_t blk, int inuse);$/;"	m	struct:struct_ext2_filsys	access:public
block_buf	./libe2fsck/e2fsck.h	/^	char *block_buf;$/;"	m	struct:e2fsck_struct	access:public
block_dup_map	./libe2fsck/e2fsck.h	/^	ext2fs_block_bitmap block_dup_map; \/* Blks referenced more than once *\/$/;"	m	struct:e2fsck_struct	access:public
block_ea_map	./libe2fsck/e2fsck.h	/^	ext2fs_block_bitmap block_ea_map; \/* Blocks which are used by EA's *\/$/;"	m	struct:e2fsck_struct	access:public
block_found_map	./libe2fsck/e2fsck.h	/^	ext2fs_block_bitmap block_found_map; \/* Blocks which are in use *\/$/;"	m	struct:e2fsck_struct	access:public
block_map	./libmke2fs/ext2fs.h	/^	ext2fs_block_bitmap		block_map;$/;"	m	struct:struct_ext2_filsys	access:public
block_monitor	./libmdadm/msg.h	/^extern int block_monitor(char *container, const int freeze);$/;"	p	signature:(char *container, const int freeze)
block_subarray	./libmdadm/msg.h	/^extern int block_subarray(struct mdinfo *sra);$/;"	p	signature:(struct mdinfo *sra)
blockcnt	./libmke2fs/ext2fs.h	/^	e2_blkcnt_t	blockcnt;$/;"	m	struct:ext2_db_entry2	access:public
blockcnt	./libmke2fs/ext2fs.h	/^	int	blockcnt;$/;"	m	struct:ext2_db_entry	access:public
blocks_num	./libmdadm/part.h	/^  __u32 blocks_num;$/;"	m	struct:MBR_part_record	access:public
blocks_per_group	./libmke2fs/mke2fs.h	/^	__u32 blocks_per_group;$/;"	m	struct:e2fs_cfg	access:public
blocks_per_page	./libe2fsck/e2fsck.h	/^	int blocks_per_page;$/;"	m	struct:e2fsck_struct	access:public
blocksize	./libe2fsck/e2fsck.h	/^	int	blocksize;	\/* blocksize *\/$/;"	m	struct:e2fsck_struct	access:public
blocksize	./libmke2fs/ext2fs.h	/^	unsigned int			blocksize;$/;"	m	struct:struct_ext2_filsys	access:public
blocksize	./libmke2fs/mke2fs.h	/^	int blocksize;$/;"	m	struct:e2fs_cfg	access:public
bootable	./libmdadm/part.h	/^  __u8 bootable;$/;"	m	struct:MBR_part_record	access:public
bp	./libmdadm/bitmap.h	/^	struct bitmap_page *bp;$/;"	m	struct:bitmap	typeref:struct:bitmap::bitmap_page	access:public
brelse	./libe2fsck/jfs_user.h	/^void brelse(struct buffer_head *bh);$/;"	p	signature:(struct buffer_head *bh)
brief	./libmdadm/mdadm.h	/^	int	brief;$/;"	m	struct:context	access:public
brief_detail_super	./libmdadm/mdadm.h	/^	void (*brief_detail_super)(struct supertype *st);$/;"	m	struct:superswitch	access:public
brief_examine_subarrays	./libmdadm/mdadm.h	/^	void (*brief_examine_subarrays)(struct supertype *st, int verbose);$/;"	m	struct:superswitch	access:public
brief_examine_super	./libmdadm/mdadm.h	/^	void (*brief_examine_super)(struct supertype *st, int verbose);$/;"	m	struct:superswitch	access:public
brk_start	./libe2fsck/e2fsck.h	/^	void	*brk_start;$/;"	m	struct:resource_track	access:public
bswap_16	./libmdadm/mdadm.h	117;"	d
bswap_32	./libmdadm/mdadm.h	119;"	d
bswap_64	./libmdadm/mdadm.h	123;"	d
buf	./libe2fsck/e2fsck_lib.h	/^	char *buf;$/;"	m	struct:e2fsck_handle	access:public
buf	./libmdadm/mdadm.h	/^	char	*buf;$/;"	m	struct:metadata_update	access:public
buf	./libmke2fs/ext2fsP.h	/^	char		*buf;$/;"	m	struct:dir_context	access:public
buf	./libmke2fs/mke2fs.h	/^	char *buf;$/;"	m	struct:mke2fs_handle	access:public
buffer	./libmdadm/sha1.h	/^  sha1_uint32 buffer[32];$/;"	m	struct:sha1_ctx	access:public
buffer	./libmke2fs/ext2fsP.h	/^	void *				buffer;$/;"	m	struct:ext2_inode_cache	access:public
buffer_assertion_failure	./libe2fsck/kernel-jbd.h	/^void buffer_assertion_failure(struct buffer_head *bh);$/;"	p	signature:(struct buffer_head *bh)
buffer_blk	./libmke2fs/ext2fsP.h	/^	blk64_t				buffer_blk;$/;"	m	struct:ext2_inode_cache	access:public
buffer_head	./libe2fsck/jfs_user.h	/^struct buffer_head {$/;"	s
buffer_head::b_blocknr	./libe2fsck/jfs_user.h	/^	unsigned long long b_blocknr;$/;"	m	struct:buffer_head	access:public
buffer_head::b_ctx	./libe2fsck/jfs_user.h	/^	e2fsck_t	b_ctx;$/;"	m	struct:buffer_head	access:public
buffer_head::b_data	./libe2fsck/jfs_user.h	/^	char		b_data[1024];$/;"	m	struct:buffer_head	access:public
buffer_head::b_dirty	./libe2fsck/jfs_user.h	/^	int	 	b_dirty;$/;"	m	struct:buffer_head	access:public
buffer_head::b_err	./libe2fsck/jfs_user.h	/^	int	 	b_err;$/;"	m	struct:buffer_head	access:public
buffer_head::b_io	./libe2fsck/jfs_user.h	/^	io_channel 	b_io;$/;"	m	struct:buffer_head	access:public
buffer_head::b_size	./libe2fsck/jfs_user.h	/^	int	 	b_size;$/;"	m	struct:buffer_head	access:public
buffer_head::b_uptodate	./libe2fsck/jfs_user.h	/^	int	 	b_uptodate;$/;"	m	struct:buffer_head	access:public
buffer_jbd	./libe2fsck/kernel-jbd.h	/^static inline int buffer_jbd(struct buffer_head *bh)$/;"	f	signature:(struct buffer_head *bh)
buffer_jbd	./libe2fsck/kernel-jbd.h	951;"	d
buffer_jbd_data	./libe2fsck/kernel-jbd.h	/^static inline int buffer_jbd_data(struct buffer_head *bh)$/;"	f	signature:(struct buffer_head *bh)
buffer_jdirty	./libe2fsck/kernel-jbd.h	/^static inline int buffer_jdirty(struct buffer_head *bh)$/;"	f	signature:(struct buffer_head *bh)
buffer_jlist_eq	./libe2fsck/kernel-jbd.h	/^static inline int buffer_jlist_eq(struct buffer_head *bh, int list)$/;"	f	signature:(struct buffer_head *bh, int list)
buffer_jlist_eq	./libe2fsck/kernel-jbd.h	952;"	d
buffer_req	./libe2fsck/jfs_user.h	46;"	d
buffer_trace_init	./libe2fsck/kernel-jbd.h	931;"	d
buffer_uptodate	./libe2fsck/jfs_user.h	/^int buffer_uptodate(struct buffer_head *bh);$/;"	p	signature:(struct buffer_head *bh)
buflen	./libmdadm/sha1.h	/^  sha1_uint32 buflen;$/;"	m	struct:sha1_ctx	access:public
build	./libmdadm/platform-intel.h	/^	__u16 build; \/* Example: 1020 as in 8.6.0.1020 *\/$/;"	m	struct:imsm_orom	access:public
bytes_avail	./libmke2fs/ext2fs.h	/^	int		bytes_avail;$/;"	m	struct:ext2_extent_info	access:public
bytes_read	./libe2fsck/e2fsck.h	/^	unsigned long long bytes_read;$/;"	m	struct:resource_track	access:public
bytes_written	./libe2fsck/e2fsck.h	/^	unsigned long long bytes_written;$/;"	m	struct:resource_track	access:public
cState	./libmdadm/mdadm_other.h	/^	char cState; \/* Active: 'A', Spare: 'S', Replacement: 'R' *\/$/;"	m	struct:examine_result	access:public
cache	./libmke2fs/ext2fsP.h	/^	struct ext2_inode_cache_ent	*cache;$/;"	m	struct:ext2_inode_cache	typeref:struct:ext2_inode_cache::ext2_inode_cache_ent	access:public
cache_last	./libmke2fs/ext2fsP.h	/^	int				cache_last;$/;"	m	struct:ext2_inode_cache	access:public
cache_size	./libmdadm/mdadm.h	/^	unsigned long		cache_size; \/* size of raid456 stripe cache*\/$/;"	m	struct:mdinfo	access:public
cache_size	./libmke2fs/ext2fsP.h	/^	int				cache_size;$/;"	m	struct:ext2_inode_cache	access:public
calc_array_size	./libmdadm/mdadm.h	/^extern unsigned long long calc_array_size(int level, int raid_disks, int layout,$/;"	p	signature:(int level, int raid_disks, int layout, int chunksize, unsigned long long devsize)
calc_csum	./libmdadm/mdadm.h	/^extern unsigned long calc_csum(void *super, int bytes);$/;"	p	signature:(void *super, int bytes)
capabilities	./libmdadm/platform-intel.h	/^	__u32 capabilities;$/;"	m	struct:imsm_orom	access:public
cb_func	./libe2fsck/e2fsck_lib.h	/^	e2fsck_cb_func cb_func;$/;"	m	struct:e2fsck_handle	access:public
cb_func	./libmke2fs/mke2fs.h	/^	mke2fs_cb_func cb_func;$/;"	m	struct:mke2fs_handle	access:public
cfg	./libe2fsck/e2fsck_lib.h	/^	struct e2fsck_cfg cfg;$/;"	m	struct:e2fsck_handle	typeref:struct:e2fsck_handle::e2fsck_cfg	access:public
cfg	./libmke2fs/mke2fs.h	/^	struct e2fs_cfg cfg;$/;"	m	struct:mke2fs_handle	typeref:struct:mke2fs_handle::e2fs_cfg	access:public
cflag	./libmke2fs/mke2fs.h	/^	int cflag;$/;"	m	struct:e2fs_cfg	access:public
check	./libmdadm/mdmon.h	/^enum sync_action { idle, reshape, resync, recover, check, repair, bad_action };$/;"	e	enum:sync_action
check_backup_super_block	./libe2fsck/e2fsck.h	/^int check_backup_super_block(e2fsck_t ctx);$/;"	p	signature:(e2fsck_t ctx)
check_degraded	./libmdadm/mdmon.h	/^	int check_degraded; \/* flag set by mon, read by manage *\/$/;"	m	struct:active_array	access:public
check_directory	./libmke2fs/ext2fs.h	/^	errcode_t (*check_directory)(ext2_filsys fs, ext2_ino_t ino);$/;"	m	struct:struct_ext2_filsys	access:public
check_env	./libmdadm/mdadm.h	/^extern int check_env(char *name);$/;"	p	signature:(char *name)
check_ext2	./libmdadm/mdadm.h	/^extern int check_ext2(int fd, char *name);$/;"	p	signature:(int fd, char *name)
check_for_modules	./libe2fsck/e2fsck.h	/^extern int check_for_modules(const char *fs_name);$/;"	p	signature:(const char *fs_name)
check_mount	./libmke2fs/util.h	/^extern int check_mount(const char *device, int force, const char *type);$/;"	p	signature:(const char *device, int force, const char *type)
check_partitions	./libmdadm/mdadm.h	/^extern int check_partitions(int fd, char *dname,$/;"	p	signature:(int fd, char *dname, unsigned long long freesize, unsigned long long size)
check_plausibility	./libmke2fs/util.h	/^extern void check_plausibility(const char *device);$/;"	p	signature:(const char *device)
check_raid	./libmdadm/mdadm.h	/^extern int check_raid(int fd, char *name);$/;"	p	signature:(int fd, char *name)
check_reiser	./libmdadm/mdadm.h	/^extern int check_reiser(int fd, char *name);$/;"	p	signature:(int fd, char *name)
check_reshape	./libmdadm/mdmon.h	/^	int check_reshape; \/* flag set by mon, read by manage *\/$/;"	m	struct:active_array	access:public
check_resize_inode	./libe2fsck/e2fsck.h	/^void check_resize_inode(e2fsck_t ctx);$/;"	p	signature:(e2fsck_t ctx)
check_super_block	./libe2fsck/e2fsck.h	/^void check_super_block(e2fsck_t ctx);$/;"	p	signature:(e2fsck_t ctx)
checksum	./libmdadm/platform-intel.h	/^	__u8 checksum; \/* checksum of all the bytes in this table *\/$/;"	m	struct:imsm_orom	access:public
child_monitor	./libmdadm/mdadm.h	/^extern int child_monitor(int afd, struct mdinfo *sra, struct reshape *reshape,$/;"	p	signature:(int afd, struct mdinfo *sra, struct reshape *reshape, struct supertype *st, unsigned long stripes, int *fds, unsigned long long *offsets, int dests, int *destfd, unsigned long long *destoffsets)
chunk	./libmdadm/mdadm.h	/^	int	chunk;$/;"	m	struct:shape	access:public
chunk_size	./libmdadm/md_p.h	/^	__u32 chunk_size;	\/*  1 chunk size in bytes		      *\/$/;"	m	struct:mdp_superblock_s	access:public
chunk_size	./libmdadm/md_u.h	/^	int			chunk_size;	\/* in bytes *\/$/;"	m	struct:mdu_param_s	access:public
chunk_size	./libmdadm/md_u.h	/^	int chunk_size;	\/*  1 chunk size in bytes		      *\/$/;"	m	struct:mdu_array_info_s	access:public
chunks	./libmdadm/bitmap.h	/^	unsigned long chunks; \/* total number of data chunks for the array *\/$/;"	m	struct:bitmap	access:public
chunkshift	./libmdadm/bitmap.h	/^	unsigned long chunkshift; \/* chunksize = 2^chunkshift (for bitops) *\/$/;"	m	struct:bitmap	access:public
chunksize	./libmdadm/bitmap.h	/^	__u32 chunksize;    \/* 52  the bitmap chunk size in bytes *\/$/;"	m	struct:bitmap_super_s	access:public
chunksize	./libmdadm/bitmap.h	/^	unsigned long chunksize;$/;"	m	struct:bitmap	access:public
clean	./libmdadm/mdmon.h	/^		   clean, active, write_pending, active_idle, bad_word};$/;"	e	enum:array_state
cleanup_journal_tail	./libe2fsck/kernel-jbd.h	/^extern int	cleanup_journal_tail(journal_t *);$/;"	p	signature:(journal_t *)
clear	./libmdadm/mdmon.h	/^enum array_state { clear, inactive, suspended, readonly, read_auto,$/;"	e	enum:array_state
clear_problem_context	./libe2fsck/problem.h	/^void clear_problem_context(struct problem_context *pctx);$/;"	p	signature:(struct problem_context *pctx)
cluster_ratio_bits	./libmke2fs/ext2fs.h	/^	int				cluster_ratio_bits;$/;"	m	struct:struct_ext2_filsys	access:public
cluster_size	./libmke2fs/mke2fs.h	/^	int cluster_size;$/;"	m	struct:e2fs_cfg	access:public
commit_header	./libe2fsck/kernel-jbd.h	/^struct commit_header {$/;"	s
commit_header::h_blocktype	./libe2fsck/kernel-jbd.h	/^	__u32		h_blocktype;$/;"	m	struct:commit_header	access:public
commit_header::h_chksum	./libe2fsck/kernel-jbd.h	/^	__u32		h_chksum[JBD2_CHECKSUM_BYTES];$/;"	m	struct:commit_header	access:public
commit_header::h_chksum_size	./libe2fsck/kernel-jbd.h	/^	unsigned char	h_chksum_size;$/;"	m	struct:commit_header	access:public
commit_header::h_chksum_type	./libe2fsck/kernel-jbd.h	/^	unsigned char	h_chksum_type;$/;"	m	struct:commit_header	access:public
commit_header::h_commit_nsec	./libe2fsck/kernel-jbd.h	/^	__u32		h_commit_nsec;$/;"	m	struct:commit_header	access:public
commit_header::h_commit_sec	./libe2fsck/kernel-jbd.h	/^	__u64		h_commit_sec;$/;"	m	struct:commit_header	access:public
commit_header::h_magic	./libe2fsck/kernel-jbd.h	/^	__u32		h_magic;$/;"	m	struct:commit_header	access:public
commit_header::h_padding	./libe2fsck/kernel-jbd.h	/^	unsigned char	h_padding[2];$/;"	m	struct:commit_header	access:public
commit_header::h_sequence	./libe2fsck/kernel-jbd.h	/^	__u32		h_sequence;$/;"	m	struct:commit_header	access:public
compare_paths	./libmdadm/mdadm.h	/^extern int compare_paths (char* path1,char* path2);$/;"	p	signature:(char* path1,char* path2)
compare_super	./libmdadm/mdadm.h	/^	int (*compare_super)(struct supertype *st, struct supertype *tst);$/;"	m	struct:superswitch	access:public
complete_pages	./libmdadm/bitmap.h	/^	struct list_head complete_pages;$/;"	m	struct:bitmap	typeref:struct:bitmap::list_head	access:public
component_size	./libmdadm/mdadm.h	/^	unsigned long long	component_size; \/* same as array.size, except in$/;"	m	struct:mdinfo	access:public
compute_backup_blocks	./libmdadm/mdadm.h	/^extern unsigned long compute_backup_blocks(int nchunk, int ochunk,$/;"	p	signature:(int nchunk, int ochunk, unsigned int ndata, unsigned int odata)
cond_resched	./libe2fsck/jfs_user.h	62;"	d
conf_get_create_info	./libmdadm/mdadm.h	/^extern struct createinfo *conf_get_create_info(void);$/;"	p	signature:(void)
conf_get_devs	./libmdadm/mdadm.h	/^extern struct mddev_dev *conf_get_devs(void);$/;"	p	signature:(void)
conf_get_homehost	./libmdadm/mdadm.h	/^extern char *conf_get_homehost(int *require_homehostp);$/;"	p	signature:(int *require_homehostp)
conf_get_ident	./libmdadm/mdadm.h	/^extern struct mddev_ident *conf_get_ident(char *dev);$/;"	p	signature:(char *dev)
conf_get_mailaddr	./libmdadm/mdadm.h	/^extern char *conf_get_mailaddr(void);$/;"	p	signature:(void)
conf_get_mailfrom	./libmdadm/mdadm.h	/^extern char *conf_get_mailfrom(void);$/;"	p	signature:(void)
conf_get_program	./libmdadm/mdadm.h	/^extern char *conf_get_program(void);$/;"	p	signature:(void)
conf_line	./libmdadm/mdadm.h	/^extern char *conf_line(FILE *file);$/;"	p	signature:(FILE *file)
conf_match	./libmdadm/mdadm.h	/^extern struct mddev_ident *conf_match(struct supertype *st,$/;"	p	signature:(struct supertype *st, struct mdinfo *info, char *devname, int verbose, int *rvp)
conf_name_is_free	./libmdadm/mdadm.h	/^extern int conf_name_is_free(char *name);$/;"	p	signature:(char *name)
conf_test_dev	./libmdadm/mdadm.h	/^extern int conf_test_dev(char *devname);$/;"	p	signature:(char *devname)
conf_test_metadata	./libmdadm/mdadm.h	/^extern int conf_test_metadata(const char *version, struct dev_policy *pol, int is_homehost);$/;"	p	signature:(const char *version, struct dev_policy *pol, int is_homehost)
conf_verify_devnames	./libmdadm/mdadm.h	/^extern int conf_verify_devnames(struct mddev_ident *array_list);$/;"	p	signature:(struct mddev_ident *array_list)
conf_word	./libmdadm/mdadm.h	/^extern char *conf_word(FILE *file, int allow_key);$/;"	p	signature:(FILE *file, int allow_key)
connect_monitor	./libmdadm/msg.h	/^extern int connect_monitor(char *devname);$/;"	p	signature:(char *devname)
cont_err	./libmdadm/mdadm.h	1401;"	d
cont_err	./libmdadm/mdadm.h	1404;"	d
container	./libmdadm/mdadm.h	/^	char	*container;	\/* \/dev\/whatever name of container, or$/;"	m	struct:mddev_ident	access:public
container	./libmdadm/mdmon.h	/^	struct supertype *container;$/;"	m	struct:active_array	typeref:struct:active_array::supertype	access:public
container_choose_spares	./libmdadm/mdadm.h	/^extern struct mdinfo *container_choose_spares(struct supertype *st,$/;"	p	signature:(struct supertype *st, unsigned long long min_size, struct domainlist *domlist, char *spare_group, const char *metadata, int get_one)
container_content	./libmdadm/mdadm.h	/^	struct mdinfo *(*container_content)(struct supertype *st, char *subarray);$/;"	m	struct:superswitch	typeref:struct:superswitch::container_content	access:public
container_devnm	./libmdadm/mdadm.h	/^	char container_devnm[32];    \/* devnm of container *\/$/;"	m	struct:supertype	access:public
container_enough	./libmdadm/mdadm.h	/^	int container_enough; \/* flag external handlers can set to$/;"	m	struct:mdinfo	access:public
container_member	./libmdadm/mdadm.h	/^	int container_member; \/* for assembling external-metatdata arrays$/;"	m	struct:mdinfo	access:public
context	./libmdadm/mdadm.h	/^struct context {$/;"	s
context::SparcAdjust	./libmdadm/mdadm.h	/^	int	SparcAdjust;$/;"	m	struct:context	access:public
context::_export	./libmdadm/mdadm.h	/^	int	_export;$/;"	m	struct:context	access:public
context::action	./libmdadm/mdadm.h	/^	char	*action;$/;"	m	struct:context	access:public
context::autof	./libmdadm/mdadm.h	/^	int	autof;$/;"	m	struct:context	access:public
context::backup_file	./libmdadm/mdadm.h	/^	char	*backup_file;$/;"	m	struct:context	access:public
context::brief	./libmdadm/mdadm.h	/^	int	brief;$/;"	m	struct:context	access:public
context::delay	./libmdadm/mdadm.h	/^	int	delay;$/;"	m	struct:context	access:public
context::force	./libmdadm/mdadm.h	/^	int	force;$/;"	m	struct:context	access:public
context::freeze_reshape	./libmdadm/mdadm.h	/^	int	freeze_reshape;$/;"	m	struct:context	access:public
context::homehost	./libmdadm/mdadm.h	/^	char	*homehost;$/;"	m	struct:context	access:public
context::invalid_backup	./libmdadm/mdadm.h	/^	int	invalid_backup;$/;"	m	struct:context	access:public
context::prefer	./libmdadm/mdadm.h	/^	char	*prefer;$/;"	m	struct:context	access:public
context::readonly	./libmdadm/mdadm.h	/^	int	readonly;$/;"	m	struct:context	access:public
context::require_homehost	./libmdadm/mdadm.h	/^	int	require_homehost;$/;"	m	struct:context	access:public
context::runstop	./libmdadm/mdadm.h	/^	int	runstop;$/;"	m	struct:context	access:public
context::scan	./libmdadm/mdadm.h	/^	int	scan;$/;"	m	struct:context	access:public
context::subarray	./libmdadm/mdadm.h	/^	char	*subarray;$/;"	m	struct:context	access:public
context::test	./libmdadm/mdadm.h	/^	int	test;$/;"	m	struct:context	access:public
context::update	./libmdadm/mdadm.h	/^	char	*update;$/;"	m	struct:context	access:public
context::verbose	./libmdadm/mdadm.h	/^	int	verbose;$/;"	m	struct:context	access:public
copy_metadata	./libmdadm/mdadm.h	/^	int (*copy_metadata)(struct supertype *st, int from, int to);$/;"	m	struct:superswitch	access:public
copy_uuid	./libmdadm/mdadm.h	/^extern void copy_uuid(void *a, int b[4], int swapuuid);$/;"	p	signature:(void *a, int b[4], int swapuuid)
count	./libe2fsck/problemP.h	/^	int		count;$/;"	m	struct:e2fsck_problem	access:public
count	./libmdadm/bitmap.h	/^	int count;$/;"	m	struct:bitmap_page	access:public
count	./libmke2fs/ext2fsP.h	/^	unsigned long long	count;$/;"	m	struct:ext2_struct_dblist	access:public
counter_bits	./libmdadm/bitmap.h	/^	int counter_bits; \/* how many bits per block counter *\/$/;"	m	struct:bitmap	access:public
cp_events_hi	./libmdadm/md_p.h	/^	__u32 cp_events_hi;	\/*  9 high-order of checkpoint update count   *\/$/;"	m	struct:mdp_superblock_s	access:public
cp_events_hi	./libmdadm/md_p.h	/^	__u32 cp_events_hi;	\/* 10 high-order of checkpoint update count   *\/$/;"	m	struct:mdp_superblock_s	access:public
cp_events_lo	./libmdadm/md_p.h	/^	__u32 cp_events_lo;	\/*  9 low-order of checkpoint update count    *\/$/;"	m	struct:mdp_superblock_s	access:public
cp_events_lo	./libmdadm/md_p.h	/^	__u32 cp_events_lo;	\/* 10 low-order of checkpoint update count    *\/$/;"	m	struct:mdp_superblock_s	access:public
cpu_to_be32	./libe2fsck/jfs_compat.h	18;"	d
crc	./libmdadm/part.h	/^	__u32 crc;$/;"	m	struct:GPT	access:public
crc32_be	./libe2fsck/e2fsck.h	/^extern __u32 crc32_be(__u32 crc, unsigned char const *p, size_t len);$/;"	p	signature:(__u32 crc, unsigned char const *p, size_t len)
crc32table_be	./libe2fsck/crc32table.h	/^static const __u32 crc32table_be[] = {$/;"	v
crc32table_le	./libe2fsck/crc32table.h	/^static const __u32 crc32table_le[] = {$/;"	v
crc_table	./libmdadm/crc32.h	/^local const unsigned long FAR crc_table[TBLS][256] =$/;"	v
create_mddev	./libmdadm/mdadm.h	/^extern int create_mddev(char *dev, char *name, int autof, int trustworthy,$/;"	p	signature:(char *dev, char *name, int autof, int trustworthy, char *chosen)
createinfo	./libmdadm/mdadm.h	/^struct createinfo {$/;"	s
createinfo::autof	./libmdadm/mdadm.h	/^	int	autof;$/;"	m	struct:createinfo	access:public
createinfo::bblist	./libmdadm/mdadm.h	/^	int	bblist;$/;"	m	struct:createinfo	access:public
createinfo::gid	./libmdadm/mdadm.h	/^	int	gid;$/;"	m	struct:createinfo	access:public
createinfo::mode	./libmdadm/mdadm.h	/^	int	mode;$/;"	m	struct:createinfo	access:public
createinfo::names	./libmdadm/mdadm.h	/^	int	names;$/;"	m	struct:createinfo	access:public
createinfo::supertype	./libmdadm/mdadm.h	/^	struct supertype *supertype;$/;"	m	struct:createinfo	typeref:struct:createinfo::supertype	access:public
createinfo::symlinks	./libmdadm/mdadm.h	/^	int	symlinks;$/;"	m	struct:createinfo	access:public
createinfo::uid	./libmdadm/mdadm.h	/^	int	uid;$/;"	m	struct:createinfo	access:public
creator_os	./libmke2fs/mke2fs.h	/^	__u32 creator_os;$/;"	m	struct:e2fs_cfg	access:public
csum1	./libe2fsck/problem.h	/^	__u32		csum1, csum2;$/;"	m	struct:problem_context	access:public
csum2	./libe2fsck/problem.h	/^	__u32		csum1, csum2;$/;"	m	struct:problem_context	access:public
ctime	./libmdadm/md_p.h	/^	__u32 ctime;		\/*  6 Creation time			      *\/$/;"	m	struct:mdp_superblock_s	access:public
ctime	./libmdadm/md_u.h	/^	int ctime;$/;"	m	struct:mdu_array_info_s	access:public
curr_action	./libmdadm/mdmon.h	/^	enum sync_action prev_action, curr_action, next_action;$/;"	m	struct:active_array	typeref:enum:active_array::	access:public
curr_entry	./libmke2fs/ext2fs.h	/^	int		curr_entry;$/;"	m	struct:ext2_extent_info	access:public
curr_level	./libmke2fs/ext2fs.h	/^	int		curr_level;$/;"	m	struct:ext2_extent_info	access:public
curr_state	./libmdadm/mdadm.h	/^	int prev_state, curr_state, next_state;$/;"	m	struct:mdinfo	access:public
curr_state	./libmdadm/mdmon.h	/^	enum array_state prev_state, curr_state, next_state;$/;"	m	struct:active_array	typeref:enum:active_array::	access:public
current_lba	./libmdadm/part.h	/^	__u64 current_lba;$/;"	m	struct:GPT	access:public
custom_array_size	./libmdadm/mdadm.h	/^	unsigned long long	custom_array_size; \/* size for non-default sized$/;"	m	struct:mdinfo	access:public
daemon	./libmdadm/bitmap.h	/^	mdk_thread_t *daemon;$/;"	m	struct:bitmap	access:public
daemon_sleep	./libmdadm/bitmap.h	/^	__u32 daemon_sleep; \/* 56  seconds between disk flushes *\/$/;"	m	struct:bitmap_super_s	access:public
daemon_sleep	./libmdadm/bitmap.h	/^	unsigned long daemon_sleep; \/* how many seconds between updates? *\/$/;"	m	struct:bitmap	access:public
data_disks	./libmdadm/mdadm.h	/^		int data_disks;$/;"	m	struct:reshape::__anon8	access:public
data_offset	./libmdadm/mdadm.h	/^	long long data_offset;$/;"	m	struct:mddev_dev	access:public
data_offset	./libmdadm/mdadm.h	/^	unsigned long long	data_offset;$/;"	m	struct:mdinfo	access:public
data_offset	./libmdadm/mdadm.h	/^	unsigned long long data_offset; \/* used by v1.x only *\/$/;"	m	struct:supertype	access:public
dblist	./libmke2fs/ext2fs.h	/^	ext2_dblist			dblist;$/;"	m	struct:struct_ext2_filsys	access:public
debug	./libe2fsck/e2fsck_lib.h	/^	int debug;$/;"	m	struct:e2fsck_cfg	access:public
default_bitmap_type	./libmke2fs/ext2fs.h	/^	__u16				default_bitmap_type;$/;"	m	struct:struct_ext2_filsys	access:public
default_geometry	./libmdadm/mdadm.h	/^	void (*default_geometry)(struct supertype *st, int *level, int *layout, int *chunk); \/* optional *\/$/;"	m	struct:superswitch	access:public
delay	./libmdadm/mdadm.h	/^	int	delay;$/;"	m	struct:context	access:public
delta_disks	./libmdadm/md_p.h	/^	__u32 delta_disks;	\/* 15 change in number of raid_disks	      *\/$/;"	m	struct:mdp_superblock_s	access:public
delta_disks	./libmdadm/mdadm.h	/^	int			new_level, delta_disks, new_layout, new_chunk;$/;"	m	struct:mdinfo	access:public
depth	./libe2fsck/e2fsck.h	/^	short			depth;		\/* depth of tree *\/$/;"	m	struct:dx_dir_info	access:public
desc_blocks	./libmke2fs/ext2fs.h	/^	unsigned long			desc_blocks;$/;"	m	struct:struct_ext2_filsys	access:public
desc_size	./libmke2fs/mke2fs.h	/^	__u16 desc_size;$/;"	m	struct:extended_opt	access:public
detail_platform	./libmdadm/mdadm.h	/^	int (*detail_platform)(int verbose, int enumerate_only, char *controller_path);$/;"	m	struct:superswitch	access:public
detail_super	./libmdadm/mdadm.h	/^	void (*detail_super)(struct supertype *st, char *homehost);$/;"	m	struct:superswitch	access:public
dev	./libmdadm/mdadm.h	/^	char		*dev;$/;"	m	struct:mdstat_ent	access:public
dev_id	./libmdadm/platform-intel.h	/^	__u16  dev_id;$/;"	m	struct:sys_dev	access:public
dev_member	./libmdadm/mdadm.h	/^	struct dev_member {$/;"	s	struct:mdstat_ent	access:public
dev_open	./libmdadm/mdadm.h	/^extern int dev_open(char *dev, int flags);$/;"	p	signature:(char *dev, int flags)
dev_policy	./libmdadm/mdadm.h	/^struct dev_policy {$/;"	s
dev_policy::metadata	./libmdadm/mdadm.h	/^	const char *metadata;$/;"	m	struct:dev_policy	access:public
dev_policy::name	./libmdadm/mdadm.h	/^	char *name;	\/* None of these strings are allocated.  They are$/;"	m	struct:dev_policy	access:public
dev_policy::next	./libmdadm/mdadm.h	/^	struct dev_policy *next;$/;"	m	struct:dev_policy	typeref:struct:dev_policy::dev_policy	access:public
dev_policy::value	./libmdadm/mdadm.h	/^	const char *value;$/;"	m	struct:dev_policy	access:public
dev_policy_free	./libmdadm/mdadm.h	/^extern void dev_policy_free(struct dev_policy *p);$/;"	p	signature:(struct dev_policy *p)
dev_size_from_id	./libmdadm/mdadm.h	/^extern int dev_size_from_id(dev_t id, unsigned long long *size);$/;"	p	signature:(dev_t id, unsigned long long *size)
devcnt	./libmdadm/mdadm.h	/^	int		devcnt;$/;"	m	struct:mdstat_ent	access:public
devcnt	./libmdadm/mdadm.h	/^	int devcnt;$/;"	m	struct:supertype	access:public
device_name	./libe2fsck/e2fsck.h	/^	char *device_name;$/;"	m	struct:e2fsck_struct	access:public
device_name	./libe2fsck/e2fsck_lib.h	/^	char device_name[32];$/;"	m	struct:e2fsck_handle	access:public
device_name	./libmke2fs/ext2fs.h	/^	char *				device_name;$/;"	m	struct:struct_ext2_filsys	access:public
device_name	./libmke2fs/mke2fs.h	/^	char device_name[32];$/;"	m	struct:mke2fs_handle	access:public
devices	./libmdadm/mdadm.h	/^	char	*devices;	\/* comma separated list of device$/;"	m	struct:mddev_ident	access:public
devid2devnm	./libmdadm/mdadm.h	/^extern char *devid2devnm(int devid);$/;"	p	signature:(int devid)
devid2kname	./libmdadm/mdadm.h	/^extern char *devid2kname(int devid);$/;"	p	signature:(int devid)
devid_policy	./libmdadm/mdadm.h	/^extern struct dev_policy *devid_policy(int devid);$/;"	p	signature:(int devid)
devname	./libmdadm/mdadm.h	/^	char	*devname;$/;"	m	struct:mddev_ident	access:public
devname	./libmdadm/mdadm.h	/^	char *devname;$/;"	m	struct:mddev_dev	access:public
devname_matches	./libmdadm/mdadm.h	/^extern int devname_matches(char *name, char *match);$/;"	p	signature:(char *name, char *match)
devnm	./libmdadm/mdadm.h	/^	char		devnm[32];$/;"	m	struct:mdstat_ent	access:public
devnm	./libmdadm/mdadm.h	/^	char	devnm[32];$/;"	m	struct:map_ent	access:public
devnm	./libmdadm/mdadm.h	/^	char devnm[32]; \/* e.g. md0.  This appears in metadata_version:$/;"	m	struct:supertype	access:public
devnm2devid	./libmdadm/mdadm.h	/^extern int devnm2devid(char *devnm);$/;"	p	signature:(char *devnm)
devs	./libmdadm/mdadm.h	/^	struct mdinfo *devs;$/;"	m	struct:mdinfo	typeref:struct:mdinfo::mdinfo	access:public
devs	./libmdadm/mdadm.h	/^	struct mdinfo *devs;$/;"	m	struct:supertype	typeref:struct:supertype::mdinfo	access:public
devsize	./libmdadm/mdadm.h	/^	unsigned long long devsize;$/;"	m	struct:supertype	access:public
devt_attached_to_hba	./libmdadm/platform-intel.h	/^int devt_attached_to_hba(dev_t dev, const char *hba_path);$/;"	p	signature:(dev_t dev, const char *hba_path)
devt_to_devpath	./libmdadm/platform-intel.h	/^char *devt_to_devpath(dev_t dev);$/;"	p	signature:(dev_t dev)
dgrp_t	./libmke2fs/ext2fs.h	/^typedef __u32 __bitwise		dgrp_t;$/;"	t
dh_next	./libmdadm/dlink.h	/^    void * dh_next;$/;"	m	struct:__dl_head	access:public
dh_prev	./libmdadm/dlink.h	/^    void * dh_prev;$/;"	m	struct:__dl_head	access:public
dict_alloc_insert	./libe2fsck/dict.h	/^extern int dict_alloc_insert(dict_t *, const void *, void *);$/;"	p	signature:(dict_t *, const void *, void *)
dict_allocnode	./libe2fsck/dict.h	/^    dnode_alloc_t dict_allocnode;$/;"	m	struct:dict_t	access:public
dict_allow_dupes	./libe2fsck/dict.h	/^extern void dict_allow_dupes(dict_t *);$/;"	p	signature:(dict_t *)
dict_color	./libe2fsck/dict.h	/^    dnode_color_t dict_color;$/;"	m	struct:dnode_t	access:public
dict_comp_t	./libe2fsck/dict.h	/^typedef int (*dict_comp_t)(const void *, const void *);$/;"	t
dict_compare	./libe2fsck/dict.h	/^    dict_comp_t dict_compare;$/;"	m	struct:dict_t	access:public
dict_contains	./libe2fsck/dict.h	/^extern int dict_contains(dict_t *, dnode_t *);$/;"	p	signature:(dict_t *, dnode_t *)
dict_context	./libe2fsck/dict.h	/^    void *dict_context;$/;"	m	struct:dict_t	access:public
dict_count	./libe2fsck/dict.h	/^extern dictcount_t dict_count(dict_t *);$/;"	p	signature:(dict_t *)
dict_count	./libe2fsck/dict.h	133;"	d
dict_create	./libe2fsck/dict.h	/^extern dict_t *dict_create(dictcount_t, dict_comp_t);$/;"	p	signature:(dictcount_t, dict_comp_t)
dict_data	./libe2fsck/dict.h	/^    void *dict_data;$/;"	m	struct:dnode_t	access:public
dict_delete	./libe2fsck/dict.h	/^extern dnode_t *dict_delete(dict_t *, dnode_t *);$/;"	p	signature:(dict_t *, dnode_t *)
dict_delete_free	./libe2fsck/dict.h	/^extern void dict_delete_free(dict_t *, dnode_t *);$/;"	p	signature:(dict_t *, dnode_t *)
dict_destroy	./libe2fsck/dict.h	/^extern void dict_destroy(dict_t *);$/;"	p	signature:(dict_t *)
dict_dictptr	./libe2fsck/dict.h	/^    dict_t *dict_dictptr;$/;"	m	struct:dict_load_t	access:public
dict_dupes	./libe2fsck/dict.h	/^    int dict_dupes;$/;"	m	struct:dict_t	access:public
dict_first	./libe2fsck/dict.h	/^extern dnode_t *dict_first(dict_t *);$/;"	p	signature:(dict_t *)
dict_free	./libe2fsck/dict.h	/^extern void dict_free(dict_t *);$/;"	p	signature:(dict_t *)
dict_free_nodes	./libe2fsck/dict.h	/^extern void dict_free_nodes(dict_t *);$/;"	p	signature:(dict_t *)
dict_freenode	./libe2fsck/dict.h	/^    dnode_free_t dict_freenode;$/;"	m	struct:dict_t	access:public
dict_init	./libe2fsck/dict.h	/^extern dict_t *dict_init(dict_t *, dictcount_t, dict_comp_t);$/;"	p	signature:(dict_t *, dictcount_t, dict_comp_t)
dict_init_like	./libe2fsck/dict.h	/^extern void dict_init_like(dict_t *, const dict_t *);$/;"	p	signature:(dict_t *, const dict_t *)
dict_insert	./libe2fsck/dict.h	/^extern void dict_insert(dict_t *, dnode_t *, const void *);$/;"	p	signature:(dict_t *, dnode_t *, const void *)
dict_isempty	./libe2fsck/dict.h	/^extern int dict_isempty(dict_t *);$/;"	p	signature:(dict_t *)
dict_isempty	./libe2fsck/dict.h	134;"	d
dict_isfull	./libe2fsck/dict.h	/^extern int dict_isfull(dict_t *);$/;"	p	signature:(dict_t *)
dict_isfull	./libe2fsck/dict.h	129;"	d
dict_isfull	./libe2fsck/dict.h	131;"	d
dict_key	./libe2fsck/dict.h	/^    const void *dict_key;$/;"	m	struct:dnode_t	access:public
dict_last	./libe2fsck/dict.h	/^extern dnode_t *dict_last(dict_t *);$/;"	p	signature:(dict_t *)
dict_left	./libe2fsck/dict.h	/^    struct dnode_t *dict_left;$/;"	m	struct:dnode_t	typeref:struct:dnode_t::dnode_t	access:public
dict_load_begin	./libe2fsck/dict.h	/^extern void dict_load_begin(dict_load_t *, dict_t *);$/;"	p	signature:(dict_load_t *, dict_t *)
dict_load_end	./libe2fsck/dict.h	/^extern void dict_load_end(dict_load_t *);$/;"	p	signature:(dict_load_t *)
dict_load_next	./libe2fsck/dict.h	/^extern void dict_load_next(dict_load_t *, dnode_t *, const void *);$/;"	p	signature:(dict_load_t *, dnode_t *, const void *)
dict_load_t	./libe2fsck/dict.h	/^typedef struct dict_load_t {$/;"	s
dict_load_t	./libe2fsck/dict.h	/^} dict_load_t;$/;"	t	typeref:struct:dict_load_t
dict_load_t::dict_dictptr	./libe2fsck/dict.h	/^    dict_t *dict_dictptr;$/;"	m	struct:dict_load_t	access:public
dict_load_t::dict_nilnode	./libe2fsck/dict.h	/^    dnode_t dict_nilnode;$/;"	m	struct:dict_load_t	access:public
dict_lookup	./libe2fsck/dict.h	/^extern dnode_t *dict_lookup(dict_t *, const void *);$/;"	p	signature:(dict_t *, const void *)
dict_lower_bound	./libe2fsck/dict.h	/^extern dnode_t *dict_lower_bound(dict_t *, const void *);$/;"	p	signature:(dict_t *, const void *)
dict_maxcount	./libe2fsck/dict.h	/^    dictcount_t dict_maxcount;$/;"	m	struct:dict_t	access:public
dict_merge	./libe2fsck/dict.h	/^extern void dict_merge(dict_t *, dict_t *);$/;"	p	signature:(dict_t *, dict_t *)
dict_next	./libe2fsck/dict.h	/^extern dnode_t *dict_next(dict_t *, dnode_t *);$/;"	p	signature:(dict_t *, dnode_t *)
dict_nilnode	./libe2fsck/dict.h	/^    dnode_t dict_nilnode;$/;"	m	struct:dict_load_t	access:public
dict_nilnode	./libe2fsck/dict.h	/^    dnode_t dict_nilnode;$/;"	m	struct:dict_t	access:public
dict_nodecount	./libe2fsck/dict.h	/^    dictcount_t dict_nodecount;$/;"	m	struct:dict_t	access:public
dict_parent	./libe2fsck/dict.h	/^    struct dnode_t *dict_parent;$/;"	m	struct:dnode_t	typeref:struct:dnode_t::dnode_t	access:public
dict_prev	./libe2fsck/dict.h	/^extern dnode_t *dict_prev(dict_t *, dnode_t *);$/;"	p	signature:(dict_t *, dnode_t *)
dict_process	./libe2fsck/dict.h	/^extern void dict_process(dict_t *, void *, dnode_process_t);$/;"	p	signature:(dict_t *, void *, dnode_process_t)
dict_right	./libe2fsck/dict.h	/^    struct dnode_t *dict_right;$/;"	m	struct:dnode_t	typeref:struct:dnode_t::dnode_t	access:public
dict_set_allocator	./libe2fsck/dict.h	/^extern void dict_set_allocator(dict_t *, dnode_alloc_t, dnode_free_t, void *);$/;"	p	signature:(dict_t *, dnode_alloc_t, dnode_free_t, void *)
dict_similar	./libe2fsck/dict.h	/^extern int dict_similar(const dict_t *, const dict_t *);$/;"	p	signature:(const dict_t *, const dict_t *)
dict_t	./libe2fsck/dict.h	/^typedef struct dict_t {$/;"	s
dict_t	./libe2fsck/dict.h	/^} dict_t;$/;"	t	typeref:struct:dict_t
dict_t::dict_allocnode	./libe2fsck/dict.h	/^    dnode_alloc_t dict_allocnode;$/;"	m	struct:dict_t	access:public
dict_t::dict_compare	./libe2fsck/dict.h	/^    dict_comp_t dict_compare;$/;"	m	struct:dict_t	access:public
dict_t::dict_context	./libe2fsck/dict.h	/^    void *dict_context;$/;"	m	struct:dict_t	access:public
dict_t::dict_dupes	./libe2fsck/dict.h	/^    int dict_dupes;$/;"	m	struct:dict_t	access:public
dict_t::dict_freenode	./libe2fsck/dict.h	/^    dnode_free_t dict_freenode;$/;"	m	struct:dict_t	access:public
dict_t::dict_maxcount	./libe2fsck/dict.h	/^    dictcount_t dict_maxcount;$/;"	m	struct:dict_t	access:public
dict_t::dict_nilnode	./libe2fsck/dict.h	/^    dnode_t dict_nilnode;$/;"	m	struct:dict_t	access:public
dict_t::dict_nodecount	./libe2fsck/dict.h	/^    dictcount_t dict_nodecount;$/;"	m	struct:dict_t	access:public
dict_upper_bound	./libe2fsck/dict.h	/^extern dnode_t *dict_upper_bound(dict_t *, const void *);$/;"	p	signature:(dict_t *, const void *)
dict_verify	./libe2fsck/dict.h	/^extern int dict_verify(dict_t *);$/;"	p	signature:(dict_t *)
dictcount_t	./libe2fsck/dict.h	/^typedef unsigned long dictcount_t;$/;"	t
dir	./libe2fsck/problem.h	/^	ext2_ino_t ino, ino2, dir;$/;"	m	struct:problem_context	access:public
dir	./libmke2fs/ext2fsP.h	/^	ext2_ino_t		dir;$/;"	m	struct:dir_context	access:public
dir_context	./libmke2fs/ext2fsP.h	/^struct dir_context {$/;"	s
dir_context::buf	./libmke2fs/ext2fsP.h	/^	char		*buf;$/;"	m	struct:dir_context	access:public
dir_context::dir	./libmke2fs/ext2fsP.h	/^	ext2_ino_t		dir;$/;"	m	struct:dir_context	access:public
dir_context::errcode	./libmke2fs/ext2fsP.h	/^	errcode_t	errcode;$/;"	m	struct:dir_context	access:public
dir_context::flags	./libmke2fs/ext2fsP.h	/^	int		flags;$/;"	m	struct:dir_context	access:public
dir_context::func	./libmke2fs/ext2fsP.h	/^	int (*func)(ext2_ino_t	dir,$/;"	m	struct:dir_context	access:public
dir_context::priv_data	./libmke2fs/ext2fsP.h	/^	void		*priv_data;$/;"	m	struct:dir_context	access:public
dir_info	./libe2fsck/e2fsck.h	/^	struct dir_info_db	*dir_info;$/;"	m	struct:e2fsck_struct	typeref:struct:e2fsck_struct::dir_info_db	access:public
dir_info	./libe2fsck/e2fsck.h	/^struct dir_info {$/;"	s
dir_info::dotdot	./libe2fsck/e2fsck.h	/^	ext2_ino_t		dotdot;	\/* Parent according to '..' *\/$/;"	m	struct:dir_info	access:public
dir_info::ino	./libe2fsck/e2fsck.h	/^	ext2_ino_t		ino;	\/* Inode number *\/$/;"	m	struct:dir_info	access:public
dir_info::parent	./libe2fsck/e2fsck.h	/^	ext2_ino_t		parent; \/* Parent according to treewalk *\/$/;"	m	struct:dir_info	access:public
direct_io	./libmke2fs/mke2fs.h	/^	int direct_io;	$/;"	m	struct:e2fs_cfg	access:public
dirent	./libe2fsck/problem.h	/^	struct ext2_dir_entry *dirent;$/;"	m	struct:problem_context	typeref:struct:problem_context::ext2_dir_entry	access:public
dirs_to_hash	./libe2fsck/e2fsck.h	/^	ext2_u32_list	dirs_to_hash;$/;"	m	struct:e2fsck_struct	access:public
discard	./libe2fsck/e2fsck_lib.h	/^	int discard;$/;"	m	struct:e2fsck_extended_opt	access:public
discard	./libmke2fs/mke2fs.h	/^	int discard;	$/;"	m	struct:extended_opt	access:public
disk	./libmdadm/mdadm.h	/^	mdu_disk_info_t		disk;$/;"	m	struct:mdinfo	access:public
diskInfo	./libmdadm/mdadm_other.h	/^	mdu_disk_info_t diskInfo;$/;"	m	struct:array_disk_info	access:public
disk_action_allows	./libmdadm/mdadm.h	/^extern int disk_action_allows(struct mdinfo *disk, const char *metadata,$/;"	p	signature:(struct mdinfo *disk, const char *metadata, enum policy_action want)
disk_attached_to_hba	./libmdadm/platform-intel.h	/^int disk_attached_to_hba(int fd, const char *hba_path);$/;"	p	signature:(int fd, const char *hba_path)
disk_policy	./libmdadm/mdadm.h	/^extern struct dev_policy *disk_policy(struct mdinfo *disk);$/;"	p	signature:(struct mdinfo *disk)
diskfd_to_devpath	./libmdadm/platform-intel.h	/^char *diskfd_to_devpath(int fd);$/;"	p	signature:(int fd)
disks	./libmdadm/md_p.h	/^	mdp_disk_t disks[MD_SB_DISKS];$/;"	m	struct:mdp_superblock_s	access:public
disposition	./libmdadm/mdadm.h	/^	int disposition;	\/* 'a' for add, 'r' for remove, 'f' for fail,$/;"	m	struct:mddev_dev	access:public
dl_add	./libmdadm/dlink.h	/^void dl_add(void*, void*);$/;"	p	signature:(void*, void*)
dl_alloc	./libmdadm/dlink.h	11;"	d
dl_del	./libmdadm/dlink.h	/^void dl_del(void*);$/;"	p	signature:(void*)
dl_free	./libmdadm/dlink.h	/^void dl_free(void*);$/;"	p	signature:(void*)
dl_head	./libmdadm/dlink.h	/^void *dl_head(void);$/;"	p	signature:(void)
dl_init	./libmdadm/dlink.h	/^void dl_init(void*);$/;"	p	signature:(void*)
dl_insert	./libmdadm/dlink.h	/^void dl_insert(void*, void*);$/;"	p	signature:(void*, void*)
dl_new	./libmdadm/dlink.h	12;"	d
dl_newv	./libmdadm/dlink.h	13;"	d
dl_next	./libmdadm/dlink.h	15;"	d
dl_prev	./libmdadm/dlink.h	16;"	d
dl_strdup	./libmdadm/dlink.h	/^char *dl_strdup(char *);$/;"	p	signature:(char *)
dl_strndup	./libmdadm/dlink.h	/^char *dl_strndup(char *, int);$/;"	p	signature:(char *, int)
dnode_alloc_t	./libe2fsck/dict.h	/^typedef dnode_t *(*dnode_alloc_t)(void *);$/;"	t
dnode_black	./libe2fsck/dict.h	/^typedef enum { dnode_red, dnode_black } dnode_color_t;$/;"	e	enum:__anon1
dnode_color_t	./libe2fsck/dict.h	/^typedef enum { dnode_red, dnode_black } dnode_color_t;$/;"	t	typeref:enum:__anon1
dnode_create	./libe2fsck/dict.h	/^extern dnode_t *dnode_create(void *);$/;"	p	signature:(void *)
dnode_destroy	./libe2fsck/dict.h	/^extern void dnode_destroy(dnode_t *);$/;"	p	signature:(dnode_t *)
dnode_free_t	./libe2fsck/dict.h	/^typedef void (*dnode_free_t)(dnode_t *, void *);$/;"	t
dnode_get	./libe2fsck/dict.h	/^extern void *dnode_get(dnode_t *);$/;"	p	signature:(dnode_t *)
dnode_get	./libe2fsck/dict.h	135;"	d
dnode_getkey	./libe2fsck/dict.h	/^extern const void *dnode_getkey(dnode_t *);$/;"	p	signature:(dnode_t *)
dnode_getkey	./libe2fsck/dict.h	136;"	d
dnode_init	./libe2fsck/dict.h	/^extern dnode_t *dnode_init(dnode_t *, void *);$/;"	p	signature:(dnode_t *, void *)
dnode_is_in_a_dict	./libe2fsck/dict.h	/^extern int dnode_is_in_a_dict(dnode_t *);$/;"	p	signature:(dnode_t *)
dnode_process_t	./libe2fsck/dict.h	/^typedef void (*dnode_process_t)(dict_t *, dnode_t *, void *);$/;"	t
dnode_put	./libe2fsck/dict.h	/^extern void dnode_put(dnode_t *, void *);$/;"	p	signature:(dnode_t *, void *)
dnode_put	./libe2fsck/dict.h	137;"	d
dnode_red	./libe2fsck/dict.h	/^typedef enum { dnode_red, dnode_black } dnode_color_t;$/;"	e	enum:__anon1
dnode_t	./libe2fsck/dict.h	/^typedef struct dnode_t {$/;"	s
dnode_t	./libe2fsck/dict.h	/^} dnode_t;$/;"	t	typeref:struct:dnode_t
dnode_t::dict_color	./libe2fsck/dict.h	/^    dnode_color_t dict_color;$/;"	m	struct:dnode_t	access:public
dnode_t::dict_data	./libe2fsck/dict.h	/^    void *dict_data;$/;"	m	struct:dnode_t	access:public
dnode_t::dict_key	./libe2fsck/dict.h	/^    const void *dict_key;$/;"	m	struct:dnode_t	access:public
dnode_t::dict_left	./libe2fsck/dict.h	/^    struct dnode_t *dict_left;$/;"	m	struct:dnode_t	typeref:struct:dnode_t::dnode_t	access:public
dnode_t::dict_parent	./libe2fsck/dict.h	/^    struct dnode_t *dict_parent;$/;"	m	struct:dnode_t	typeref:struct:dnode_t::dnode_t	access:public
dnode_t::dict_right	./libe2fsck/dict.h	/^    struct dnode_t *dict_right;$/;"	m	struct:dnode_t	typeref:struct:dnode_t::dnode_t	access:public
do_cache_create	./libe2fsck/jfs_user.h	/^_INLINE_ lkmem_cache_t * do_cache_create(int len)$/;"	f	signature:(int len)
do_cache_create	./libe2fsck/jfs_user.h	/^extern lkmem_cache_t * do_cache_create(int len);$/;"	p	signature:(int len)
do_cache_destroy	./libe2fsck/jfs_user.h	/^_INLINE_ void do_cache_destroy(lkmem_cache_t *cache)$/;"	f	signature:(lkmem_cache_t *cache)
do_cache_destroy	./libe2fsck/jfs_user.h	/^extern void do_cache_destroy(lkmem_cache_t *cache);$/;"	p	signature:(lkmem_cache_t *cache)
do_manager	./libmdadm/mdmon.h	/^void do_manager(struct supertype *container);$/;"	p	signature:(struct supertype *container)
do_monitor	./libmdadm/mdmon.h	/^void do_monitor(struct supertype *container);$/;"	p	signature:(struct supertype *container)
do_readahead	./libe2fsck/jfs_user.h	47;"	d
dom	./libmdadm/mdadm.h	/^	const char *dom;$/;"	m	struct:domainlist	access:public
domain_add	./libmdadm/mdadm.h	/^void domain_add(struct domainlist **domp, char *domain);$/;"	p	signature:(struct domainlist **domp, char *domain)
domain_free	./libmdadm/mdadm.h	/^extern void domain_free(struct domainlist *dl);$/;"	p	signature:(struct domainlist *dl)
domain_from_array	./libmdadm/mdadm.h	/^extern struct domainlist *domain_from_array(struct mdinfo *mdi,$/;"	p	signature:(struct mdinfo *mdi, const char *metadata)
domain_merge	./libmdadm/mdadm.h	/^extern void domain_merge(struct domainlist **domp, struct dev_policy *pol,$/;"	p	signature:(struct domainlist **domp, struct dev_policy *pol, const char *metadata)
domain_test	./libmdadm/mdadm.h	/^extern int domain_test(struct domainlist *dom, struct dev_policy *pol,$/;"	p	signature:(struct domainlist *dom, struct dev_policy *pol, const char *metadata)
domainlist	./libmdadm/mdadm.h	/^struct domainlist {$/;"	s
domainlist::dom	./libmdadm/mdadm.h	/^	const char *dom;$/;"	m	struct:domainlist	access:public
domainlist::next	./libmdadm/mdadm.h	/^	struct domainlist *next;$/;"	m	struct:domainlist	typeref:struct:domainlist::domainlist	access:public
domainlist_add_dev	./libmdadm/mdadm.h	/^extern void domainlist_add_dev(struct domainlist **dom, int devid,$/;"	p	signature:(struct domainlist **dom, int devid, const char *metadata)
dostat	./FilesystemManager.cpp	/^bool FilesystemManager::dostat(const string& path, struct stat *st,$/;"	f	class:FilesystemManager	signature:(const string& path, struct stat *st, int do_lstat, int quiet)
dostat	./FilesystemManager.h	/^	static bool dostat(const string& path, struct stat *st,$/;"	p	class:FilesystemManager	access:public	signature:(const string& path, struct stat *st, int do_lstat, int quiet)
dotdot	./libe2fsck/e2fsck.h	/^	ext2_ino_t		dotdot;	\/* Parent according to '..' *\/$/;"	m	struct:dir_info	access:public
dpa	./libmdadm/platform-intel.h	/^	__u16 dpa; \/* Disks Per Array supported *\/$/;"	m	struct:imsm_orom	access:public
dprintf	./libmdadm/mdadm.h	1381;"	d
dprintf	./libmdadm/mdadm.h	1384;"	d
driver_features	./libmdadm/platform-intel.h	/^	__u32 driver_features;$/;"	m	struct:imsm_orom	access:public
dump_mmp_msg	./libe2fsck/e2fsck.h	/^void dump_mmp_msg(struct mmp_struct *mmp, const char *msg);$/;"	p	signature:(struct mmp_struct *mmp, const char *msg)
dump_mmp_msg	./libmke2fs/util.h	/^extern void dump_mmp_msg(struct mmp_struct *mmp, const char *msg);$/;"	p	signature:(struct mmp_struct *mmp, const char *msg)
dup_super	./libmdadm/mdadm.h	/^extern struct supertype *dup_super(struct supertype *st);$/;"	p	signature:(struct supertype *st)
dups	./libmdadm/mdadm.h	/^		char *dups; \/* duplicates of 'value' with a partNN appended *\/$/;"	m	struct:pol_rule::rule	access:public
dx_block	./libe2fsck/e2fsck.h	/^	struct dx_dirblock_info	*dx_block; 	\/* Array of size numblocks *\/$/;"	m	struct:dx_dir_info	typeref:struct:dx_dir_info::dx_dirblock_info	access:public
dx_dir_info	./libe2fsck/e2fsck.h	/^	struct dx_dir_info *dx_dir_info;$/;"	m	struct:e2fsck_struct	typeref:struct:e2fsck_struct::dx_dir_info	access:public
dx_dir_info	./libe2fsck/e2fsck.h	/^struct dx_dir_info {$/;"	s
dx_dir_info::depth	./libe2fsck/e2fsck.h	/^	short			depth;		\/* depth of tree *\/$/;"	m	struct:dx_dir_info	access:public
dx_dir_info::dx_block	./libe2fsck/e2fsck.h	/^	struct dx_dirblock_info	*dx_block; 	\/* Array of size numblocks *\/$/;"	m	struct:dx_dir_info	typeref:struct:dx_dir_info::dx_dirblock_info	access:public
dx_dir_info::hashversion	./libe2fsck/e2fsck.h	/^	int			hashversion;$/;"	m	struct:dx_dir_info	access:public
dx_dir_info::ino	./libe2fsck/e2fsck.h	/^	ext2_ino_t		ino; 		\/* Inode number *\/$/;"	m	struct:dx_dir_info	access:public
dx_dir_info::numblocks	./libe2fsck/e2fsck.h	/^	int			numblocks;	\/* number of blocks *\/$/;"	m	struct:dx_dir_info	access:public
dx_dir_info_count	./libe2fsck/e2fsck.h	/^	int		dx_dir_info_count;$/;"	m	struct:e2fsck_struct	access:public
dx_dir_info_size	./libe2fsck/e2fsck.h	/^	int		dx_dir_info_size;$/;"	m	struct:e2fsck_struct	access:public
dx_dirblock_info	./libe2fsck/e2fsck.h	/^struct dx_dirblock_info {$/;"	s
dx_dirblock_info::flags	./libe2fsck/e2fsck.h	/^	int		flags;$/;"	m	struct:dx_dirblock_info	access:public
dx_dirblock_info::max_hash	./libe2fsck/e2fsck.h	/^	ext2_dirhash_t	max_hash;$/;"	m	struct:dx_dirblock_info	access:public
dx_dirblock_info::min_hash	./libe2fsck/e2fsck.h	/^	ext2_dirhash_t	min_hash;$/;"	m	struct:dx_dirblock_info	access:public
dx_dirblock_info::node_max_hash	./libe2fsck/e2fsck.h	/^	ext2_dirhash_t	node_max_hash;$/;"	m	struct:dx_dirblock_info	access:public
dx_dirblock_info::node_min_hash	./libe2fsck/e2fsck.h	/^	ext2_dirhash_t	node_min_hash;$/;"	m	struct:dx_dirblock_info	access:public
dx_dirblock_info::parent	./libe2fsck/e2fsck.h	/^	blk64_t		parent;$/;"	m	struct:dx_dirblock_info	access:public
dx_dirblock_info::phys	./libe2fsck/e2fsck.h	/^	blk64_t		phys;$/;"	m	struct:dx_dirblock_info	access:public
dx_dirblock_info::type	./libe2fsck/e2fsck.h	/^	int		type;$/;"	m	struct:dx_dirblock_info	access:public
e2_blkcnt_t	./libmke2fs/ext2fs.h	/^typedef __s64 __bitwise		e2_blkcnt_t;$/;"	t
e2fs_cfg	./libmke2fs/mke2fs.h	/^struct e2fs_cfg {$/;"	s
e2fs_cfg::bad_blocks_filename	./libmke2fs/mke2fs.h	/^	char bad_blocks_filename[512];$/;"	m	struct:e2fs_cfg	access:public
e2fs_cfg::blocks_per_group	./libmke2fs/mke2fs.h	/^	__u32 blocks_per_group;$/;"	m	struct:e2fs_cfg	access:public
e2fs_cfg::blocksize	./libmke2fs/mke2fs.h	/^	int blocksize;$/;"	m	struct:e2fs_cfg	access:public
e2fs_cfg::cflag	./libmke2fs/mke2fs.h	/^	int cflag;$/;"	m	struct:e2fs_cfg	access:public
e2fs_cfg::cluster_size	./libmke2fs/mke2fs.h	/^	int cluster_size;$/;"	m	struct:e2fs_cfg	access:public
e2fs_cfg::creator_os	./libmke2fs/mke2fs.h	/^	__u32 creator_os;$/;"	m	struct:e2fs_cfg	access:public
e2fs_cfg::direct_io	./libmke2fs/mke2fs.h	/^	int direct_io;	$/;"	m	struct:e2fs_cfg	access:public
e2fs_cfg::ext_opts	./libmke2fs/mke2fs.h	/^	struct extended_opt ext_opts;$/;"	m	struct:e2fs_cfg	typeref:struct:e2fs_cfg::extended_opt	access:public
e2fs_cfg::flex_bg_size	./libmke2fs/mke2fs.h	/^	unsigned long flex_bg_size;$/;"	m	struct:e2fs_cfg	access:public
e2fs_cfg::force	./libmke2fs/mke2fs.h	/^	int force;$/;"	m	struct:e2fs_cfg	access:public
e2fs_cfg::fs_features	./libmke2fs/mke2fs.h	/^	char fs_features[256];$/;"	m	struct:e2fs_cfg	access:public
e2fs_cfg::fs_type	./libmke2fs/mke2fs.h	/^	char fs_type[16];$/;"	m	struct:e2fs_cfg	access:public
e2fs_cfg::fs_uuid	./libmke2fs/mke2fs.h	/^	char fs_uuid[64];$/;"	m	struct:e2fs_cfg	access:public
e2fs_cfg::inode_ratio	./libmke2fs/mke2fs.h	/^	int inode_ratio;$/;"	m	struct:e2fs_cfg	access:public
e2fs_cfg::inode_size	./libmke2fs/mke2fs.h	/^	int inode_size;$/;"	m	struct:e2fs_cfg	access:public
e2fs_cfg::journal_size	./libmke2fs/mke2fs.h	/^	int journal_size;$/;"	m	struct:e2fs_cfg	access:public
e2fs_cfg::mount_dir	./libmke2fs/mke2fs.h	/^	char mount_dir[64];$/;"	m	struct:e2fs_cfg	access:public
e2fs_cfg::noaction	./libmke2fs/mke2fs.h	/^	int noaction;$/;"	m	struct:e2fs_cfg	access:public
e2fs_cfg::num_inodes	./libmke2fs/mke2fs.h	/^	unsigned long long num_inodes;$/;"	m	struct:e2fs_cfg	access:public
e2fs_cfg::quiet	./libmke2fs/mke2fs.h	/^	int quiet;$/;"	m	struct:e2fs_cfg	access:public
e2fs_cfg::r_opt	./libmke2fs/mke2fs.h	/^	int r_opt;$/;"	m	struct:e2fs_cfg	access:public
e2fs_cfg::reserved_ratio	./libmke2fs/mke2fs.h	/^	double reserved_ratio;$/;"	m	struct:e2fs_cfg	access:public
e2fs_cfg::super_only	./libmke2fs/mke2fs.h	/^	int super_only;$/;"	m	struct:e2fs_cfg	access:public
e2fs_cfg::usage_types	./libmke2fs/mke2fs.h	/^	char usage_types[256];$/;"	m	struct:e2fs_cfg	access:public
e2fs_cfg::verbose	./libmke2fs/mke2fs.h	/^	int verbose;$/;"	m	struct:e2fs_cfg	access:public
e2fs_cfg::volume_label	./libmke2fs/mke2fs.h	/^	char volume_label[16];$/;"	m	struct:e2fs_cfg	access:public
e2fsck	./libe2fsck/e2fsck_lib.h	/^extern int e2fsck(struct e2fsck_handle *handle);$/;"	p	signature:(struct e2fsck_handle *handle)
e2fsck_add_dir_info	./libe2fsck/e2fsck.h	/^extern void e2fsck_add_dir_info(e2fsck_t ctx, ext2_ino_t ino, ext2_ino_t parent);$/;"	p	signature:(e2fsck_t ctx, ext2_ino_t ino, ext2_ino_t parent)
e2fsck_add_dx_dir	./libe2fsck/e2fsck.h	/^extern void e2fsck_add_dx_dir(e2fsck_t ctx, ext2_ino_t ino, int num_blocks);$/;"	p	signature:(e2fsck_t ctx, ext2_ino_t ino, int num_blocks)
e2fsck_adjust_inode_count	./libe2fsck/e2fsck.h	/^extern errcode_t e2fsck_adjust_inode_count(e2fsck_t ctx, ext2_ino_t ino,$/;"	p	signature:(e2fsck_t ctx, ext2_ino_t ino, int adj)
e2fsck_allocate_block_bitmap	./libe2fsck/e2fsck.h	/^extern errcode_t e2fsck_allocate_block_bitmap(ext2_filsys fs,$/;"	p	signature:(ext2_filsys fs, const char *descr, int default_type, const char *profile_name, ext2fs_block_bitmap *ret)
e2fsck_allocate_context	./libe2fsck/e2fsck.h	/^extern errcode_t e2fsck_allocate_context(e2fsck_t *ret);$/;"	p	signature:(e2fsck_t *ret)
e2fsck_allocate_inode_bitmap	./libe2fsck/e2fsck.h	/^extern errcode_t e2fsck_allocate_inode_bitmap(ext2_filsys fs,$/;"	p	signature:(ext2_filsys fs, const char *descr, int default_type, const char *profile_name, ext2fs_inode_bitmap *ret)
e2fsck_allocate_memory	./libe2fsck/e2fsck.h	/^extern void *e2fsck_allocate_memory(e2fsck_t ctx, unsigned int size,$/;"	p	signature:(e2fsck_t ctx, unsigned int size, const char *description)
e2fsck_allocate_subcluster_bitmap	./libe2fsck/e2fsck.h	/^extern errcode_t e2fsck_allocate_subcluster_bitmap(ext2_filsys fs,$/;"	p	signature:(ext2_filsys fs, const char *descr, int default_type, const char *profile_name, ext2fs_block_bitmap *ret)
e2fsck_cb_func	./libe2fsck/e2fsck_lib.h	/^typedef void (*e2fsck_cb_func)(void *pData, int stat, int current, int total);$/;"	t
e2fsck_cfg	./libe2fsck/e2fsck_lib.h	/^struct e2fsck_cfg {$/;"	s
e2fsck_cfg::badblock_check	./libe2fsck/e2fsck_lib.h	/^	int badblock_check; \/* 1: OPT_CHECKBLOCKS 2: OPT_CHECKBLOCKS + OPT_WRITECHECK*\/$/;"	m	struct:e2fsck_cfg	access:public
e2fsck_cfg::debug	./libe2fsck/e2fsck_lib.h	/^	int debug;$/;"	m	struct:e2fsck_cfg	access:public
e2fsck_cfg::ext_journal	./libe2fsck/e2fsck_lib.h	/^	char ext_journal[256];$/;"	m	struct:e2fsck_cfg	access:public
e2fsck_cfg::ext_opts	./libe2fsck/e2fsck_lib.h	/^	struct e2fsck_extended_opt ext_opts;$/;"	m	struct:e2fsck_cfg	typeref:struct:e2fsck_cfg::e2fsck_extended_opt	access:public
e2fsck_cfg::flush	./libe2fsck/e2fsck_lib.h	/^	int flush;$/;"	m	struct:e2fsck_cfg	access:public
e2fsck_cfg::force	./libe2fsck/e2fsck_lib.h	/^	int force;$/;"	m	struct:e2fsck_cfg	access:public
e2fsck_cfg::optimize_dir	./libe2fsck/e2fsck_lib.h	/^	int optimize_dir;$/;"	m	struct:e2fsck_cfg	access:public
e2fsck_cfg::progress_fd	./libe2fsck/e2fsck_lib.h	/^	int progress_fd;$/;"	m	struct:e2fsck_cfg	access:public
e2fsck_cfg::specified_superblock	./libe2fsck/e2fsck_lib.h	/^	int specified_superblock;$/;"	m	struct:e2fsck_cfg	access:public
e2fsck_cfg::superblock_size	./libe2fsck/e2fsck_lib.h	/^	int superblock_size;$/;"	m	struct:e2fsck_cfg	access:public
e2fsck_cfg::timing_statistics	./libe2fsck/e2fsck_lib.h	/^	int timing_statistics; \/* 1: OPT_TIME 2: OPT_TIME2 *\/$/;"	m	struct:e2fsck_cfg	access:public
e2fsck_cfg::use_ext_journal	./libe2fsck/e2fsck_lib.h	/^	int use_ext_journal;$/;"	m	struct:e2fsck_cfg	access:public
e2fsck_cfg::use_superblock	./libe2fsck/e2fsck_lib.h	/^	blk64_t use_superblock;$/;"	m	struct:e2fsck_cfg	access:public
e2fsck_cfg::verbose	./libe2fsck/e2fsck_lib.h	/^	int verbose;$/;"	m	struct:e2fsck_cfg	access:public
e2fsck_check_ext3_journal	./libe2fsck/e2fsck.h	/^extern errcode_t e2fsck_check_ext3_journal(e2fsck_t ctx);$/;"	p	signature:(e2fsck_t ctx)
e2fsck_clear_inode	./libe2fsck/e2fsck.h	/^extern void e2fsck_clear_inode(e2fsck_t ctx, ext2_ino_t ino,$/;"	p	signature:(e2fsck_t ctx, ext2_ino_t ino, struct ext2_inode *inode, int restart_flag, const char *source)
e2fsck_clear_progbar	./libe2fsck/e2fsck.h	/^extern void e2fsck_clear_progbar(e2fsck_t ctx);$/;"	p	signature:(e2fsck_t ctx)
e2fsck_dir_info_get_dotdot	./libe2fsck/e2fsck.h	/^extern int e2fsck_dir_info_get_dotdot(e2fsck_t ctx, ext2_ino_t ino,$/;"	p	signature:(e2fsck_t ctx, ext2_ino_t ino, ext2_ino_t *dotdot)
e2fsck_dir_info_get_parent	./libe2fsck/e2fsck.h	/^extern int e2fsck_dir_info_get_parent(e2fsck_t ctx, ext2_ino_t ino,$/;"	p	signature:(e2fsck_t ctx, ext2_ino_t ino, ext2_ino_t *parent)
e2fsck_dir_info_iter	./libe2fsck/e2fsck.h	/^extern struct dir_info *e2fsck_dir_info_iter(e2fsck_t ctx,$/;"	p	signature:(e2fsck_t ctx, struct dir_info_iter *)
e2fsck_dir_info_iter_begin	./libe2fsck/e2fsck.h	/^extern struct dir_info_iter *e2fsck_dir_info_iter_begin(e2fsck_t ctx);$/;"	p	signature:(e2fsck_t ctx)
e2fsck_dir_info_iter_end	./libe2fsck/e2fsck.h	/^extern void e2fsck_dir_info_iter_end(e2fsck_t ctx, struct dir_info_iter *);$/;"	p	signature:(e2fsck_t ctx, struct dir_info_iter *)
e2fsck_dir_info_set_dotdot	./libe2fsck/e2fsck.h	/^extern int e2fsck_dir_info_set_dotdot(e2fsck_t ctx, ext2_ino_t ino,$/;"	p	signature:(e2fsck_t ctx, ext2_ino_t ino, ext2_ino_t dotdot)
e2fsck_dir_info_set_parent	./libe2fsck/e2fsck.h	/^extern int e2fsck_dir_info_set_parent(e2fsck_t ctx, ext2_ino_t ino,$/;"	p	signature:(e2fsck_t ctx, ext2_ino_t ino, ext2_ino_t parent)
e2fsck_dx_dir_info_iter	./libe2fsck/e2fsck.h	/^extern struct dx_dir_info *e2fsck_dx_dir_info_iter(e2fsck_t ctx, int *control);$/;"	p	signature:(e2fsck_t ctx, int *control)
e2fsck_expand_directory	./libe2fsck/e2fsck.h	/^extern errcode_t e2fsck_expand_directory(e2fsck_t ctx, ext2_ino_t dir,$/;"	p	signature:(e2fsck_t ctx, ext2_ino_t dir, int num, int gauranteed_size)
e2fsck_extended_opt	./libe2fsck/e2fsck_lib.h	/^struct e2fsck_extended_opt {$/;"	s
e2fsck_extended_opt::discard	./libe2fsck/e2fsck_lib.h	/^	int discard;$/;"	m	struct:e2fsck_extended_opt	access:public
e2fsck_extended_opt::fragcheck	./libe2fsck/e2fsck_lib.h	/^	int fragcheck;$/;"	m	struct:e2fsck_extended_opt	access:public
e2fsck_extended_opt::journal_only	./libe2fsck/e2fsck_lib.h	/^	int journal_only;$/;"	m	struct:e2fsck_extended_opt	access:public
e2fsck_extended_opt::nodiscard	./libe2fsck/e2fsck_lib.h	/^	int nodiscard;$/;"	m	struct:e2fsck_extended_opt	access:public
e2fsck_fix_ext3_journal_hint	./libe2fsck/e2fsck.h	/^extern int e2fsck_fix_ext3_journal_hint(e2fsck_t ctx);$/;"	p	signature:(e2fsck_t ctx)
e2fsck_free_context	./libe2fsck/e2fsck.h	/^extern void e2fsck_free_context(e2fsck_t ctx);$/;"	p	signature:(e2fsck_t ctx)
e2fsck_free_dir_info	./libe2fsck/e2fsck.h	/^extern void e2fsck_free_dir_info(e2fsck_t ctx);$/;"	p	signature:(e2fsck_t ctx)
e2fsck_free_dx_dir_info	./libe2fsck/e2fsck.h	/^extern void e2fsck_free_dx_dir_info(e2fsck_t ctx);$/;"	p	signature:(e2fsck_t ctx)
e2fsck_get_dx_dir_info	./libe2fsck/e2fsck.h	/^extern struct dx_dir_info *e2fsck_get_dx_dir_info(e2fsck_t ctx, ext2_ino_t ino);$/;"	p	signature:(e2fsck_t ctx, ext2_ino_t ino)
e2fsck_get_lost_and_found	./libe2fsck/e2fsck.h	/^extern ext2_ino_t e2fsck_get_lost_and_found(e2fsck_t ctx, int fix);$/;"	p	signature:(e2fsck_t ctx, int fix)
e2fsck_get_num_dirinfo	./libe2fsck/e2fsck.h	/^extern int e2fsck_get_num_dirinfo(e2fsck_t ctx);$/;"	p	signature:(e2fsck_t ctx)
e2fsck_get_num_dx_dirinfo	./libe2fsck/e2fsck.h	/^extern int e2fsck_get_num_dx_dirinfo(e2fsck_t ctx);$/;"	p	signature:(e2fsck_t ctx)
e2fsck_handle	./libe2fsck/e2fsck_lib.h	/^struct e2fsck_handle {$/;"	s
e2fsck_handle::buf	./libe2fsck/e2fsck_lib.h	/^	char *buf;$/;"	m	struct:e2fsck_handle	access:public
e2fsck_handle::cb_func	./libe2fsck/e2fsck_lib.h	/^	e2fsck_cb_func cb_func;$/;"	m	struct:e2fsck_handle	access:public
e2fsck_handle::cfg	./libe2fsck/e2fsck_lib.h	/^	struct e2fsck_cfg cfg;$/;"	m	struct:e2fsck_handle	typeref:struct:e2fsck_handle::e2fsck_cfg	access:public
e2fsck_handle::device_name	./libe2fsck/e2fsck_lib.h	/^	char device_name[32];$/;"	m	struct:e2fsck_handle	access:public
e2fsck_handle::pData	./libe2fsck/e2fsck_lib.h	/^	void *pData;$/;"	m	struct:e2fsck_handle	access:public
e2fsck_intercept_block_allocations	./libe2fsck/e2fsck.h	/^extern void e2fsck_intercept_block_allocations(e2fsck_t ctx);$/;"	p	signature:(e2fsck_t ctx)
e2fsck_mmp_update	./libe2fsck/e2fsck.h	/^errcode_t e2fsck_mmp_update(ext2_filsys fs);$/;"	p	signature:(ext2_filsys fs)
e2fsck_move_ext3_journal	./libe2fsck/e2fsck.h	/^extern void e2fsck_move_ext3_journal(e2fsck_t ctx);$/;"	p	signature:(e2fsck_t ctx)
e2fsck_pass1	./libe2fsck/e2fsck.h	/^extern void e2fsck_pass1(e2fsck_t ctx);$/;"	p	signature:(e2fsck_t ctx)
e2fsck_pass1_check_device_inode	./libe2fsck/e2fsck.h	/^extern int e2fsck_pass1_check_device_inode(ext2_filsys fs,$/;"	p	signature:(ext2_filsys fs, struct ext2_inode *inode)
e2fsck_pass1_check_symlink	./libe2fsck/e2fsck.h	/^extern int e2fsck_pass1_check_symlink(ext2_filsys fs, ext2_ino_t ino,$/;"	p	signature:(ext2_filsys fs, ext2_ino_t ino, struct ext2_inode *inode, char *buf)
e2fsck_pass1_dupblocks	./libe2fsck/e2fsck.h	/^extern void e2fsck_pass1_dupblocks(e2fsck_t ctx, char *block_buf);$/;"	p	signature:(e2fsck_t ctx, char *block_buf)
e2fsck_pass2	./libe2fsck/e2fsck.h	/^extern void e2fsck_pass2(e2fsck_t ctx);$/;"	p	signature:(e2fsck_t ctx)
e2fsck_pass3	./libe2fsck/e2fsck.h	/^extern void e2fsck_pass3(e2fsck_t ctx);$/;"	p	signature:(e2fsck_t ctx)
e2fsck_pass4	./libe2fsck/e2fsck.h	/^extern void e2fsck_pass4(e2fsck_t ctx);$/;"	p	signature:(e2fsck_t ctx)
e2fsck_pass5	./libe2fsck/e2fsck.h	/^extern void e2fsck_pass5(e2fsck_t ctx);$/;"	p	signature:(e2fsck_t ctx)
e2fsck_problem	./libe2fsck/problemP.h	/^struct e2fsck_problem {$/;"	s
e2fsck_problem::count	./libe2fsck/problemP.h	/^	int		count;$/;"	m	struct:e2fsck_problem	access:public
e2fsck_problem::e2p_code	./libe2fsck/problemP.h	/^	problem_t	e2p_code;$/;"	m	struct:e2fsck_problem	access:public
e2fsck_problem::e2p_description	./libe2fsck/problemP.h	/^	const char *	e2p_description;$/;"	m	struct:e2fsck_problem	access:public
e2fsck_problem::flags	./libe2fsck/problemP.h	/^	int		flags;$/;"	m	struct:e2fsck_problem	access:public
e2fsck_problem::max_count	./libe2fsck/problemP.h	/^	int		max_count;$/;"	m	struct:e2fsck_problem	access:public
e2fsck_problem::prompt	./libe2fsck/problemP.h	/^	char		prompt;$/;"	m	struct:e2fsck_problem	access:public
e2fsck_problem::second_code	./libe2fsck/problemP.h	/^	problem_t	second_code;$/;"	m	struct:e2fsck_problem	access:public
e2fsck_process_bad_inode	./libe2fsck/e2fsck.h	/^extern int e2fsck_process_bad_inode(e2fsck_t ctx, ext2_ino_t dir,$/;"	p	signature:(e2fsck_t ctx, ext2_ino_t dir, ext2_ino_t ino, char *buf)
e2fsck_read_bitmaps	./libe2fsck/e2fsck.h	/^extern void e2fsck_read_bitmaps(e2fsck_t ctx);$/;"	p	signature:(e2fsck_t ctx)
e2fsck_read_inode	./libe2fsck/e2fsck.h	/^extern void e2fsck_read_inode(e2fsck_t ctx, unsigned long ino,$/;"	p	signature:(e2fsck_t ctx, unsigned long ino, struct ext2_inode * inode, const char * proc)
e2fsck_read_inode_full	./libe2fsck/e2fsck.h	/^extern void e2fsck_read_inode_full(e2fsck_t ctx, unsigned long ino,$/;"	p	signature:(e2fsck_t ctx, unsigned long ino, struct ext2_inode *inode, const int bufsize, const char *proc)
e2fsck_reconnect_file	./libe2fsck/e2fsck.h	/^extern int e2fsck_reconnect_file(e2fsck_t ctx, ext2_ino_t inode);$/;"	p	signature:(e2fsck_t ctx, ext2_ino_t inode)
e2fsck_rehash_dir	./libe2fsck/e2fsck.h	/^errcode_t e2fsck_rehash_dir(e2fsck_t ctx, ext2_ino_t ino);$/;"	p	signature:(e2fsck_t ctx, ext2_ino_t ino)
e2fsck_rehash_directories	./libe2fsck/e2fsck.h	/^void e2fsck_rehash_directories(e2fsck_t ctx);$/;"	p	signature:(e2fsck_t ctx)
e2fsck_reset_context	./libe2fsck/e2fsck.h	/^extern errcode_t e2fsck_reset_context(e2fsck_t ctx);$/;"	p	signature:(e2fsck_t ctx)
e2fsck_run	./libe2fsck/e2fsck.h	/^extern int e2fsck_run(e2fsck_t ctx);$/;"	p	signature:(e2fsck_t ctx)
e2fsck_run_ext3_journal	./libe2fsck/e2fsck.h	/^extern errcode_t e2fsck_run_ext3_journal(e2fsck_t ctx);$/;"	p	signature:(e2fsck_t ctx)
e2fsck_set_bitmap_type	./libe2fsck/e2fsck.h	/^extern void e2fsck_set_bitmap_type(ext2_filsys fs,$/;"	p	signature:(ext2_filsys fs, unsigned int default_type, const char *profile_name, unsigned int *old_type)
e2fsck_setup_tdb_icount	./libe2fsck/e2fsck.h	/^extern void e2fsck_setup_tdb_icount(e2fsck_t ctx, int flags,$/;"	p	signature:(e2fsck_t ctx, int flags, ext2_icount_t *ret)
e2fsck_simple_progress	./libe2fsck/e2fsck.h	/^extern int e2fsck_simple_progress(e2fsck_t ctx, const char *label,$/;"	p	signature:(e2fsck_t ctx, const char *label, float percent, unsigned int dpynum)
e2fsck_strnlen	./libe2fsck/e2fsck.h	/^extern int e2fsck_strnlen(const char * s, int count);$/;"	p	signature:(const char * s, int count)
e2fsck_struct	./libe2fsck/e2fsck.h	/^struct e2fsck_struct {$/;"	s
e2fsck_struct::abort_code	./libe2fsck/e2fsck.h	/^	unsigned long abort_code;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::abort_loc	./libe2fsck/e2fsck.h	/^	jmp_buf	abort_loc;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::bad_lost_and_found	./libe2fsck/e2fsck.h	/^	int bad_lost_and_found;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::blkid	./libe2fsck/e2fsck.h	/^	blkid_cache blkid;	\/* blkid cache *\/$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::block_buf	./libe2fsck/e2fsck.h	/^	char *block_buf;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::block_dup_map	./libe2fsck/e2fsck.h	/^	ext2fs_block_bitmap block_dup_map; \/* Blks referenced more than once *\/$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::block_ea_map	./libe2fsck/e2fsck.h	/^	ext2fs_block_bitmap block_ea_map; \/* Blocks which are used by EA's *\/$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::block_found_map	./libe2fsck/e2fsck.h	/^	ext2fs_block_bitmap block_found_map; \/* Blocks which are in use *\/$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::blocks_per_page	./libe2fsck/e2fsck.h	/^	int blocks_per_page;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::blocksize	./libe2fsck/e2fsck.h	/^	int	blocksize;	\/* blocksize *\/$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::device_name	./libe2fsck/e2fsck.h	/^	char *device_name;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::dir_info	./libe2fsck/e2fsck.h	/^	struct dir_info_db	*dir_info;$/;"	m	struct:e2fsck_struct	typeref:struct:e2fsck_struct::dir_info_db	access:public
e2fsck_struct::dirs_to_hash	./libe2fsck/e2fsck.h	/^	ext2_u32_list	dirs_to_hash;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::dx_dir_info	./libe2fsck/e2fsck.h	/^	struct dx_dir_info *dx_dir_info;$/;"	m	struct:e2fsck_struct	typeref:struct:e2fsck_struct::dx_dir_info	access:public
e2fsck_struct::dx_dir_info_count	./libe2fsck/e2fsck.h	/^	int		dx_dir_info_count;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::dx_dir_info_size	./libe2fsck/e2fsck.h	/^	int		dx_dir_info_size;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::ext_attr_ver	./libe2fsck/e2fsck.h	/^	int ext_attr_ver;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::extent_depth_count	./libe2fsck/e2fsck.h	/^	__u32 extent_depth_count[MAX_EXTENT_DEPTH_COUNT];$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::filesystem_name	./libe2fsck/e2fsck.h	/^	char *filesystem_name;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::flags	./libe2fsck/e2fsck.h	/^	int	flags;		\/* E2fsck internal flags *\/$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::free_blocks	./libe2fsck/e2fsck.h	/^	blk64_t free_blocks;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::free_inodes	./libe2fsck/e2fsck.h	/^	ino_t	free_inodes;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::fs	./libe2fsck/e2fsck.h	/^	ext2_filsys fs;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::fs_badblocks_count	./libe2fsck/e2fsck.h	/^	__u32 fs_badblocks_count;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::fs_blockdev_count	./libe2fsck/e2fsck.h	/^	__u32 fs_blockdev_count;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::fs_chardev_count	./libe2fsck/e2fsck.h	/^	__u32 fs_chardev_count;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::fs_dind_count	./libe2fsck/e2fsck.h	/^	__u32 fs_dind_count;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::fs_directory_count	./libe2fsck/e2fsck.h	/^	__u32 fs_directory_count;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::fs_ext_attr_blocks	./libe2fsck/e2fsck.h	/^	__u32 fs_ext_attr_blocks;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::fs_ext_attr_inodes	./libe2fsck/e2fsck.h	/^	__u32 fs_ext_attr_inodes;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::fs_fast_symlinks_count	./libe2fsck/e2fsck.h	/^	__u32 fs_fast_symlinks_count;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::fs_fifo_count	./libe2fsck/e2fsck.h	/^	__u32 fs_fifo_count;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::fs_fragmented	./libe2fsck/e2fsck.h	/^	__u32 fs_fragmented;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::fs_fragmented_dir	./libe2fsck/e2fsck.h	/^	__u32 fs_fragmented_dir;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::fs_ind_count	./libe2fsck/e2fsck.h	/^	__u32 fs_ind_count;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::fs_links_count	./libe2fsck/e2fsck.h	/^	__u32 fs_links_count;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::fs_regular_count	./libe2fsck/e2fsck.h	/^	__u32 fs_regular_count;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::fs_sockets_count	./libe2fsck/e2fsck.h	/^	__u32 fs_sockets_count;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::fs_symlinks_count	./libe2fsck/e2fsck.h	/^	__u32 fs_symlinks_count;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::fs_tind_count	./libe2fsck/e2fsck.h	/^	__u32 fs_tind_count;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::fs_total_count	./libe2fsck/e2fsck.h	/^	__u32 fs_total_count;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::global_rtrack	./libe2fsck/e2fsck.h	/^	struct resource_track	global_rtrack;$/;"	m	struct:e2fsck_struct	typeref:struct:e2fsck_struct::resource_track	access:public
e2fsck_struct::handle	./libe2fsck/e2fsck.h	/^	e2fsck_handle *handle;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::htree_slack_percentage	./libe2fsck/e2fsck.h	/^	unsigned int htree_slack_percentage;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::inode_bad_map	./libe2fsck/e2fsck.h	/^	ext2fs_inode_bitmap inode_bad_map; \/* Inodes which are bad somehow *\/$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::inode_bb_map	./libe2fsck/e2fsck.h	/^	ext2fs_inode_bitmap inode_bb_map; \/* Inodes which are in bad blocks *\/$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::inode_buffer_blocks	./libe2fsck/e2fsck.h	/^	int inode_buffer_blocks;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::inode_count	./libe2fsck/e2fsck.h	/^	ext2_icount_t	inode_count;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::inode_dir_map	./libe2fsck/e2fsck.h	/^	ext2fs_inode_bitmap inode_dir_map; \/* Inodes which are directories *\/$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::inode_imagic_map	./libe2fsck/e2fsck.h	/^	ext2fs_inode_bitmap inode_imagic_map; \/* AFS inodes *\/$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::inode_link_info	./libe2fsck/e2fsck.h	/^	ext2_icount_t inode_link_info;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::inode_reg_map	./libe2fsck/e2fsck.h	/^	ext2fs_inode_bitmap inode_reg_map; \/* Inodes which are regular files*\/$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::inode_used_map	./libe2fsck/e2fsck.h	/^	ext2fs_inode_bitmap inode_used_map; \/* Inodes which are in use *\/$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::interactive	./libe2fsck/e2fsck.h	/^	int interactive;	\/* Are we connected directly to a tty? *\/$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::invalid_bitmaps	./libe2fsck/e2fsck.h	/^	int invalid_bitmaps;	\/* There are invalid bitmaps\/itable *\/$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::invalid_block_bitmap_flag	./libe2fsck/e2fsck.h	/^	int *invalid_block_bitmap_flag;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::invalid_inode_bitmap_flag	./libe2fsck/e2fsck.h	/^	int *invalid_inode_bitmap_flag;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::invalid_inode_table_flag	./libe2fsck/e2fsck.h	/^	int *invalid_inode_table_flag;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::io_options	./libe2fsck/e2fsck.h	/^	char *io_options;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::journal_io	./libe2fsck/e2fsck.h	/^	io_channel	journal_io;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::journal_name	./libe2fsck/e2fsck.h	/^	char	*journal_name;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::large_files	./libe2fsck/e2fsck.h	/^	__u32 large_files;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::lnf_repair_block	./libe2fsck/e2fsck.h	/^	blk64_t root_repair_block, lnf_repair_block;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::log_fn	./libe2fsck/e2fsck.h	/^	char	*log_fn;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::logf	./libe2fsck/e2fsck.h	/^	FILE	*logf;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::lost_and_found	./libe2fsck/e2fsck.h	/^	ext2_ino_t lost_and_found;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::mount_flags	./libe2fsck/e2fsck.h	/^	int	mount_flags;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::now	./libe2fsck/e2fsck.h	/^	time_t now;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::num_blocks	./libe2fsck/e2fsck.h	/^	blk64_t	num_blocks;	\/* Total number of blocks *\/$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::openfs_flags	./libe2fsck/e2fsck.h	/^	int	openfs_flags;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::options	./libe2fsck/e2fsck.h	/^	int	options;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::priv_data	./libe2fsck/e2fsck.h	/^	void *priv_data;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::process_inode_size	./libe2fsck/e2fsck.h	/^	int process_inode_size;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::profile	./libe2fsck/e2fsck.h	/^	profile_t	profile;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::program_name	./libe2fsck/e2fsck.h	/^	const char *program_name;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::progress	./libe2fsck/e2fsck.h	/^	int (*progress)(e2fsck_t ctx, int pass, unsigned long cur,$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::progress_fd	./libe2fsck/e2fsck.h	/^	int progress_fd;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::progress_last_percent	./libe2fsck/e2fsck.h	/^	int progress_last_percent;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::progress_last_time	./libe2fsck/e2fsck.h	/^	unsigned int progress_last_time;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::progress_pos	./libe2fsck/e2fsck.h	/^	int progress_pos;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::refcount	./libe2fsck/e2fsck.h	/^	ext2_refcount_t	refcount;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::refcount_extra	./libe2fsck/e2fsck.h	/^	ext2_refcount_t refcount_extra;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::root_repair_block	./libe2fsck/e2fsck.h	/^	blk64_t root_repair_block, lnf_repair_block;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::start_meta	./libe2fsck/e2fsck.h	/^	char start_meta[2], stop_meta[2];$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::stashed_ino	./libe2fsck/e2fsck.h	/^	ext2_ino_t stashed_ino;$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::stashed_inode	./libe2fsck/e2fsck.h	/^	struct ext2_inode *stashed_inode;$/;"	m	struct:e2fsck_struct	typeref:struct:e2fsck_struct::ext2_inode	access:public
e2fsck_struct::stop_meta	./libe2fsck/e2fsck.h	/^	char start_meta[2], stop_meta[2];$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::superblock	./libe2fsck/e2fsck.h	/^	blk64_t	superblock;	\/* sb used to open fs *\/$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::time_fudge	./libe2fsck/e2fsck.h	/^	time_t time_fudge;	\/* For working around buggy init scripts *\/$/;"	m	struct:e2fsck_struct	access:public
e2fsck_struct::use_superblock	./libe2fsck/e2fsck.h	/^	blk64_t	use_superblock;	\/* sb requested by user *\/$/;"	m	struct:e2fsck_struct	access:public
e2fsck_t	./libe2fsck/e2fsck.h	/^typedef struct e2fsck_struct *e2fsck_t;$/;"	t	typeref:struct:e2fsck_struct
e2fsck_use_inode_shortcuts	./libe2fsck/e2fsck.h	/^extern void e2fsck_use_inode_shortcuts(e2fsck_t ctx, int use_shortcuts);$/;"	p	signature:(e2fsck_t ctx, int use_shortcuts)
e2fsck_write_bitmaps	./libe2fsck/e2fsck.h	/^extern void e2fsck_write_bitmaps(e2fsck_t ctx);$/;"	p	signature:(e2fsck_t ctx)
e2fsck_write_inode	./libe2fsck/e2fsck.h	/^extern void e2fsck_write_inode(e2fsck_t ctx, unsigned long ino,$/;"	p	signature:(e2fsck_t ctx, unsigned long ino, struct ext2_inode * inode, const char * proc)
e2fsck_write_inode_full	./libe2fsck/e2fsck.h	/^extern void e2fsck_write_inode_full(e2fsck_t ctx, unsigned long ino,$/;"	p	signature:(e2fsck_t ctx, unsigned long ino, struct ext2_inode * inode, int bufsize, const char *proc)
e2fsck_zero_blocks	./libe2fsck/e2fsck.h	/^extern errcode_t e2fsck_zero_blocks(ext2_filsys fs, blk_t blk, int num,$/;"	p	signature:(ext2_filsys fs, blk_t blk, int num, blk_t *ret_blk, int *ret_count)
e2p_code	./libe2fsck/problemP.h	/^	problem_t	e2p_code;$/;"	m	struct:e2fsck_problem	access:public
e2p_description	./libe2fsck/problemP.h	/^	const char *	e2p_description;$/;"	m	struct:e2fsck_problem	access:public
eCBReason	./RAIDManager.h	/^enum eCBReason {$/;"	g
eDiskType	./RAIDManager.h	/^enum eDiskType {$/;"	g
eTC_STOP	./RAIDManager.h	/^		eTC_STOP,$/;"	e	enum:RAIDManager::__anon13
e_flags	./libmke2fs/ext2fs.h	/^	__u32	e_flags;	\/* extent flags *\/$/;"	m	struct:ext2fs_extent	access:public
e_lblk	./libmke2fs/ext2fs.h	/^	blk64_t	e_lblk;		\/* first logical block extent covers *\/$/;"	m	struct:ext2fs_extent	access:public
e_len	./libmke2fs/ext2fs.h	/^	__u32	e_len;		\/* number of blocks covered by extent *\/$/;"	m	struct:ext2fs_extent	access:public
e_pblk	./libmke2fs/ext2fs.h	/^	blk64_t	e_pblk;		\/* first physical block *\/$/;"	m	struct:ext2fs_extent	access:public
ea_refcount_create	./libe2fsck/e2fsck.h	/^extern errcode_t ea_refcount_create(int size, ext2_refcount_t *ret);$/;"	p	signature:(int size, ext2_refcount_t *ret)
ea_refcount_decrement	./libe2fsck/e2fsck.h	/^extern errcode_t ea_refcount_decrement(ext2_refcount_t refcount,$/;"	p	signature:(ext2_refcount_t refcount, blk64_t blk, int *ret)
ea_refcount_fetch	./libe2fsck/e2fsck.h	/^extern errcode_t ea_refcount_fetch(ext2_refcount_t refcount, blk64_t blk, int *ret);$/;"	p	signature:(ext2_refcount_t refcount, blk64_t blk, int *ret)
ea_refcount_free	./libe2fsck/e2fsck.h	/^extern void ea_refcount_free(ext2_refcount_t refcount);$/;"	p	signature:(ext2_refcount_t refcount)
ea_refcount_increment	./libe2fsck/e2fsck.h	/^extern errcode_t ea_refcount_increment(ext2_refcount_t refcount,$/;"	p	signature:(ext2_refcount_t refcount, blk64_t blk, int *ret)
ea_refcount_intr_begin	./libe2fsck/e2fsck.h	/^extern void ea_refcount_intr_begin(ext2_refcount_t refcount);$/;"	p	signature:(ext2_refcount_t refcount)
ea_refcount_intr_next	./libe2fsck/e2fsck.h	/^extern blk64_t ea_refcount_intr_next(ext2_refcount_t refcount, int *ret);$/;"	p	signature:(ext2_refcount_t refcount, int *ret)
ea_refcount_store	./libe2fsck/e2fsck.h	/^extern errcode_t ea_refcount_store(ext2_refcount_t refcount,$/;"	p	signature:(ext2_refcount_t refcount, blk64_t blk, int count)
efi_guid	./libmdadm/platform-intel.h	/^struct efi_guid {$/;"	s
efi_guid::b	./libmdadm/platform-intel.h	/^	__u8 b[16];$/;"	m	struct:efi_guid	access:public
ehandler_init	./libe2fsck/e2fsck.h	/^extern void ehandler_init(io_channel channel);$/;"	p	signature:(io_channel channel)
ehandler_operation	./libe2fsck/e2fsck.h	/^extern const char *ehandler_operation(const char *op);$/;"	p	signature:(const char *op)
enable_fds	./libmdadm/mdadm.h	/^extern void enable_fds(int devices);$/;"	p	signature:(int devices)
end_message	./libe2fsck/problemP.h	/^	problem_t	end_message;$/;"	m	struct:latch_descr	access:public
end_problem_latch	./libe2fsck/problem.h	/^int end_problem_latch(e2fsck_t ctx, int mask);$/;"	p	signature:(e2fsck_t ctx, int mask)
ending_lba	./libmdadm/part.h	/^	__u64 ending_lba;$/;"	m	struct:GPT_part_entry	access:public
enough	./libmdadm/mdadm.h	/^extern int enough(int level, int raid_disks, int layout, int clean,$/;"	p	signature:(int level, int raid_disks, int layout, int clean, char *avail)
enough_fd	./libmdadm/mdadm.h	/^extern int enough_fd(int fd);$/;"	p	signature:(int fd)
errcode	./libe2fsck/problem.h	/^	errcode_t	errcode;$/;"	m	struct:problem_context	access:public
errcode	./libmke2fs/ext2fsP.h	/^	errcode_t	errcode;$/;"	m	struct:dir_context	access:public
errors	./libmdadm/mdadm.h	/^	int			errors;$/;"	m	struct:mdinfo	access:public
events	./libmdadm/bitmap.h	/^	__u64 events;       \/* 24  event counter for the bitmap (1)*\/$/;"	m	struct:bitmap_super_s	access:public
events	./libmdadm/mdadm.h	/^	__u64			events;$/;"	m	struct:mdinfo	access:public
events_cleared	./libmdadm/bitmap.h	/^	__u64	events_cleared;$/;"	m	struct:bitmap	access:public
events_cleared	./libmdadm/bitmap.h	/^	__u64 events_cleared;\/*32  event counter when last bit cleared (2) *\/$/;"	m	struct:bitmap_super_s	access:public
events_hi	./libmdadm/md_p.h	/^	__u32 events_hi;	\/*  7 high-order of superblock update count   *\/$/;"	m	struct:mdp_superblock_s	access:public
events_hi	./libmdadm/md_p.h	/^	__u32 events_hi;	\/*  8 high-order of superblock update count   *\/$/;"	m	struct:mdp_superblock_s	access:public
events_lo	./libmdadm/md_p.h	/^	__u32 events_lo;	\/*  7 low-order of superblock update count    *\/$/;"	m	struct:mdp_superblock_s	access:public
events_lo	./libmdadm/md_p.h	/^	__u32 events_lo;	\/*  8 low-order of superblock update count    *\/$/;"	m	struct:mdp_superblock_s	access:public
examine_badblocks	./libmdadm/mdadm.h	/^	int (*examine_badblocks)(struct supertype *st, int fd, char *devname);$/;"	m	struct:superswitch	access:public
examine_result	./libmdadm/mdadm_other.h	/^struct examine_result {$/;"	s
examine_result::arrayUUID	./libmdadm/mdadm_other.h	/^	int arrayUUID[4];$/;"	m	struct:examine_result	access:public
examine_result::bHasBadblock	./libmdadm/mdadm_other.h	/^	unsigned bHasBadblock;$/;"	m	struct:examine_result	access:public
examine_result::bIsValid	./libmdadm/mdadm_other.h	/^	unsigned bIsValid;$/;"	m	struct:examine_result	access:public
examine_result::bSBChkSumError	./libmdadm/mdadm_other.h	/^	unsigned bSBChkSumError;$/;"	m	struct:examine_result	access:public
examine_result::cState	./libmdadm/mdadm_other.h	/^	char cState; \/* Active: 'A', Spare: 'S', Replacement: 'R' *\/$/;"	m	struct:examine_result	access:public
examine_result::next	./libmdadm/mdadm_other.h	/^	struct examine_result* next;$/;"	m	struct:examine_result	typeref:struct:examine_result::examine_result	access:public
examine_result::strDevName	./libmdadm/mdadm_other.h	/^	char strDevName[32];$/;"	m	struct:examine_result	access:public
examine_result::uChkSum	./libmdadm/mdadm_other.h	/^	unsigned uChkSum;$/;"	m	struct:examine_result	access:public
examine_result::uDevRole	./libmdadm/mdadm_other.h	/^	unsigned uDevRole;$/;"	m	struct:examine_result	access:public
examine_result::uExpectedChkSum	./libmdadm/mdadm_other.h	/^	unsigned uExpectedChkSum;$/;"	m	struct:examine_result	access:public
examine_result::uRaidDiskNum	./libmdadm/mdadm_other.h	/^	unsigned uRaidDiskNum;$/;"	m	struct:examine_result	access:public
examine_result::uRaidLevel	./libmdadm/mdadm_other.h	/^	unsigned uRaidLevel;$/;"	m	struct:examine_result	access:public
examine_super	./libmdadm/mdadm.h	/^	void (*examine_super)(struct supertype *st, char *homehost);$/;"	m	struct:superswitch	access:public
examine_super_result	./libmdadm/mdadm.h	/^	void (*examine_super_result)(struct supertype *st, char *homehost, struct examine_result *resultlist);$/;"	m	struct:superswitch	access:public
experimental	./libmdadm/mdadm.h	/^extern int experimental(void);$/;"	p	signature:(void)
export_detail_platform	./libmdadm/mdadm.h	/^	int (*export_detail_platform)(int verbose, char *controller_path);$/;"	m	struct:superswitch	access:public
export_detail_super	./libmdadm/mdadm.h	/^	void (*export_detail_super)(struct supertype *st);$/;"	m	struct:superswitch	access:public
export_examine_super	./libmdadm/mdadm.h	/^	void (*export_examine_super)(struct supertype *st);$/;"	m	struct:superswitch	access:public
ext2_badblocks_iterate	./libmke2fs/ext2fs.h	/^typedef struct ext2_struct_u32_iterate *ext2_badblocks_iterate;$/;"	t	typeref:struct:ext2_struct_u32_iterate
ext2_badblocks_list	./libmke2fs/ext2fs.h	/^typedef struct ext2_struct_u32_list *ext2_badblocks_list;$/;"	t	typeref:struct:ext2_struct_u32_list
ext2_db_entry	./libmke2fs/ext2fs.h	/^struct ext2_db_entry {$/;"	s
ext2_db_entry2	./libmke2fs/ext2fs.h	/^struct ext2_db_entry2 {$/;"	s
ext2_db_entry2::blk	./libmke2fs/ext2fs.h	/^	blk64_t	blk;$/;"	m	struct:ext2_db_entry2	access:public
ext2_db_entry2::blockcnt	./libmke2fs/ext2fs.h	/^	e2_blkcnt_t	blockcnt;$/;"	m	struct:ext2_db_entry2	access:public
ext2_db_entry2::ino	./libmke2fs/ext2fs.h	/^	ext2_ino_t	ino;$/;"	m	struct:ext2_db_entry2	access:public
ext2_db_entry::blk	./libmke2fs/ext2fs.h	/^	blk_t	blk;$/;"	m	struct:ext2_db_entry	access:public
ext2_db_entry::blockcnt	./libmke2fs/ext2fs.h	/^	int	blockcnt;$/;"	m	struct:ext2_db_entry	access:public
ext2_db_entry::ino	./libmke2fs/ext2fs.h	/^	ext2_ino_t	ino;$/;"	m	struct:ext2_db_entry	access:public
ext2_dblist	./libmke2fs/ext2fs.h	/^typedef struct ext2_struct_dblist *ext2_dblist;$/;"	t	typeref:struct:ext2_struct_dblist
ext2_dirhash_t	./libmke2fs/ext2fs.h	/^typedef __u32 __bitwise		ext2_dirhash_t;$/;"	t
ext2_extent_handle_t	./libmke2fs/ext2fs.h	/^typedef struct ext2_extent_handle *ext2_extent_handle_t;$/;"	t	typeref:struct:ext2_extent_handle
ext2_extent_info	./libmke2fs/ext2fs.h	/^struct ext2_extent_info {$/;"	s
ext2_extent_info::bytes_avail	./libmke2fs/ext2fs.h	/^	int		bytes_avail;$/;"	m	struct:ext2_extent_info	access:public
ext2_extent_info::curr_entry	./libmke2fs/ext2fs.h	/^	int		curr_entry;$/;"	m	struct:ext2_extent_info	access:public
ext2_extent_info::curr_level	./libmke2fs/ext2fs.h	/^	int		curr_level;$/;"	m	struct:ext2_extent_info	access:public
ext2_extent_info::max_depth	./libmke2fs/ext2fs.h	/^	int		max_depth;$/;"	m	struct:ext2_extent_info	access:public
ext2_extent_info::max_entries	./libmke2fs/ext2fs.h	/^	int		max_entries;$/;"	m	struct:ext2_extent_info	access:public
ext2_extent_info::max_lblk	./libmke2fs/ext2fs.h	/^	blk64_t		max_lblk;$/;"	m	struct:ext2_extent_info	access:public
ext2_extent_info::max_len	./libmke2fs/ext2fs.h	/^	__u32		max_len;$/;"	m	struct:ext2_extent_info	access:public
ext2_extent_info::max_pblk	./libmke2fs/ext2fs.h	/^	blk64_t		max_pblk;$/;"	m	struct:ext2_extent_info	access:public
ext2_extent_info::max_uninit_len	./libmke2fs/ext2fs.h	/^	__u32		max_uninit_len;$/;"	m	struct:ext2_extent_info	access:public
ext2_extent_info::num_entries	./libmke2fs/ext2fs.h	/^	int		num_entries;$/;"	m	struct:ext2_extent_info	access:public
ext2_extent_path_t	./libmke2fs/ext2fs.h	/^typedef struct ext2_extent_path *ext2_extent_path_t;$/;"	t	typeref:struct:ext2_extent_path
ext2_file_t	./libmke2fs/ext2fs.h	/^typedef struct ext2_file *ext2_file_t;$/;"	t	typeref:struct:ext2_file
ext2_file_type	./libe2fsck/e2fsck.h	/^extern int ext2_file_type(unsigned int mode);$/;"	p	signature:(unsigned int mode)
ext2_filsys	./libmke2fs/ext2fs.h	/^typedef struct struct_ext2_filsys *ext2_filsys;$/;"	t	typeref:struct:struct_ext2_filsys
ext2_icount_t	./libmke2fs/ext2fs.h	/^typedef struct ext2_icount *ext2_icount_t;$/;"	t	typeref:struct:ext2_icount
ext2_ino_t	./libmke2fs/ext2fs.h	/^typedef __u32 __bitwise		ext2_ino_t;$/;"	t
ext2_inode_cache	./libmke2fs/ext2fsP.h	/^struct ext2_inode_cache {$/;"	s
ext2_inode_cache::buffer	./libmke2fs/ext2fsP.h	/^	void *				buffer;$/;"	m	struct:ext2_inode_cache	access:public
ext2_inode_cache::buffer_blk	./libmke2fs/ext2fsP.h	/^	blk64_t				buffer_blk;$/;"	m	struct:ext2_inode_cache	access:public
ext2_inode_cache::cache	./libmke2fs/ext2fsP.h	/^	struct ext2_inode_cache_ent	*cache;$/;"	m	struct:ext2_inode_cache	typeref:struct:ext2_inode_cache::ext2_inode_cache_ent	access:public
ext2_inode_cache::cache_last	./libmke2fs/ext2fsP.h	/^	int				cache_last;$/;"	m	struct:ext2_inode_cache	access:public
ext2_inode_cache::cache_size	./libmke2fs/ext2fsP.h	/^	int				cache_size;$/;"	m	struct:ext2_inode_cache	access:public
ext2_inode_cache::refcount	./libmke2fs/ext2fsP.h	/^	int				refcount;$/;"	m	struct:ext2_inode_cache	access:public
ext2_inode_cache_ent	./libmke2fs/ext2fsP.h	/^struct ext2_inode_cache_ent {$/;"	s
ext2_inode_cache_ent::ino	./libmke2fs/ext2fsP.h	/^	ext2_ino_t		ino;$/;"	m	struct:ext2_inode_cache_ent	access:public
ext2_inode_cache_ent::inode	./libmke2fs/ext2fsP.h	/^	struct ext2_inode	inode;$/;"	m	struct:ext2_inode_cache_ent	typeref:struct:ext2_inode_cache_ent::ext2_inode	access:public
ext2_inode_scan	./libmke2fs/ext2fs.h	/^typedef struct ext2_struct_inode_scan *ext2_inode_scan;$/;"	t	typeref:struct:ext2_struct_inode_scan
ext2_off64_t	./libmke2fs/ext2fs.h	/^typedef __u64 __bitwise		ext2_off64_t;$/;"	t
ext2_off_t	./libmke2fs/ext2fs.h	/^typedef __u32 __bitwise		ext2_off_t;$/;"	t
ext2_refcount_t	./libe2fsck/e2fsck.h	/^typedef struct ea_refcount *ext2_refcount_t;$/;"	t	typeref:struct:ea_refcount
ext2_struct_dblist	./libmke2fs/ext2fsP.h	/^struct ext2_struct_dblist {$/;"	s
ext2_struct_dblist::count	./libmke2fs/ext2fsP.h	/^	unsigned long long	count;$/;"	m	struct:ext2_struct_dblist	access:public
ext2_struct_dblist::fs	./libmke2fs/ext2fsP.h	/^	ext2_filsys		fs;$/;"	m	struct:ext2_struct_dblist	access:public
ext2_struct_dblist::list	./libmke2fs/ext2fsP.h	/^	struct ext2_db_entry2 *	list;$/;"	m	struct:ext2_struct_dblist	typeref:struct:ext2_struct_dblist::ext2_db_entry2	access:public
ext2_struct_dblist::magic	./libmke2fs/ext2fsP.h	/^	int			magic;$/;"	m	struct:ext2_struct_dblist	access:public
ext2_struct_dblist::size	./libmke2fs/ext2fsP.h	/^	unsigned long long	size;$/;"	m	struct:ext2_struct_dblist	access:public
ext2_struct_dblist::sorted	./libmke2fs/ext2fsP.h	/^	int			sorted;$/;"	m	struct:ext2_struct_dblist	access:public
ext2_struct_u32_iterate	./libmke2fs/ext2fsP.h	/^struct ext2_struct_u32_iterate {$/;"	s
ext2_struct_u32_iterate::bb	./libmke2fs/ext2fsP.h	/^	ext2_u32_list		bb;$/;"	m	struct:ext2_struct_u32_iterate	access:public
ext2_struct_u32_iterate::magic	./libmke2fs/ext2fsP.h	/^	int			magic;$/;"	m	struct:ext2_struct_u32_iterate	access:public
ext2_struct_u32_iterate::ptr	./libmke2fs/ext2fsP.h	/^	int			ptr;$/;"	m	struct:ext2_struct_u32_iterate	access:public
ext2_struct_u32_list	./libmke2fs/ext2fsP.h	/^struct ext2_struct_u32_list {$/;"	s
ext2_struct_u32_list::badblocks_flags	./libmke2fs/ext2fsP.h	/^	int	badblocks_flags;$/;"	m	struct:ext2_struct_u32_list	access:public
ext2_struct_u32_list::list	./libmke2fs/ext2fsP.h	/^	__u32	*list;$/;"	m	struct:ext2_struct_u32_list	access:public
ext2_struct_u32_list::magic	./libmke2fs/ext2fsP.h	/^	int	magic;$/;"	m	struct:ext2_struct_u32_list	access:public
ext2_struct_u32_list::num	./libmke2fs/ext2fsP.h	/^	int	num;$/;"	m	struct:ext2_struct_u32_list	access:public
ext2_struct_u32_list::size	./libmke2fs/ext2fsP.h	/^	int	size;$/;"	m	struct:ext2_struct_u32_list	access:public
ext2_u32_iterate	./libmke2fs/ext2fs.h	/^typedef struct ext2_struct_u32_iterate *ext2_u32_iterate;$/;"	t	typeref:struct:ext2_struct_u32_iterate
ext2_u32_list	./libmke2fs/ext2fs.h	/^typedef struct ext2_struct_u32_list *ext2_u32_list;$/;"	t	typeref:struct:ext2_struct_u32_list
ext2fs_add_dir_block	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_add_dir_block(ext2_dblist dblist, ext2_ino_t ino,$/;"	p	signature:(ext2_dblist dblist, ext2_ino_t ino, blk_t blk, int blockcnt)
ext2fs_add_dir_block2	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_add_dir_block2(ext2_dblist dblist, ext2_ino_t ino,$/;"	p	signature:(ext2_dblist dblist, ext2_ino_t ino, blk64_t blk, e2_blkcnt_t blockcnt)
ext2fs_add_journal_device	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_add_journal_device(ext2_filsys fs,$/;"	p	signature:(ext2_filsys fs, ext2_filsys journal_dev)
ext2fs_add_journal_inode	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_add_journal_inode(ext2_filsys fs, blk_t num_blocks,$/;"	p	signature:(ext2_filsys fs, blk_t num_blocks, int flags)
ext2fs_adjust_ea_refcount	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_adjust_ea_refcount(ext2_filsys fs, blk_t blk,$/;"	p	signature:(ext2_filsys fs, blk_t blk, char *block_buf, int adjust, __u32 *newcount)
ext2fs_adjust_ea_refcount2	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_adjust_ea_refcount2(ext2_filsys fs, blk64_t blk,$/;"	p	signature:(ext2_filsys fs, blk64_t blk, char *block_buf, int adjust, __u32 *newcount)
ext2fs_alloc_block	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_alloc_block(ext2_filsys fs, blk_t goal,$/;"	p	signature:(ext2_filsys fs, blk_t goal, char *block_buf, blk_t *ret)
ext2fs_alloc_block2	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_alloc_block2(ext2_filsys fs, blk64_t goal,$/;"	p	signature:(ext2_filsys fs, blk64_t goal, char *block_buf, blk64_t *ret)
ext2fs_alloc_generic_bmap	./libmke2fs/ext2fs.h	/^errcode_t ext2fs_alloc_generic_bmap(ext2_filsys fs, errcode_t magic,$/;"	p	signature:(ext2_filsys fs, errcode_t magic, int type, __u64 start, __u64 end, __u64 real_end, const char *descr, ext2fs_generic_bitmap *ret)
ext2fs_alloc_generic_bmap	./libmke2fs/ext2fsP.h	/^extern errcode_t ext2fs_alloc_generic_bmap(ext2_filsys fs, errcode_t magic,$/;"	p	signature:(ext2_filsys fs, errcode_t magic, int type, __u64 start, __u64 end, __u64 real_end, const char * description, ext2fs_generic_bitmap *bmap)
ext2fs_allocate_block_bitmap	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_allocate_block_bitmap(ext2_filsys fs,$/;"	p	signature:(ext2_filsys fs, const char *descr, ext2fs_block_bitmap *ret)
ext2fs_allocate_generic_bitmap	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_allocate_generic_bitmap(__u32 start,$/;"	p	signature:(__u32 start, __u32 end, __u32 real_end, const char *descr, ext2fs_generic_bitmap *ret)
ext2fs_allocate_group_table	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_allocate_group_table(ext2_filsys fs, dgrp_t group,$/;"	p	signature:(ext2_filsys fs, dgrp_t group, ext2fs_block_bitmap bmap)
ext2fs_allocate_inode_bitmap	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_allocate_inode_bitmap(ext2_filsys fs,$/;"	p	signature:(ext2_filsys fs, const char *descr, ext2fs_inode_bitmap *ret)
ext2fs_allocate_subcluster_bitmap	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_allocate_subcluster_bitmap(ext2_filsys fs,$/;"	p	signature:(ext2_filsys fs, const char *descr, ext2fs_block_bitmap *ret)
ext2fs_allocate_tables	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_allocate_tables(ext2_filsys fs);$/;"	p	signature:(ext2_filsys fs)
ext2fs_badblocks_copy	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_badblocks_copy(ext2_badblocks_list src,$/;"	p	signature:(ext2_badblocks_list src, ext2_badblocks_list *dest)
ext2fs_badblocks_equal	./libmke2fs/ext2fs.h	/^extern int ext2fs_badblocks_equal(ext2_badblocks_list bb1,$/;"	p	signature:(ext2_badblocks_list bb1, ext2_badblocks_list bb2)
ext2fs_badblocks_list_add	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_badblocks_list_add(ext2_badblocks_list bb,$/;"	p	signature:(ext2_badblocks_list bb, blk_t blk)
ext2fs_badblocks_list_create	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_badblocks_list_create(ext2_badblocks_list *ret,$/;"	p	signature:(ext2_badblocks_list *ret, int size)
ext2fs_badblocks_list_del	./libmke2fs/ext2fs.h	/^extern void ext2fs_badblocks_list_del(ext2_u32_list bb, __u32 blk);$/;"	p	signature:(ext2_u32_list bb, __u32 blk)
ext2fs_badblocks_list_free	./libmke2fs/ext2fs.h	/^extern void ext2fs_badblocks_list_free(ext2_badblocks_list bb);$/;"	p	signature:(ext2_badblocks_list bb)
ext2fs_badblocks_list_iterate	./libmke2fs/ext2fs.h	/^extern int ext2fs_badblocks_list_iterate(ext2_badblocks_iterate iter,$/;"	p	signature:(ext2_badblocks_iterate iter, blk_t *blk)
ext2fs_badblocks_list_iterate_begin	./libmke2fs/ext2fs.h	/^	ext2fs_badblocks_list_iterate_begin(ext2_badblocks_list bb,$/;"	p	signature:(ext2_badblocks_list bb, ext2_badblocks_iterate *ret)
ext2fs_badblocks_list_iterate_end	./libmke2fs/ext2fs.h	/^extern void ext2fs_badblocks_list_iterate_end(ext2_badblocks_iterate iter);$/;"	p	signature:(ext2_badblocks_iterate iter)
ext2fs_badblocks_list_test	./libmke2fs/ext2fs.h	/^extern int ext2fs_badblocks_list_test(ext2_badblocks_list bb,$/;"	p	signature:(ext2_badblocks_list bb, blk_t blk)
ext2fs_bg_checksum	./libmke2fs/ext2fs.h	/^extern __u16 ext2fs_bg_checksum(ext2_filsys fs, dgrp_t group);$/;"	p	signature:(ext2_filsys fs, dgrp_t group)
ext2fs_bg_checksum_set	./libmke2fs/ext2fs.h	/^extern void ext2fs_bg_checksum_set(ext2_filsys fs, dgrp_t group, __u16 checksum);$/;"	p	signature:(ext2_filsys fs, dgrp_t group, __u16 checksum)
ext2fs_bg_flags	./libmke2fs/ext2fs.h	/^extern __u16 ext2fs_bg_flags(ext2_filsys fs, dgrp_t group);$/;"	p	signature:(ext2_filsys fs, dgrp_t group)
ext2fs_bg_flags_clear	./libmke2fs/ext2fs.h	/^extern void ext2fs_bg_flags_clear(ext2_filsys fs, dgrp_t group, __u16 bg_flags);$/;"	p	signature:(ext2_filsys fs, dgrp_t group, __u16 bg_flags)
ext2fs_bg_flags_set	./libmke2fs/ext2fs.h	/^extern void ext2fs_bg_flags_set(ext2_filsys fs, dgrp_t group, __u16 bg_flags);$/;"	p	signature:(ext2_filsys fs, dgrp_t group, __u16 bg_flags)
ext2fs_bg_flags_test	./libmke2fs/ext2fs.h	/^extern int ext2fs_bg_flags_test(ext2_filsys fs, dgrp_t group, __u16 bg_flag);$/;"	p	signature:(ext2_filsys fs, dgrp_t group, __u16 bg_flag)
ext2fs_bg_flags_zap	./libmke2fs/ext2fs.h	/^extern void ext2fs_bg_flags_zap(ext2_filsys fs, dgrp_t group);$/;"	p	signature:(ext2_filsys fs, dgrp_t group)
ext2fs_bg_free_blocks_count	./libmke2fs/ext2fs.h	/^extern __u32 ext2fs_bg_free_blocks_count(ext2_filsys fs, dgrp_t group);$/;"	p	signature:(ext2_filsys fs, dgrp_t group)
ext2fs_bg_free_blocks_count_set	./libmke2fs/ext2fs.h	/^extern void ext2fs_bg_free_blocks_count_set(ext2_filsys fs, dgrp_t group,$/;"	p	signature:(ext2_filsys fs, dgrp_t group, __u32 n)
ext2fs_bg_free_inodes_count	./libmke2fs/ext2fs.h	/^extern __u32 ext2fs_bg_free_inodes_count(ext2_filsys fs, dgrp_t group);$/;"	p	signature:(ext2_filsys fs, dgrp_t group)
ext2fs_bg_free_inodes_count_set	./libmke2fs/ext2fs.h	/^extern void ext2fs_bg_free_inodes_count_set(ext2_filsys fs, dgrp_t group,$/;"	p	signature:(ext2_filsys fs, dgrp_t group, __u32 n)
ext2fs_bg_has_super	./libmke2fs/ext2fs.h	/^extern int ext2fs_bg_has_super(ext2_filsys fs, dgrp_t group_block);$/;"	p	signature:(ext2_filsys fs, dgrp_t group_block)
ext2fs_bg_itable_unused	./libmke2fs/ext2fs.h	/^extern __u32 ext2fs_bg_itable_unused(ext2_filsys fs, dgrp_t group);$/;"	p	signature:(ext2_filsys fs, dgrp_t group)
ext2fs_bg_itable_unused_set	./libmke2fs/ext2fs.h	/^extern void ext2fs_bg_itable_unused_set(ext2_filsys fs, dgrp_t group,$/;"	p	signature:(ext2_filsys fs, dgrp_t group, __u32 n)
ext2fs_bg_used_dirs_count	./libmke2fs/ext2fs.h	/^extern __u32 ext2fs_bg_used_dirs_count(ext2_filsys fs, dgrp_t group);$/;"	p	signature:(ext2_filsys fs, dgrp_t group)
ext2fs_bg_used_dirs_count_set	./libmke2fs/ext2fs.h	/^extern void ext2fs_bg_used_dirs_count_set(ext2_filsys fs, dgrp_t group,$/;"	p	signature:(ext2_filsys fs, dgrp_t group, __u32 n)
ext2fs_block_alloc_stats	./libmke2fs/ext2fs.h	/^void ext2fs_block_alloc_stats(ext2_filsys fs, blk_t blk, int inuse);$/;"	p	signature:(ext2_filsys fs, blk_t blk, int inuse)
ext2fs_block_alloc_stats2	./libmke2fs/ext2fs.h	/^void ext2fs_block_alloc_stats2(ext2_filsys fs, blk64_t blk, int inuse);$/;"	p	signature:(ext2_filsys fs, blk64_t blk, int inuse)
ext2fs_block_bitmap	./libmke2fs/ext2fs.h	/^typedef struct ext2fs_struct_generic_bitmap *ext2fs_block_bitmap;$/;"	t	typeref:struct:ext2fs_struct_generic_bitmap
ext2fs_block_bitmap_loc	./libmke2fs/ext2fs.h	/^extern blk64_t ext2fs_block_bitmap_loc(ext2_filsys fs, dgrp_t group);$/;"	p	signature:(ext2_filsys fs, dgrp_t group)
ext2fs_block_bitmap_loc_set	./libmke2fs/ext2fs.h	/^extern void ext2fs_block_bitmap_loc_set(ext2_filsys fs, dgrp_t group,$/;"	p	signature:(ext2_filsys fs, dgrp_t group, blk64_t blk)
ext2fs_block_iterate	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_block_iterate(ext2_filsys fs,$/;"	p	signature:(ext2_filsys fs, ext2_ino_t ino, int flags, char *block_buf, int (*func)(ext2_filsys fs, blk_t *blocknr, int blockcnt, void *priv_data), void *priv_data)
ext2fs_block_iterate2	./libmke2fs/ext2fs.h	/^errcode_t ext2fs_block_iterate2(ext2_filsys fs,$/;"	p	signature:(ext2_filsys fs, ext2_ino_t ino, int flags, char *block_buf, int (*func)(ext2_filsys fs, blk_t *blocknr, e2_blkcnt_t blockcnt, blk_t ref_blk, int ref_offset, void *priv_data), void *priv_data)
ext2fs_block_iterate3	./libmke2fs/ext2fs.h	/^errcode_t ext2fs_block_iterate3(ext2_filsys fs,$/;"	p	signature:(ext2_filsys fs, ext2_ino_t ino, int flags, char *block_buf, int (*func)(ext2_filsys fs, blk64_t *blocknr, e2_blkcnt_t blockcnt, blk64_t ref_blk, int ref_offset, void *priv_data), void *priv_data)
ext2fs_blocks_count	./libmke2fs/ext2fs.h	/^extern blk64_t ext2fs_blocks_count(struct ext2_super_block *super);$/;"	p	signature:(struct ext2_super_block *super)
ext2fs_blocks_count_add	./libmke2fs/ext2fs.h	/^extern void ext2fs_blocks_count_add(struct ext2_super_block *super,$/;"	p	signature:(struct ext2_super_block *super, blk64_t blk)
ext2fs_blocks_count_set	./libmke2fs/ext2fs.h	/^extern void ext2fs_blocks_count_set(struct ext2_super_block *super,$/;"	p	signature:(struct ext2_super_block *super, blk64_t blk)
ext2fs_bmap	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_bmap(ext2_filsys fs, ext2_ino_t ino,$/;"	p	signature:(ext2_filsys fs, ext2_ino_t ino, struct ext2_inode *inode, char *block_buf, int bmap_flags, blk_t block, blk_t *phys_blk)
ext2fs_bmap2	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_bmap2(ext2_filsys fs, ext2_ino_t ino,$/;"	p	signature:(ext2_filsys fs, ext2_ino_t ino, struct ext2_inode *inode, char *block_buf, int bmap_flags, blk64_t block, int *ret_flags, blk64_t *phys_blk)
ext2fs_check_desc	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_check_desc(ext2_filsys fs);$/;"	p	signature:(ext2_filsys fs)
ext2fs_check_directory	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_check_directory(ext2_filsys fs, ext2_ino_t ino);$/;"	p	signature:(ext2_filsys fs, ext2_ino_t ino)
ext2fs_check_if_mounted	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_check_if_mounted(const char *file, int *mount_flags);$/;"	p	signature:(const char *file, int *mount_flags)
ext2fs_check_mount_point	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_check_mount_point(const char *device, int *mount_flags,$/;"	p	signature:(const char *device, int *mount_flags, char *mtpt, int mtlen)
ext2fs_clear_block_bitmap	./libmke2fs/ext2fs.h	/^extern void ext2fs_clear_block_bitmap(ext2fs_block_bitmap bitmap);$/;"	p	signature:(ext2fs_block_bitmap bitmap)
ext2fs_clear_generic_bitmap	./libmke2fs/ext2fs.h	/^extern void ext2fs_clear_generic_bitmap(ext2fs_generic_bitmap bitmap);$/;"	p	signature:(ext2fs_generic_bitmap bitmap)
ext2fs_clear_generic_bmap	./libmke2fs/ext2fs.h	/^void ext2fs_clear_generic_bmap(ext2fs_generic_bitmap bitmap);$/;"	p	signature:(ext2fs_generic_bitmap bitmap)
ext2fs_clear_inode_bitmap	./libmke2fs/ext2fs.h	/^extern void ext2fs_clear_inode_bitmap(ext2fs_inode_bitmap bitmap);$/;"	p	signature:(ext2fs_inode_bitmap bitmap)
ext2fs_close	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_close(ext2_filsys fs);$/;"	p	signature:(ext2_filsys fs)
ext2fs_close2	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_close2(ext2_filsys fs, int flags);$/;"	p	signature:(ext2_filsys fs, int flags)
ext2fs_close_inode_scan	./libmke2fs/ext2fs.h	/^extern void ext2fs_close_inode_scan(ext2_inode_scan scan);$/;"	p	signature:(ext2_inode_scan scan)
ext2fs_compare_block_bitmap	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_compare_block_bitmap(ext2fs_block_bitmap bm1,$/;"	p	signature:(ext2fs_block_bitmap bm1, ext2fs_block_bitmap bm2)
ext2fs_compare_generic_bitmap	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_compare_generic_bitmap(errcode_t magic, errcode_t neq,$/;"	p	signature:(errcode_t magic, errcode_t neq, ext2fs_generic_bitmap bm1, ext2fs_generic_bitmap bm2)
ext2fs_compare_generic_bmap	./libmke2fs/ext2fs.h	/^errcode_t ext2fs_compare_generic_bmap(errcode_t neq,$/;"	p	signature:(errcode_t neq, ext2fs_generic_bitmap bm1, ext2fs_generic_bitmap bm2)
ext2fs_compare_inode_bitmap	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_compare_inode_bitmap(ext2fs_inode_bitmap bm1,$/;"	p	signature:(ext2fs_inode_bitmap bm1, ext2fs_inode_bitmap bm2)
ext2fs_convert_subcluster_bitmap	./libmke2fs/ext2fs.h	/^errcode_t ext2fs_convert_subcluster_bitmap(ext2_filsys fs,$/;"	p	signature:(ext2_filsys fs, ext2fs_block_bitmap *bitmap)
ext2fs_copy_bitmap	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_copy_bitmap(ext2fs_generic_bitmap src,$/;"	p	signature:(ext2fs_generic_bitmap src, ext2fs_generic_bitmap *dest)
ext2fs_copy_dblist	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_copy_dblist(ext2_dblist src,$/;"	p	signature:(ext2_dblist src, ext2_dblist *dest)
ext2fs_copy_generic_bitmap	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_copy_generic_bitmap(ext2fs_generic_bitmap src,$/;"	p	signature:(ext2fs_generic_bitmap src, ext2fs_generic_bitmap *dest)
ext2fs_copy_generic_bmap	./libmke2fs/ext2fs.h	/^errcode_t ext2fs_copy_generic_bmap(ext2fs_generic_bitmap src,$/;"	p	signature:(ext2fs_generic_bitmap src, ext2fs_generic_bitmap *dest)
ext2fs_copy_generic_bmap	./libmke2fs/ext2fsP.h	/^extern errcode_t ext2fs_copy_generic_bmap(ext2fs_generic_bitmap src,$/;"	p	signature:(ext2fs_generic_bitmap src, ext2fs_generic_bitmap *dest)
ext2fs_crc32c_be	./libmke2fs/ext2fs.h	/^extern __u32 ext2fs_crc32c_be(__u32 crc, unsigned char const *p, size_t len);$/;"	p	signature:(__u32 crc, unsigned char const *p, size_t len)
ext2fs_crc32c_le	./libmke2fs/ext2fs.h	/^extern __u32 ext2fs_crc32c_le(__u32 crc, unsigned char const *p, size_t len);$/;"	p	signature:(__u32 crc, unsigned char const *p, size_t len)
ext2fs_create_icount	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_create_icount(ext2_filsys fs, int flags,$/;"	p	signature:(ext2_filsys fs, int flags, unsigned int size, ext2_icount_t *ret)
ext2fs_create_icount2	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_create_icount2(ext2_filsys fs, int flags,$/;"	p	signature:(ext2_filsys fs, int flags, unsigned int size, ext2_icount_t hint, ext2_icount_t *ret)
ext2fs_create_icount_tdb	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_create_icount_tdb(ext2_filsys fs, char *tdb_dir,$/;"	p	signature:(ext2_filsys fs, char *tdb_dir, int flags, ext2_icount_t *ret)
ext2fs_create_journal_superblock	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_create_journal_superblock(ext2_filsys fs,$/;"	p	signature:(ext2_filsys fs, __u32 num_blocks, int flags, char **ret_jsb)
ext2fs_create_resize_inode	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_create_resize_inode(ext2_filsys fs);$/;"	p	signature:(ext2_filsys fs)
ext2fs_dblist_count	./libmke2fs/ext2fs.h	/^extern int ext2fs_dblist_count(ext2_dblist dblist);$/;"	p	signature:(ext2_dblist dblist)
ext2fs_dblist_count2	./libmke2fs/ext2fs.h	/^extern blk64_t ext2fs_dblist_count2(ext2_dblist dblist);$/;"	p	signature:(ext2_dblist dblist)
ext2fs_dblist_dir_iterate	./libmke2fs/ext2fs.h	/^	ext2fs_dblist_dir_iterate(ext2_dblist dblist,$/;"	p	signature:(ext2_dblist dblist, int flags, char *block_buf, int (*func)(ext2_ino_t dir, int entry, struct ext2_dir_entry *dirent, int offset, int blocksize, char *buf, void *priv_data), void *priv_data)
ext2fs_dblist_drop_last	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_dblist_drop_last(ext2_dblist dblist);$/;"	p	signature:(ext2_dblist dblist)
ext2fs_dblist_get_last	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_dblist_get_last(ext2_dblist dblist,$/;"	p	signature:(ext2_dblist dblist, struct ext2_db_entry **entry)
ext2fs_dblist_get_last2	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_dblist_get_last2(ext2_dblist dblist,$/;"	p	signature:(ext2_dblist dblist, struct ext2_db_entry2 **entry)
ext2fs_dblist_iterate	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_dblist_iterate(ext2_dblist dblist,$/;"	p	signature:(ext2_dblist dblist, int (*func)(ext2_filsys fs, struct ext2_db_entry *db_info, void *priv_data), void *priv_data)
ext2fs_dblist_iterate2	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_dblist_iterate2(ext2_dblist dblist,$/;"	p	signature:(ext2_dblist dblist, int (*func)(ext2_filsys fs, struct ext2_db_entry2 *db_info, void *priv_data), void *priv_data)
ext2fs_dblist_sort	./libmke2fs/ext2fs.h	/^extern void ext2fs_dblist_sort(ext2_dblist dblist,$/;"	p	signature:(ext2_dblist dblist, EXT2_QSORT_TYPE (*sortfunc)(const void *, const void *))
ext2fs_dblist_sort2	./libmke2fs/ext2fs.h	/^extern void ext2fs_dblist_sort2(ext2_dblist dblist,$/;"	p	signature:(ext2_dblist dblist, EXT2_QSORT_TYPE (*sortfunc)(const void *, const void *))
ext2fs_default_journal_size	./libmke2fs/ext2fs.h	/^extern int ext2fs_default_journal_size(__u64 num_blocks);$/;"	p	signature:(__u64 num_blocks)
ext2fs_descriptor_block_loc	./libmke2fs/ext2fs.h	/^extern blk_t ext2fs_descriptor_block_loc(ext2_filsys fs, blk_t group_block,$/;"	p	signature:(ext2_filsys fs, blk_t group_block, dgrp_t i)
ext2fs_descriptor_block_loc2	./libmke2fs/ext2fs.h	/^extern blk64_t ext2fs_descriptor_block_loc2(ext2_filsys fs,$/;"	p	signature:(ext2_filsys fs, blk64_t group_block, dgrp_t i)
ext2fs_dir_iterate	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_dir_iterate(ext2_filsys fs,$/;"	p	signature:(ext2_filsys fs, ext2_ino_t dir, int flags, char *block_buf, int (*func)(struct ext2_dir_entry *dirent, int offset, int blocksize, char *buf, void *priv_data), void *priv_data)
ext2fs_dir_iterate2	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_dir_iterate2(ext2_filsys fs,$/;"	p	signature:(ext2_filsys fs, ext2_ino_t dir, int flags, char *block_buf, int (*func)(ext2_ino_t dir, int entry, struct ext2_dir_entry *dirent, int offset, int blocksize, char *buf, void *priv_data), void *priv_data)
ext2fs_dirhash	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_dirhash(int version, const char *name, int len,$/;"	p	signature:(int version, const char *name, int len, const __u32 *seed, ext2_dirhash_t *ret_hash, ext2_dirhash_t *ret_minor_hash)
ext2fs_div64_ceil	./libmke2fs/ext2fs.h	/^_INLINE_ __u64 ext2fs_div64_ceil(__u64 a, __u64 b)$/;"	f	signature:(__u64 a, __u64 b)
ext2fs_div64_ceil	./libmke2fs/ext2fs.h	/^extern __u64 ext2fs_div64_ceil(__u64 a, __u64 b);$/;"	p	signature:(__u64 a, __u64 b)
ext2fs_div_ceil	./libmke2fs/ext2fs.h	/^_INLINE_ unsigned int ext2fs_div_ceil(unsigned int a, unsigned int b)$/;"	f	signature:(unsigned int a, unsigned int b)
ext2fs_div_ceil	./libmke2fs/ext2fs.h	/^extern unsigned int ext2fs_div_ceil(unsigned int a, unsigned int b);$/;"	p	signature:(unsigned int a, unsigned int b)
ext2fs_dup_handle	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_dup_handle(ext2_filsys src, ext2_filsys *dest);$/;"	p	signature:(ext2_filsys src, ext2_filsys *dest)
ext2fs_expand_dir	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_expand_dir(ext2_filsys fs, ext2_ino_t dir);$/;"	p	signature:(ext2_filsys fs, ext2_ino_t dir)
ext2fs_ext_attr_hash_entry	./libmke2fs/ext2fs.h	/^extern __u32 ext2fs_ext_attr_hash_entry(struct ext2_ext_attr_entry *entry,$/;"	p	signature:(struct ext2_ext_attr_entry *entry, void *data)
ext2fs_extent	./libmke2fs/ext2fs.h	/^struct ext2fs_extent {$/;"	s
ext2fs_extent::e_flags	./libmke2fs/ext2fs.h	/^	__u32	e_flags;	\/* extent flags *\/$/;"	m	struct:ext2fs_extent	access:public
ext2fs_extent::e_lblk	./libmke2fs/ext2fs.h	/^	blk64_t	e_lblk;		\/* first logical block extent covers *\/$/;"	m	struct:ext2fs_extent	access:public
ext2fs_extent::e_len	./libmke2fs/ext2fs.h	/^	__u32	e_len;		\/* number of blocks covered by extent *\/$/;"	m	struct:ext2fs_extent	access:public
ext2fs_extent::e_pblk	./libmke2fs/ext2fs.h	/^	blk64_t	e_pblk;		\/* first physical block *\/$/;"	m	struct:ext2fs_extent	access:public
ext2fs_extent_delete	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_extent_delete(ext2_extent_handle_t handle, int flags);$/;"	p	signature:(ext2_extent_handle_t handle, int flags)
ext2fs_extent_fix_parents	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_extent_fix_parents(ext2_extent_handle_t handle);$/;"	p	signature:(ext2_extent_handle_t handle)
ext2fs_extent_free	./libmke2fs/ext2fs.h	/^extern void ext2fs_extent_free(ext2_extent_handle_t handle);$/;"	p	signature:(ext2_extent_handle_t handle)
ext2fs_extent_get	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_extent_get(ext2_extent_handle_t handle,$/;"	p	signature:(ext2_extent_handle_t handle, int flags, struct ext2fs_extent *extent)
ext2fs_extent_get_info	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_extent_get_info(ext2_extent_handle_t handle,$/;"	p	signature:(ext2_extent_handle_t handle, struct ext2_extent_info *info)
ext2fs_extent_goto	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_extent_goto(ext2_extent_handle_t handle,$/;"	p	signature:(ext2_extent_handle_t handle, blk64_t blk)
ext2fs_extent_goto2	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_extent_goto2(ext2_extent_handle_t handle,$/;"	p	signature:(ext2_extent_handle_t handle, int leaf_level, blk64_t blk)
ext2fs_extent_header_verify	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_extent_header_verify(void *ptr, int size);$/;"	p	signature:(void *ptr, int size)
ext2fs_extent_insert	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_extent_insert(ext2_extent_handle_t handle, int flags,$/;"	p	signature:(ext2_extent_handle_t handle, int flags, struct ext2fs_extent *extent)
ext2fs_extent_node_split	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_extent_node_split(ext2_extent_handle_t handle);$/;"	p	signature:(ext2_extent_handle_t handle)
ext2fs_extent_open	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_extent_open(ext2_filsys fs, ext2_ino_t ino,$/;"	p	signature:(ext2_filsys fs, ext2_ino_t ino, ext2_extent_handle_t *handle)
ext2fs_extent_open2	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_extent_open2(ext2_filsys fs, ext2_ino_t ino,$/;"	p	signature:(ext2_filsys fs, ext2_ino_t ino, struct ext2_inode *inode, ext2_extent_handle_t *ret_handle)
ext2fs_extent_replace	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_extent_replace(ext2_extent_handle_t handle, int flags,$/;"	p	signature:(ext2_extent_handle_t handle, int flags, struct ext2fs_extent *extent)
ext2fs_extent_set_bmap	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_extent_set_bmap(ext2_extent_handle_t handle,$/;"	p	signature:(ext2_extent_handle_t handle, blk64_t logical, blk64_t physical, int flags)
ext2fs_file_acl_block	./libmke2fs/ext2fs.h	/^extern blk64_t ext2fs_file_acl_block(ext2_filsys fs,$/;"	p	signature:(ext2_filsys fs, const struct ext2_inode *inode)
ext2fs_file_acl_block_set	./libmke2fs/ext2fs.h	/^extern void ext2fs_file_acl_block_set(ext2_filsys fs,$/;"	p	signature:(ext2_filsys fs, struct ext2_inode *inode, blk64_t blk)
ext2fs_file_block_offset_too_big	./libmke2fs/ext2fsP.h	/^extern int ext2fs_file_block_offset_too_big(ext2_filsys fs,$/;"	p	signature:(ext2_filsys fs, struct ext2_inode *inode, blk64_t offset)
ext2fs_file_close	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_file_close(ext2_file_t file);$/;"	p	signature:(ext2_file_t file)
ext2fs_file_flush	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_file_flush(ext2_file_t file);$/;"	p	signature:(ext2_file_t file)
ext2fs_file_get_fs	./libmke2fs/ext2fs.h	/^extern ext2_filsys ext2fs_file_get_fs(ext2_file_t file);$/;"	p	signature:(ext2_file_t file)
ext2fs_file_get_inode	./libmke2fs/ext2fs.h	/^struct ext2_inode *ext2fs_file_get_inode(ext2_file_t file);$/;"	p	signature:(ext2_file_t file)
ext2fs_file_get_inode_num	./libmke2fs/ext2fs.h	/^extern ext2_ino_t ext2fs_file_get_inode_num(ext2_file_t file);$/;"	p	signature:(ext2_file_t file)
ext2fs_file_get_lsize	./libmke2fs/ext2fs.h	/^errcode_t ext2fs_file_get_lsize(ext2_file_t file, __u64 *ret_size);$/;"	p	signature:(ext2_file_t file, __u64 *ret_size)
ext2fs_file_get_size	./libmke2fs/ext2fs.h	/^extern ext2_off_t ext2fs_file_get_size(ext2_file_t file);$/;"	p	signature:(ext2_file_t file)
ext2fs_file_llseek	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_file_llseek(ext2_file_t file, __u64 offset,$/;"	p	signature:(ext2_file_t file, __u64 offset, int whence, __u64 *ret_pos)
ext2fs_file_lseek	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_file_lseek(ext2_file_t file, ext2_off_t offset,$/;"	p	signature:(ext2_file_t file, ext2_off_t offset, int whence, ext2_off_t *ret_pos)
ext2fs_file_open	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_file_open(ext2_filsys fs, ext2_ino_t ino,$/;"	p	signature:(ext2_filsys fs, ext2_ino_t ino, int flags, ext2_file_t *ret)
ext2fs_file_open2	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_file_open2(ext2_filsys fs, ext2_ino_t ino,$/;"	p	signature:(ext2_filsys fs, ext2_ino_t ino, struct ext2_inode *inode, int flags, ext2_file_t *ret)
ext2fs_file_read	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_file_read(ext2_file_t file, void *buf,$/;"	p	signature:(ext2_file_t file, void *buf, unsigned int wanted, unsigned int *got)
ext2fs_file_set_size	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_file_set_size(ext2_file_t file, ext2_off_t size);$/;"	p	signature:(ext2_file_t file, ext2_off_t size)
ext2fs_file_set_size2	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_file_set_size2(ext2_file_t file, ext2_off64_t size);$/;"	p	signature:(ext2_file_t file, ext2_off64_t size)
ext2fs_file_write	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_file_write(ext2_file_t file, const void *buf,$/;"	p	signature:(ext2_file_t file, const void *buf, unsigned int nbytes, unsigned int *written)
ext2fs_find_block_device	./libmke2fs/ext2fs.h	/^extern char *ext2fs_find_block_device(dev_t device);$/;"	p	signature:(dev_t device)
ext2fs_find_first_zero_generic_bitmap	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_find_first_zero_generic_bitmap(ext2fs_generic_bitmap bitmap,$/;"	p	signature:(ext2fs_generic_bitmap bitmap, __u32 start, __u32 end, __u32 *out)
ext2fs_flush	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_flush(ext2_filsys fs);$/;"	p	signature:(ext2_filsys fs)
ext2fs_flush2	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_flush2(ext2_filsys fs, int flags);$/;"	p	signature:(ext2_filsys fs, int flags)
ext2fs_flush_icache	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_flush_icache(ext2_filsys fs);$/;"	p	signature:(ext2_filsys fs)
ext2fs_follow_link	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_follow_link(ext2_filsys fs, ext2_ino_t root, ext2_ino_t cwd,$/;"	p	signature:(ext2_filsys fs, ext2_ino_t root, ext2_ino_t cwd, ext2_ino_t inode, ext2_ino_t *res_inode)
ext2fs_free	./libmke2fs/ext2fs.h	/^extern void ext2fs_free(ext2_filsys fs);$/;"	p	signature:(ext2_filsys fs)
ext2fs_free_block_bitmap	./libmke2fs/ext2fs.h	/^extern void ext2fs_free_block_bitmap(ext2fs_block_bitmap bitmap);$/;"	p	signature:(ext2fs_block_bitmap bitmap)
ext2fs_free_blocks_count	./libmke2fs/ext2fs.h	/^extern blk64_t ext2fs_free_blocks_count(struct ext2_super_block *super);$/;"	p	signature:(struct ext2_super_block *super)
ext2fs_free_blocks_count_add	./libmke2fs/ext2fs.h	/^extern void ext2fs_free_blocks_count_add(struct ext2_super_block *super,$/;"	p	signature:(struct ext2_super_block *super, blk64_t blk)
ext2fs_free_blocks_count_set	./libmke2fs/ext2fs.h	/^extern void ext2fs_free_blocks_count_set(struct ext2_super_block *super,$/;"	p	signature:(struct ext2_super_block *super, blk64_t blk)
ext2fs_free_dblist	./libmke2fs/ext2fs.h	/^extern void ext2fs_free_dblist(ext2_dblist dblist);$/;"	p	signature:(ext2_dblist dblist)
ext2fs_free_generic_bitmap	./libmke2fs/ext2fs.h	/^extern void ext2fs_free_generic_bitmap(ext2fs_inode_bitmap bitmap);$/;"	p	signature:(ext2fs_inode_bitmap bitmap)
ext2fs_free_generic_bmap	./libmke2fs/ext2fs.h	/^void ext2fs_free_generic_bmap(ext2fs_generic_bitmap bmap);$/;"	p	signature:(ext2fs_generic_bitmap bmap)
ext2fs_free_generic_bmap	./libmke2fs/ext2fsP.h	/^extern void ext2fs_free_generic_bmap(ext2fs_generic_bitmap bmap);$/;"	p	signature:(ext2fs_generic_bitmap bmap)
ext2fs_free_icount	./libmke2fs/ext2fs.h	/^extern void ext2fs_free_icount(ext2_icount_t icount);$/;"	p	signature:(ext2_icount_t icount)
ext2fs_free_inode_bitmap	./libmke2fs/ext2fs.h	/^extern void ext2fs_free_inode_bitmap(ext2fs_inode_bitmap bitmap);$/;"	p	signature:(ext2fs_inode_bitmap bitmap)
ext2fs_free_mem	./libmke2fs/ext2fs.h	/^_INLINE_ errcode_t ext2fs_free_mem(void *ptr)$/;"	f	signature:(void *ptr)
ext2fs_free_mem	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_free_mem(void *ptr);$/;"	p	signature:(void *ptr)
ext2fs_fstat	./libmke2fs/ext2fs.h	/^extern int ext2fs_fstat(int fd, ext2fs_struct_stat *buf);$/;"	p	signature:(int fd, ext2fs_struct_stat *buf)
ext2fs_fudge_block_bitmap_end	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_fudge_block_bitmap_end(ext2fs_block_bitmap bitmap,$/;"	p	signature:(ext2fs_block_bitmap bitmap, blk_t end, blk_t *oend)
ext2fs_fudge_block_bitmap_end2	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_fudge_block_bitmap_end2(ext2fs_block_bitmap bitmap,$/;"	p	signature:(ext2fs_block_bitmap bitmap, blk64_t end, blk64_t *oend)
ext2fs_fudge_generic_bitmap_end	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_fudge_generic_bitmap_end(ext2fs_inode_bitmap bitmap,$/;"	p	signature:(ext2fs_inode_bitmap bitmap, errcode_t magic, errcode_t neq, ext2_ino_t end, ext2_ino_t *oend)
ext2fs_fudge_generic_bmap_end	./libmke2fs/ext2fs.h	/^errcode_t ext2fs_fudge_generic_bmap_end(ext2fs_generic_bitmap bitmap,$/;"	p	signature:(ext2fs_generic_bitmap bitmap, errcode_t neq, __u64 end, __u64 *oend)
ext2fs_fudge_generic_bmap_end	./libmke2fs/ext2fsP.h	/^extern errcode_t ext2fs_fudge_generic_bmap_end(ext2fs_generic_bitmap bitmap,$/;"	p	signature:(ext2fs_generic_bitmap bitmap, errcode_t neq, __u64 end, __u64 *oend)
ext2fs_fudge_inode_bitmap_end	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_fudge_inode_bitmap_end(ext2fs_inode_bitmap bitmap,$/;"	p	signature:(ext2fs_inode_bitmap bitmap, ext2_ino_t end, ext2_ino_t *oend)
ext2fs_generic_bitmap	./libmke2fs/ext2fs.h	/^typedef struct ext2fs_struct_generic_bitmap *ext2fs_generic_bitmap;$/;"	t	typeref:struct:ext2fs_struct_generic_bitmap
ext2fs_get_array	./libmke2fs/ext2fs.h	/^_INLINE_ errcode_t ext2fs_get_array(unsigned long count, unsigned long size, void *ptr)$/;"	f	signature:(unsigned long count, unsigned long size, void *ptr)
ext2fs_get_array	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_get_array(unsigned long count,$/;"	p	signature:(unsigned long count, unsigned long size, void *ptr)
ext2fs_get_arrayzero	./libmke2fs/ext2fs.h	/^_INLINE_ errcode_t ext2fs_get_arrayzero(unsigned long count,$/;"	f	signature:(unsigned long count, unsigned long size, void *ptr)
ext2fs_get_arrayzero	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_get_arrayzero(unsigned long count,$/;"	p	signature:(unsigned long count, unsigned long size, void *ptr)
ext2fs_get_bitmap_granularity	./libmke2fs/ext2fs.h	/^extern int ext2fs_get_bitmap_granularity(ext2fs_block_bitmap bitmap);$/;"	p	signature:(ext2fs_block_bitmap bitmap)
ext2fs_get_block_bitmap_range	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_get_block_bitmap_range(ext2fs_block_bitmap bmap,$/;"	p	signature:(ext2fs_block_bitmap bmap, blk_t start, unsigned int num, void *out)
ext2fs_get_block_bitmap_range2	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_get_block_bitmap_range2(ext2fs_block_bitmap bmap,$/;"	p	signature:(ext2fs_block_bitmap bmap, blk64_t start, size_t num, void *out)
ext2fs_get_blocks	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_get_blocks(ext2_filsys fs, ext2_ino_t ino, blk_t *blocks);$/;"	p	signature:(ext2_filsys fs, ext2_ino_t ino, blk_t *blocks)
ext2fs_get_data_io	./libmke2fs/ext2fs.h	/^errcode_t ext2fs_get_data_io(ext2_filsys fs, io_channel *old_io);$/;"	p	signature:(ext2_filsys fs, io_channel *old_io)
ext2fs_get_device_phys_sectsize	./libmke2fs/ext2fs.h	/^errcode_t ext2fs_get_device_phys_sectsize(const char *file, int *sectsize);$/;"	p	signature:(const char *file, int *sectsize)
ext2fs_get_device_sectsize	./libmke2fs/ext2fs.h	/^errcode_t ext2fs_get_device_sectsize(const char *file, int *sectsize);$/;"	p	signature:(const char *file, int *sectsize)
ext2fs_get_device_size	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_get_device_size(const char *file, int blocksize,$/;"	p	signature:(const char *file, int blocksize, blk_t *retblocks)
ext2fs_get_device_size2	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_get_device_size2(const char *file, int blocksize,$/;"	p	signature:(const char *file, int blocksize, blk64_t *retblocks)
ext2fs_get_dio_alignment	./libmke2fs/ext2fs.h	/^extern int ext2fs_get_dio_alignment(int fd);$/;"	p	signature:(int fd)
ext2fs_get_free_blocks	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_get_free_blocks(ext2_filsys fs, blk_t start,$/;"	p	signature:(ext2_filsys fs, blk_t start, blk_t finish, int num, ext2fs_block_bitmap map, blk_t *ret)
ext2fs_get_free_blocks2	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_get_free_blocks2(ext2_filsys fs, blk64_t start,$/;"	p	signature:(ext2_filsys fs, blk64_t start, blk64_t finish, int num, ext2fs_block_bitmap map, blk64_t *ret)
ext2fs_get_generic_bitmap_range	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_get_generic_bitmap_range(ext2fs_generic_bitmap bmap,$/;"	p	signature:(ext2fs_generic_bitmap bmap, errcode_t magic, __u32 start, __u32 num, void *out)
ext2fs_get_generic_bmap_range	./libmke2fs/ext2fs.h	/^errcode_t ext2fs_get_generic_bmap_range(ext2fs_generic_bitmap bmap,$/;"	p	signature:(ext2fs_generic_bitmap bmap, __u64 start, unsigned int num, void *out)
ext2fs_get_generic_bmap_range	./libmke2fs/ext2fsP.h	/^extern errcode_t ext2fs_get_generic_bmap_range(ext2fs_generic_bitmap bitmap,$/;"	p	signature:(ext2fs_generic_bitmap bitmap, __u64 start, unsigned int num, void *out)
ext2fs_get_icount_size	./libmke2fs/ext2fs.h	/^extern ext2_ino_t ext2fs_get_icount_size(ext2_icount_t icount);$/;"	p	signature:(ext2_icount_t icount)
ext2fs_get_inode_bitmap_range	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_get_inode_bitmap_range(ext2fs_inode_bitmap bmap,$/;"	p	signature:(ext2fs_inode_bitmap bmap, ext2_ino_t start, unsigned int num, void *out)
ext2fs_get_inode_bitmap_range2	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_get_inode_bitmap_range2(ext2fs_inode_bitmap bmap,$/;"	p	signature:(ext2fs_inode_bitmap bmap, __u64 start, size_t num, void *out)
ext2fs_get_library_version	./libmke2fs/ext2fs.h	/^extern int ext2fs_get_library_version(const char **ver_string,$/;"	p	signature:(const char **ver_string, const char **date_string)
ext2fs_get_mem	./libmke2fs/ext2fs.h	/^_INLINE_ errcode_t ext2fs_get_mem(unsigned long size, void *ptr)$/;"	f	signature:(unsigned long size, void *ptr)
ext2fs_get_mem	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_get_mem(unsigned long size, void *ptr);$/;"	p	signature:(unsigned long size, void *ptr)
ext2fs_get_memalign	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_get_memalign(unsigned long size,$/;"	p	signature:(unsigned long size, unsigned long align, void *ptr)
ext2fs_get_memzero	./libmke2fs/ext2fs.h	/^_INLINE_ errcode_t ext2fs_get_memzero(unsigned long size, void *ptr)$/;"	f	signature:(unsigned long size, void *ptr)
ext2fs_get_memzero	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_get_memzero(unsigned long size, void *ptr);$/;"	p	signature:(unsigned long size, void *ptr)
ext2fs_get_next_inode	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_get_next_inode(ext2_inode_scan scan, ext2_ino_t *ino,$/;"	p	signature:(ext2_inode_scan scan, ext2_ino_t *ino, struct ext2_inode *inode)
ext2fs_get_next_inode_full	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_get_next_inode_full(ext2_inode_scan scan,$/;"	p	signature:(ext2_inode_scan scan, ext2_ino_t *ino, struct ext2_inode *inode, int bufsize)
ext2fs_get_num_dirs	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_get_num_dirs(ext2_filsys fs, ext2_ino_t *ret_num_dirs);$/;"	p	signature:(ext2_filsys fs, ext2_ino_t *ret_num_dirs)
ext2fs_get_pathname	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_get_pathname(ext2_filsys fs, ext2_ino_t dir, ext2_ino_t ino,$/;"	p	signature:(ext2_filsys fs, ext2_ino_t dir, ext2_ino_t ino, char **name)
ext2fs_get_rec_len	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_get_rec_len(ext2_filsys fs,$/;"	p	signature:(ext2_filsys fs, struct ext2_dir_entry *dirent, unsigned int *rec_len)
ext2fs_get_refcount_size	./libe2fsck/e2fsck.h	/^extern blk_t ext2fs_get_refcount_size(ext2_refcount_t refcount);$/;"	p	signature:(ext2_refcount_t refcount)
ext2fs_group_blocks_count	./libmke2fs/ext2fs.h	/^extern int ext2fs_group_blocks_count(ext2_filsys fs, dgrp_t group);$/;"	p	signature:(ext2_filsys fs, dgrp_t group)
ext2fs_group_desc	./libmke2fs/ext2fs.h	/^extern struct ext2_group_desc *ext2fs_group_desc(ext2_filsys fs,$/;"	p	signature:(ext2_filsys fs, struct opaque_ext2_group_desc *gdp, dgrp_t group)
ext2fs_group_desc_csum	./libmke2fs/ext2fs.h	/^extern __u16 ext2fs_group_desc_csum(ext2_filsys fs, dgrp_t group);$/;"	p	signature:(ext2_filsys fs, dgrp_t group)
ext2fs_group_desc_csum_set	./libmke2fs/ext2fs.h	/^extern void ext2fs_group_desc_csum_set(ext2_filsys fs, dgrp_t group);$/;"	p	signature:(ext2_filsys fs, dgrp_t group)
ext2fs_group_desc_csum_verify	./libmke2fs/ext2fs.h	/^extern int ext2fs_group_desc_csum_verify(ext2_filsys fs, dgrp_t group);$/;"	p	signature:(ext2_filsys fs, dgrp_t group)
ext2fs_group_first_block	./libmke2fs/ext2fs.h	/^_INLINE_ blk_t ext2fs_group_first_block(ext2_filsys fs, dgrp_t group)$/;"	f	signature:(ext2_filsys fs, dgrp_t group)
ext2fs_group_first_block	./libmke2fs/ext2fs.h	/^extern blk_t ext2fs_group_first_block(ext2_filsys fs, dgrp_t group);$/;"	p	signature:(ext2_filsys fs, dgrp_t group)
ext2fs_group_first_block2	./libmke2fs/ext2fs.h	/^extern blk64_t ext2fs_group_first_block2(ext2_filsys fs, dgrp_t group);$/;"	p	signature:(ext2_filsys fs, dgrp_t group)
ext2fs_group_last_block	./libmke2fs/ext2fs.h	/^_INLINE_ blk_t ext2fs_group_last_block(ext2_filsys fs, dgrp_t group)$/;"	f	signature:(ext2_filsys fs, dgrp_t group)
ext2fs_group_last_block	./libmke2fs/ext2fs.h	/^extern blk_t ext2fs_group_last_block(ext2_filsys fs, dgrp_t group);$/;"	p	signature:(ext2_filsys fs, dgrp_t group)
ext2fs_group_last_block2	./libmke2fs/ext2fs.h	/^extern blk64_t ext2fs_group_last_block2(ext2_filsys fs, dgrp_t group);$/;"	p	signature:(ext2_filsys fs, dgrp_t group)
ext2fs_group_of_blk	./libmke2fs/ext2fs.h	/^_INLINE_ dgrp_t ext2fs_group_of_blk(ext2_filsys fs, blk_t blk)$/;"	f	signature:(ext2_filsys fs, blk_t blk)
ext2fs_group_of_blk	./libmke2fs/ext2fs.h	/^extern dgrp_t ext2fs_group_of_blk(ext2_filsys fs, blk_t blk);$/;"	p	signature:(ext2_filsys fs, blk_t blk)
ext2fs_group_of_blk2	./libmke2fs/ext2fs.h	/^extern dgrp_t ext2fs_group_of_blk2(ext2_filsys fs, blk64_t);$/;"	p	signature:(ext2_filsys fs, blk64_t)
ext2fs_group_of_ino	./libmke2fs/ext2fs.h	/^_INLINE_ dgrp_t ext2fs_group_of_ino(ext2_filsys fs, ext2_ino_t ino)$/;"	f	signature:(ext2_filsys fs, ext2_ino_t ino)
ext2fs_group_of_ino	./libmke2fs/ext2fs.h	/^extern dgrp_t ext2fs_group_of_ino(ext2_filsys fs, ext2_ino_t ino);$/;"	p	signature:(ext2_filsys fs, ext2_ino_t ino)
ext2fs_iblk_add_blocks	./libmke2fs/ext2fs.h	/^errcode_t ext2fs_iblk_add_blocks(ext2_filsys fs, struct ext2_inode *inode,$/;"	p	signature:(ext2_filsys fs, struct ext2_inode *inode, blk64_t num_blocks)
ext2fs_iblk_set	./libmke2fs/ext2fs.h	/^errcode_t ext2fs_iblk_set(ext2_filsys fs, struct ext2_inode *inode, blk64_t b);$/;"	p	signature:(ext2_filsys fs, struct ext2_inode *inode, blk64_t b)
ext2fs_iblk_sub_blocks	./libmke2fs/ext2fs.h	/^errcode_t ext2fs_iblk_sub_blocks(ext2_filsys fs, struct ext2_inode *inode,$/;"	p	signature:(ext2_filsys fs, struct ext2_inode *inode, blk64_t num_blocks)
ext2fs_icount_decrement	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_icount_decrement(ext2_icount_t icount, ext2_ino_t ino,$/;"	p	signature:(ext2_icount_t icount, ext2_ino_t ino, __u16 *ret)
ext2fs_icount_fetch	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_icount_fetch(ext2_icount_t icount, ext2_ino_t ino,$/;"	p	signature:(ext2_icount_t icount, ext2_ino_t ino, __u16 *ret)
ext2fs_icount_increment	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_icount_increment(ext2_icount_t icount, ext2_ino_t ino,$/;"	p	signature:(ext2_icount_t icount, ext2_ino_t ino, __u16 *ret)
ext2fs_icount_store	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_icount_store(ext2_icount_t icount, ext2_ino_t ino,$/;"	p	signature:(ext2_icount_t icount, ext2_ino_t ino, __u16 count)
ext2fs_icount_validate	./libmke2fs/ext2fs.h	/^errcode_t ext2fs_icount_validate(ext2_icount_t icount, FILE *);$/;"	p	signature:(ext2_icount_t icount, FILE *)
ext2fs_image_bitmap_read	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_image_bitmap_read(ext2_filsys fs, int fd, int flags);$/;"	p	signature:(ext2_filsys fs, int fd, int flags)
ext2fs_image_bitmap_write	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_image_bitmap_write(ext2_filsys fs, int fd, int flags);$/;"	p	signature:(ext2_filsys fs, int fd, int flags)
ext2fs_image_inode_read	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_image_inode_read(ext2_filsys fs, int fd, int flags);$/;"	p	signature:(ext2_filsys fs, int fd, int flags)
ext2fs_image_inode_write	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_image_inode_write(ext2_filsys fs, int fd, int flags);$/;"	p	signature:(ext2_filsys fs, int fd, int flags)
ext2fs_image_super_read	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_image_super_read(ext2_filsys fs, int fd, int flags);$/;"	p	signature:(ext2_filsys fs, int fd, int flags)
ext2fs_image_super_write	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_image_super_write(ext2_filsys fs, int fd, int flags);$/;"	p	signature:(ext2_filsys fs, int fd, int flags)
ext2fs_init_dblist	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_init_dblist(ext2_filsys fs, ext2_dblist *ret_dblist);$/;"	p	signature:(ext2_filsys fs, ext2_dblist *ret_dblist)
ext2fs_initialize	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_initialize(const char *name, int flags,$/;"	p	signature:(const char *name, int flags, struct ext2_super_block *param, io_manager manager, ext2_filsys *ret_fs)
ext2fs_inode_alloc_stats	./libmke2fs/ext2fs.h	/^void ext2fs_inode_alloc_stats(ext2_filsys fs, ext2_ino_t ino, int inuse);$/;"	p	signature:(ext2_filsys fs, ext2_ino_t ino, int inuse)
ext2fs_inode_alloc_stats2	./libmke2fs/ext2fs.h	/^void ext2fs_inode_alloc_stats2(ext2_filsys fs, ext2_ino_t ino,$/;"	p	signature:(ext2_filsys fs, ext2_ino_t ino, int inuse, int isdir)
ext2fs_inode_bitmap	./libmke2fs/ext2fs.h	/^typedef struct ext2fs_struct_generic_bitmap *ext2fs_inode_bitmap;$/;"	t	typeref:struct:ext2fs_struct_generic_bitmap
ext2fs_inode_bitmap_loc	./libmke2fs/ext2fs.h	/^extern blk64_t ext2fs_inode_bitmap_loc(ext2_filsys fs, dgrp_t group);$/;"	p	signature:(ext2_filsys fs, dgrp_t group)
ext2fs_inode_bitmap_loc_set	./libmke2fs/ext2fs.h	/^extern void ext2fs_inode_bitmap_loc_set(ext2_filsys fs, dgrp_t group,$/;"	p	signature:(ext2_filsys fs, dgrp_t group, blk64_t blk)
ext2fs_inode_data_blocks	./libmke2fs/ext2fs.h	/^_INLINE_ blk_t ext2fs_inode_data_blocks(ext2_filsys fs,$/;"	f	signature:(ext2_filsys fs, struct ext2_inode *inode)
ext2fs_inode_data_blocks	./libmke2fs/ext2fs.h	/^extern blk_t ext2fs_inode_data_blocks(ext2_filsys fs,$/;"	p	signature:(ext2_filsys fs, struct ext2_inode *inode)
ext2fs_inode_data_blocks2	./libmke2fs/ext2fs.h	/^extern blk64_t ext2fs_inode_data_blocks2(ext2_filsys fs,$/;"	p	signature:(ext2_filsys fs, struct ext2_inode *inode)
ext2fs_inode_has_valid_blocks	./libmke2fs/ext2fs.h	/^extern int ext2fs_inode_has_valid_blocks(struct ext2_inode *inode);$/;"	p	signature:(struct ext2_inode *inode)
ext2fs_inode_has_valid_blocks2	./libmke2fs/ext2fs.h	/^extern int ext2fs_inode_has_valid_blocks2(ext2_filsys fs,$/;"	p	signature:(ext2_filsys fs, struct ext2_inode *inode)
ext2fs_inode_i_blocks	./libmke2fs/ext2fs.h	/^extern blk64_t ext2fs_inode_i_blocks(ext2_filsys fs,$/;"	p	signature:(ext2_filsys fs, struct ext2_inode *inode)
ext2fs_inode_io_intern	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_inode_io_intern(ext2_filsys fs, ext2_ino_t ino,$/;"	p	signature:(ext2_filsys fs, ext2_ino_t ino, char **name)
ext2fs_inode_io_intern2	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_inode_io_intern2(ext2_filsys fs, ext2_ino_t ino,$/;"	p	signature:(ext2_filsys fs, ext2_ino_t ino, struct ext2_inode *inode, char **name)
ext2fs_inode_scan_flags	./libmke2fs/ext2fs.h	/^extern int ext2fs_inode_scan_flags(ext2_inode_scan scan, int set_flags,$/;"	p	signature:(ext2_inode_scan scan, int set_flags, int clear_flags)
ext2fs_inode_scan_goto_blockgroup	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_inode_scan_goto_blockgroup(ext2_inode_scan scan,$/;"	p	signature:(ext2_inode_scan scan, int group)
ext2fs_inode_table_loc	./libmke2fs/ext2fs.h	/^extern blk64_t ext2fs_inode_table_loc(ext2_filsys fs, dgrp_t group);$/;"	p	signature:(ext2_filsys fs, dgrp_t group)
ext2fs_inode_table_loc_set	./libmke2fs/ext2fs.h	/^extern void ext2fs_inode_table_loc_set(ext2_filsys fs, dgrp_t group,$/;"	p	signature:(ext2_filsys fs, dgrp_t group, blk64_t blk)
ext2fs_link	./libmke2fs/ext2fs.h	/^errcode_t ext2fs_link(ext2_filsys fs, ext2_ino_t dir, const char *name,$/;"	p	signature:(ext2_filsys fs, ext2_ino_t dir, const char *name, ext2_ino_t ino, int flags)
ext2fs_lookup	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_lookup(ext2_filsys fs, ext2_ino_t dir, const char *name,$/;"	p	signature:(ext2_filsys fs, ext2_ino_t dir, const char *name, int namelen, char *buf, ext2_ino_t *inode)
ext2fs_make_generic_bitmap	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_make_generic_bitmap(errcode_t magic, ext2_filsys fs,$/;"	p	signature:(errcode_t magic, ext2_filsys fs, __u32 start, __u32 end, __u32 real_end, const char *descr, char *init_map, ext2fs_generic_bitmap *ret)
ext2fs_map_cluster_block	./libmke2fs/ext2fs.h	/^errcode_t ext2fs_map_cluster_block(ext2_filsys fs, ext2_ino_t ino,$/;"	p	signature:(ext2_filsys fs, ext2_ino_t ino, struct ext2_inode *inode, blk64_t lblk, blk64_t *pblk)
ext2fs_mark_bb_dirty	./libmke2fs/ext2fs.h	/^_INLINE_ void ext2fs_mark_bb_dirty(ext2_filsys fs)$/;"	f	signature:(ext2_filsys fs)
ext2fs_mark_bb_dirty	./libmke2fs/ext2fs.h	/^extern void ext2fs_mark_bb_dirty(ext2_filsys fs);$/;"	p	signature:(ext2_filsys fs)
ext2fs_mark_changed	./libmke2fs/ext2fs.h	/^_INLINE_ void ext2fs_mark_changed(ext2_filsys fs)$/;"	f	signature:(ext2_filsys fs)
ext2fs_mark_changed	./libmke2fs/ext2fs.h	/^extern void ext2fs_mark_changed(ext2_filsys fs);$/;"	p	signature:(ext2_filsys fs)
ext2fs_mark_generic_bmap	./libmke2fs/ext2fsP.h	/^extern int ext2fs_mark_generic_bmap(ext2fs_generic_bitmap bitmap,$/;"	p	signature:(ext2fs_generic_bitmap bitmap, __u64 arg)
ext2fs_mark_ib_dirty	./libmke2fs/ext2fs.h	/^_INLINE_ void ext2fs_mark_ib_dirty(ext2_filsys fs)$/;"	f	signature:(ext2_filsys fs)
ext2fs_mark_ib_dirty	./libmke2fs/ext2fs.h	/^extern void ext2fs_mark_ib_dirty(ext2_filsys fs);$/;"	p	signature:(ext2_filsys fs)
ext2fs_mark_super_dirty	./libmke2fs/ext2fs.h	/^_INLINE_ void ext2fs_mark_super_dirty(ext2_filsys fs)$/;"	f	signature:(ext2_filsys fs)
ext2fs_mark_super_dirty	./libmke2fs/ext2fs.h	/^extern void ext2fs_mark_super_dirty(ext2_filsys fs);$/;"	p	signature:(ext2_filsys fs)
ext2fs_mark_valid	./libmke2fs/ext2fs.h	/^_INLINE_ void ext2fs_mark_valid(ext2_filsys fs)$/;"	f	signature:(ext2_filsys fs)
ext2fs_mark_valid	./libmke2fs/ext2fs.h	/^extern void ext2fs_mark_valid(ext2_filsys fs);$/;"	p	signature:(ext2_filsys fs)
ext2fs_mem_is_zero	./libmke2fs/ext2fsP.h	/^extern int ext2fs_mem_is_zero(const char *mem, size_t len);$/;"	p	signature:(const char *mem, size_t len)
ext2fs_mkdir	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_mkdir(ext2_filsys fs, ext2_ino_t parent, ext2_ino_t inum,$/;"	p	signature:(ext2_filsys fs, ext2_ino_t parent, ext2_ino_t inum, const char *name)
ext2fs_mmp_clear	./libmke2fs/ext2fs.h	/^errcode_t ext2fs_mmp_clear(ext2_filsys fs);$/;"	p	signature:(ext2_filsys fs)
ext2fs_mmp_init	./libmke2fs/ext2fs.h	/^errcode_t ext2fs_mmp_init(ext2_filsys fs);$/;"	p	signature:(ext2_filsys fs)
ext2fs_mmp_new_seq	./libmke2fs/ext2fs.h	/^unsigned ext2fs_mmp_new_seq(void);$/;"	p	signature:(void)
ext2fs_mmp_read	./libmke2fs/ext2fs.h	/^errcode_t ext2fs_mmp_read(ext2_filsys fs, blk64_t mmp_blk, void *buf);$/;"	p	signature:(ext2_filsys fs, blk64_t mmp_blk, void *buf)
ext2fs_mmp_start	./libmke2fs/ext2fs.h	/^errcode_t ext2fs_mmp_start(ext2_filsys fs);$/;"	p	signature:(ext2_filsys fs)
ext2fs_mmp_stop	./libmke2fs/ext2fs.h	/^errcode_t ext2fs_mmp_stop(ext2_filsys fs);$/;"	p	signature:(ext2_filsys fs)
ext2fs_mmp_update	./libmke2fs/ext2fs.h	/^errcode_t ext2fs_mmp_update(ext2_filsys fs);$/;"	p	signature:(ext2_filsys fs)
ext2fs_mmp_write	./libmke2fs/ext2fs.h	/^errcode_t ext2fs_mmp_write(ext2_filsys fs, blk64_t mmp_blk, void *buf);$/;"	p	signature:(ext2_filsys fs, blk64_t mmp_blk, void *buf)
ext2fs_namei	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_namei(ext2_filsys fs, ext2_ino_t root, ext2_ino_t cwd,$/;"	p	signature:(ext2_filsys fs, ext2_ino_t root, ext2_ino_t cwd, const char *name, ext2_ino_t *inode)
ext2fs_namei_follow	./libmke2fs/ext2fs.h	/^errcode_t ext2fs_namei_follow(ext2_filsys fs, ext2_ino_t root, ext2_ino_t cwd,$/;"	p	signature:(ext2_filsys fs, ext2_ino_t root, ext2_ino_t cwd, const char *name, ext2_ino_t *inode)
ext2fs_native_flag	./libmke2fs/ext2fs.h	/^int ext2fs_native_flag(void);$/;"	p	signature:(void)
ext2fs_needs_large_file_feature	./libmke2fs/ext2fs.h	/^static inline int ext2fs_needs_large_file_feature(unsigned long long file_size)$/;"	f	signature:(unsigned long long file_size)
ext2fs_new_block	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_new_block(ext2_filsys fs, blk_t goal,$/;"	p	signature:(ext2_filsys fs, blk_t goal, ext2fs_block_bitmap map, blk_t *ret)
ext2fs_new_block2	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_new_block2(ext2_filsys fs, blk64_t goal,$/;"	p	signature:(ext2_filsys fs, blk64_t goal, ext2fs_block_bitmap map, blk64_t *ret)
ext2fs_new_dir_block	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_new_dir_block(ext2_filsys fs, ext2_ino_t dir_ino,$/;"	p	signature:(ext2_filsys fs, ext2_ino_t dir_ino, ext2_ino_t parent_ino, char **block)
ext2fs_new_inode	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_new_inode(ext2_filsys fs, ext2_ino_t dir, int mode,$/;"	p	signature:(ext2_filsys fs, ext2_ino_t dir, int mode, ext2fs_inode_bitmap map, ext2_ino_t *ret)
ext2fs_numeric_progress_close	./libmke2fs/ext2fsP.h	/^extern void ext2fs_numeric_progress_close(ext2_filsys fs,$/;"	p	signature:(ext2_filsys fs, struct ext2fs_numeric_progress_struct * progress, const char *message)
ext2fs_numeric_progress_init	./libmke2fs/ext2fsP.h	/^extern void ext2fs_numeric_progress_init(ext2_filsys fs,$/;"	p	signature:(ext2_filsys fs, struct ext2fs_numeric_progress_struct * progress, const char *label, __u64 max)
ext2fs_numeric_progress_struct	./libmke2fs/ext2fsP.h	/^struct ext2fs_numeric_progress_struct {$/;"	s
ext2fs_numeric_progress_struct::log_max	./libmke2fs/ext2fsP.h	/^	int		log_max;$/;"	m	struct:ext2fs_numeric_progress_struct	access:public
ext2fs_numeric_progress_struct::max	./libmke2fs/ext2fsP.h	/^	__u64		max;$/;"	m	struct:ext2fs_numeric_progress_struct	access:public
ext2fs_numeric_progress_struct::skip_progress	./libmke2fs/ext2fsP.h	/^	int		skip_progress;$/;"	m	struct:ext2fs_numeric_progress_struct	access:public
ext2fs_numeric_progress_update	./libmke2fs/ext2fsP.h	/^extern void ext2fs_numeric_progress_update(ext2_filsys fs,$/;"	p	signature:(ext2_filsys fs, struct ext2fs_numeric_progress_struct * progress, __u64 val)
ext2fs_open	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_open(const char *name, int flags, int superblock,$/;"	p	signature:(const char *name, int flags, int superblock, unsigned int block_size, io_manager manager, ext2_filsys *ret_fs)
ext2fs_open2	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_open2(const char *name, const char *io_options,$/;"	p	signature:(const char *name, const char *io_options, int flags, int superblock, unsigned int block_size, io_manager manager, ext2_filsys *ret_fs)
ext2fs_open_file	./libmke2fs/ext2fs.h	/^extern int ext2fs_open_file(const char *pathname, int flags, mode_t mode);$/;"	p	signature:(const char *pathname, int flags, mode_t mode)
ext2fs_open_inode_scan	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_open_inode_scan(ext2_filsys fs, int buffer_blocks,$/;"	p	signature:(ext2_filsys fs, int buffer_blocks, ext2_inode_scan *ret_scan)
ext2fs_parse_version_string	./libmke2fs/ext2fs.h	/^extern int ext2fs_parse_version_string(const char *ver_string);$/;"	p	signature:(const char *ver_string)
ext2fs_process_dir_block	./libmke2fs/ext2fsP.h	/^extern int ext2fs_process_dir_block(ext2_filsys  	fs,$/;"	p	signature:(ext2_filsys fs, blk64_t *blocknr, e2_blkcnt_t blockcnt, blk64_t ref_block, int ref_offset, void *priv_data)
ext2fs_punch	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_punch(ext2_filsys fs, ext2_ino_t ino,$/;"	p	signature:(ext2_filsys fs, ext2_ino_t ino, struct ext2_inode *inode, char *block_buf, blk64_t start, blk64_t end)
ext2fs_r_blocks_count	./libmke2fs/ext2fs.h	/^extern blk64_t ext2fs_r_blocks_count(struct ext2_super_block *super);$/;"	p	signature:(struct ext2_super_block *super)
ext2fs_r_blocks_count_add	./libmke2fs/ext2fs.h	/^extern void ext2fs_r_blocks_count_add(struct ext2_super_block *super,$/;"	p	signature:(struct ext2_super_block *super, blk64_t blk)
ext2fs_r_blocks_count_set	./libmke2fs/ext2fs.h	/^extern void ext2fs_r_blocks_count_set(struct ext2_super_block *super,$/;"	p	signature:(struct ext2_super_block *super, blk64_t blk)
ext2fs_read_bb_FILE	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_read_bb_FILE(ext2_filsys fs, FILE *f,$/;"	p	signature:(ext2_filsys fs, FILE *f, ext2_badblocks_list *bb_list, void (*invalid)(ext2_filsys fs, blk_t blk))
ext2fs_read_bb_FILE2	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_read_bb_FILE2(ext2_filsys fs, FILE *f,$/;"	p	signature:(ext2_filsys fs, FILE *f, ext2_badblocks_list *bb_list, void *priv_data, void (*invalid)(ext2_filsys fs, blk_t blk, char *badstr, void *priv_data))
ext2fs_read_bb_inode	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_read_bb_inode(ext2_filsys fs,$/;"	p	signature:(ext2_filsys fs, ext2_badblocks_list *bb_list)
ext2fs_read_bitmaps	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_read_bitmaps(ext2_filsys fs);$/;"	p	signature:(ext2_filsys fs)
ext2fs_read_block_bitmap	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_read_block_bitmap(ext2_filsys fs);$/;"	p	signature:(ext2_filsys fs)
ext2fs_read_dir_block	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_read_dir_block(ext2_filsys fs, blk_t block,$/;"	p	signature:(ext2_filsys fs, blk_t block, void *buf)
ext2fs_read_dir_block2	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_read_dir_block2(ext2_filsys fs, blk_t block,$/;"	p	signature:(ext2_filsys fs, blk_t block, void *buf, int flags)
ext2fs_read_dir_block3	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_read_dir_block3(ext2_filsys fs, blk64_t block,$/;"	p	signature:(ext2_filsys fs, blk64_t block, void *buf, int flags)
ext2fs_read_ext_attr	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_read_ext_attr(ext2_filsys fs, blk_t block, void *buf);$/;"	p	signature:(ext2_filsys fs, blk_t block, void *buf)
ext2fs_read_ext_attr2	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_read_ext_attr2(ext2_filsys fs, blk64_t block,$/;"	p	signature:(ext2_filsys fs, blk64_t block, void *buf)
ext2fs_read_ind_block	./libmke2fs/ext2fs.h	/^errcode_t ext2fs_read_ind_block(ext2_filsys fs, blk_t blk, void *buf);$/;"	p	signature:(ext2_filsys fs, blk_t blk, void *buf)
ext2fs_read_inode	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_read_inode (ext2_filsys fs, ext2_ino_t ino,$/;"	p	signature:(ext2_filsys fs, ext2_ino_t ino, struct ext2_inode * inode)
ext2fs_read_inode_bitmap	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_read_inode_bitmap (ext2_filsys fs);$/;"	p	signature:(ext2_filsys fs)
ext2fs_read_inode_full	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_read_inode_full(ext2_filsys fs, ext2_ino_t ino,$/;"	p	signature:(ext2_filsys fs, ext2_ino_t ino, struct ext2_inode * inode, int bufsize)
ext2fs_reserve_super_and_bgd	./libmke2fs/ext2fs.h	/^extern int ext2fs_reserve_super_and_bgd(ext2_filsys fs,$/;"	p	signature:(ext2_filsys fs, dgrp_t group, ext2fs_block_bitmap bmap)
ext2fs_resize_block_bitmap	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_resize_block_bitmap(__u32 new_end, __u32 new_real_end,$/;"	p	signature:(__u32 new_end, __u32 new_real_end, ext2fs_block_bitmap bmap)
ext2fs_resize_block_bitmap2	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_resize_block_bitmap2(__u64 new_end,$/;"	p	signature:(__u64 new_end, __u64 new_real_end, ext2fs_block_bitmap bmap)
ext2fs_resize_generic_bitmap	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_resize_generic_bitmap(errcode_t magic,$/;"	p	signature:(errcode_t magic, __u32 new_end, __u32 new_real_end, ext2fs_generic_bitmap bmap)
ext2fs_resize_generic_bmap	./libmke2fs/ext2fs.h	/^errcode_t ext2fs_resize_generic_bmap(ext2fs_generic_bitmap bmap,$/;"	p	signature:(ext2fs_generic_bitmap bmap, __u64 new_end, __u64 new_real_end)
ext2fs_resize_generic_bmap	./libmke2fs/ext2fsP.h	/^extern errcode_t ext2fs_resize_generic_bmap(ext2fs_generic_bitmap bmap,$/;"	p	signature:(ext2fs_generic_bitmap bmap, __u64 new_end, __u64 new_real_end)
ext2fs_resize_inode_bitmap	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_resize_inode_bitmap(__u32 new_end, __u32 new_real_end,$/;"	p	signature:(__u32 new_end, __u32 new_real_end, ext2fs_inode_bitmap bmap)
ext2fs_resize_inode_bitmap2	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_resize_inode_bitmap2(__u64 new_end,$/;"	p	signature:(__u64 new_end, __u64 new_real_end, ext2fs_inode_bitmap bmap)
ext2fs_resize_mem	./libmke2fs/ext2fs.h	/^_INLINE_ errcode_t ext2fs_resize_mem(unsigned long EXT2FS_ATTR((unused)) old_size,$/;"	f	signature:(unsigned long EXT2FS_ATTR((unused)) old_size, unsigned long size, void *ptr)
ext2fs_resize_mem	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_resize_mem(unsigned long old_size,$/;"	p	signature:(unsigned long old_size, unsigned long size, void *ptr)
ext2fs_rewrite_to_io	./libmke2fs/ext2fs.h	/^errcode_t ext2fs_rewrite_to_io(ext2_filsys fs, io_channel new_io);$/;"	p	signature:(ext2_filsys fs, io_channel new_io)
ext2fs_set_alloc_block_callback	./libmke2fs/ext2fs.h	/^extern void ext2fs_set_alloc_block_callback(ext2_filsys fs,$/;"	p	signature:(ext2_filsys fs, errcode_t (*func)(ext2_filsys fs, blk64_t goal, blk64_t *ret), errcode_t (**old)(ext2_filsys fs, blk64_t goal, blk64_t *ret))
ext2fs_set_block_alloc_stats_callback	./libmke2fs/ext2fs.h	/^extern void ext2fs_set_block_alloc_stats_callback(ext2_filsys fs,$/;"	p	signature:(ext2_filsys fs, void (*func)(ext2_filsys fs, blk64_t blk, int inuse), void (**old)(ext2_filsys fs, blk64_t blk, int inuse))
ext2fs_set_block_bitmap_range	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_set_block_bitmap_range(ext2fs_block_bitmap bmap,$/;"	p	signature:(ext2fs_block_bitmap bmap, blk_t start, unsigned int num, void *in)
ext2fs_set_block_bitmap_range2	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_set_block_bitmap_range2(ext2fs_block_bitmap bmap,$/;"	p	signature:(ext2fs_block_bitmap bmap, blk64_t start, size_t num, void *in)
ext2fs_set_data_io	./libmke2fs/ext2fs.h	/^errcode_t ext2fs_set_data_io(ext2_filsys fs, io_channel new_io);$/;"	p	signature:(ext2_filsys fs, io_channel new_io)
ext2fs_set_dir_block	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_set_dir_block(ext2_dblist dblist, ext2_ino_t ino,$/;"	p	signature:(ext2_dblist dblist, ext2_ino_t ino, blk_t blk, int blockcnt)
ext2fs_set_dir_block2	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_set_dir_block2(ext2_dblist dblist, ext2_ino_t ino,$/;"	p	signature:(ext2_dblist dblist, ext2_ino_t ino, blk64_t blk, e2_blkcnt_t blockcnt)
ext2fs_set_gdt_csum	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_set_gdt_csum(ext2_filsys fs);$/;"	p	signature:(ext2_filsys fs)
ext2fs_set_generic_bitmap_padding	./libmke2fs/ext2fs.h	/^extern void ext2fs_set_generic_bitmap_padding(ext2fs_generic_bitmap map);$/;"	p	signature:(ext2fs_generic_bitmap map)
ext2fs_set_generic_bitmap_range	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_set_generic_bitmap_range(ext2fs_generic_bitmap bmap,$/;"	p	signature:(ext2fs_generic_bitmap bmap, errcode_t magic, __u32 start, __u32 num, void *in)
ext2fs_set_generic_bmap_padding	./libmke2fs/ext2fs.h	/^void ext2fs_set_generic_bmap_padding(ext2fs_generic_bitmap bmap);$/;"	p	signature:(ext2fs_generic_bitmap bmap)
ext2fs_set_generic_bmap_range	./libmke2fs/ext2fs.h	/^errcode_t ext2fs_set_generic_bmap_range(ext2fs_generic_bitmap bmap,$/;"	p	signature:(ext2fs_generic_bitmap bmap, __u64 start, unsigned int num, void *in)
ext2fs_set_generic_bmap_range	./libmke2fs/ext2fsP.h	/^extern errcode_t ext2fs_set_generic_bmap_range(ext2fs_generic_bitmap bitmap,$/;"	p	signature:(ext2fs_generic_bitmap bitmap, __u64 start, unsigned int num, void *in)
ext2fs_set_inode_bitmap_range	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_set_inode_bitmap_range(ext2fs_inode_bitmap bmap,$/;"	p	signature:(ext2fs_inode_bitmap bmap, ext2_ino_t start, unsigned int num, void *in)
ext2fs_set_inode_bitmap_range2	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_set_inode_bitmap_range2(ext2fs_inode_bitmap bmap,$/;"	p	signature:(ext2fs_inode_bitmap bmap, __u64 start, size_t num, void *in)
ext2fs_set_inode_callback	./libmke2fs/ext2fs.h	/^extern void ext2fs_set_inode_callback$/;"	p	signature:(ext2_inode_scan scan, errcode_t (*done_group)(ext2_filsys fs, ext2_inode_scan scan, dgrp_t group, void * priv_data), void *done_group_data)
ext2fs_set_rec_len	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_set_rec_len(ext2_filsys fs,$/;"	p	signature:(ext2_filsys fs, unsigned int len, struct ext2_dir_entry *dirent)
ext2fs_stat	./libmke2fs/ext2fs.h	/^extern int ext2fs_stat(const char *path, ext2fs_struct_stat *buf);$/;"	p	signature:(const char *path, ext2fs_struct_stat *buf)
ext2fs_struct_stat	./libmke2fs/ext2fs.h	/^typedef struct stat ext2fs_struct_stat;$/;"	t	typeref:struct:stat
ext2fs_struct_stat	./libmke2fs/ext2fs.h	/^typedef struct stat64 ext2fs_struct_stat;$/;"	t	typeref:struct:stat64
ext2fs_super_and_bgd_loc	./libmke2fs/ext2fs.h	/^extern int ext2fs_super_and_bgd_loc(ext2_filsys fs,$/;"	p	signature:(ext2_filsys fs, dgrp_t group, blk_t *ret_super_blk, blk_t *ret_old_desc_blk, blk_t *ret_new_desc_blk, int *ret_meta_bg)
ext2fs_super_and_bgd_loc2	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_super_and_bgd_loc2(ext2_filsys fs,$/;"	p	signature:(ext2_filsys fs, dgrp_t group, blk64_t *ret_super_blk, blk64_t *ret_old_desc_blk, blk64_t *ret_new_desc_blk, blk_t *ret_used_blks)
ext2fs_swap_ext_attr	./libmke2fs/ext2fs.h	/^extern void ext2fs_swap_ext_attr(char *to, char *from, int bufsize,$/;"	p	signature:(char *to, char *from, int bufsize, int has_header)
ext2fs_swap_ext_attr_entry	./libmke2fs/ext2fs.h	/^extern void ext2fs_swap_ext_attr_entry(struct ext2_ext_attr_entry *to_entry,$/;"	p	signature:(struct ext2_ext_attr_entry *to_entry, struct ext2_ext_attr_entry *from_entry)
ext2fs_swap_ext_attr_header	./libmke2fs/ext2fs.h	/^extern void ext2fs_swap_ext_attr_header(struct ext2_ext_attr_header *to_header,$/;"	p	signature:(struct ext2_ext_attr_header *to_header, struct ext2_ext_attr_header *from_hdr)
ext2fs_swap_group_desc	./libmke2fs/ext2fs.h	/^extern void ext2fs_swap_group_desc(struct ext2_group_desc *gdp);$/;"	p	signature:(struct ext2_group_desc *gdp)
ext2fs_swap_group_desc2	./libmke2fs/ext2fs.h	/^extern void ext2fs_swap_group_desc2(ext2_filsys, struct ext2_group_desc *gdp);$/;"	p	signature:(ext2_filsys, struct ext2_group_desc *gdp)
ext2fs_swap_inode	./libmke2fs/ext2fs.h	/^extern void ext2fs_swap_inode(ext2_filsys fs,struct ext2_inode *t,$/;"	p	signature:(ext2_filsys fs,struct ext2_inode *t, struct ext2_inode *f, int hostorder)
ext2fs_swap_inode_full	./libmke2fs/ext2fs.h	/^extern void ext2fs_swap_inode_full(ext2_filsys fs, struct ext2_inode_large *t,$/;"	p	signature:(ext2_filsys fs, struct ext2_inode_large *t, struct ext2_inode_large *f, int hostorder, int bufsize)
ext2fs_swap_mmp	./libmke2fs/ext2fs.h	/^extern void ext2fs_swap_mmp(struct mmp_struct *mmp);$/;"	p	signature:(struct mmp_struct *mmp)
ext2fs_swap_super	./libmke2fs/ext2fs.h	/^extern void ext2fs_swap_super(struct ext2_super_block * super);$/;"	p	signature:(struct ext2_super_block * super)
ext2fs_symlink	./libmke2fs/ext2fs.h	/^errcode_t ext2fs_symlink(ext2_filsys fs, ext2_ino_t parent, ext2_ino_t ino,$/;"	p	signature:(ext2_filsys fs, ext2_ino_t parent, ext2_ino_t ino, const char *name, char *target)
ext2fs_sync_device	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_sync_device(int fd, int flushb);$/;"	p	signature:(int fd, int flushb)
ext2fs_test_bb_dirty	./libmke2fs/ext2fs.h	/^_INLINE_ int ext2fs_test_bb_dirty(ext2_filsys fs)$/;"	f	signature:(ext2_filsys fs)
ext2fs_test_bb_dirty	./libmke2fs/ext2fs.h	/^extern int ext2fs_test_bb_dirty(ext2_filsys fs);$/;"	p	signature:(ext2_filsys fs)
ext2fs_test_changed	./libmke2fs/ext2fs.h	/^_INLINE_ int ext2fs_test_changed(ext2_filsys fs)$/;"	f	signature:(ext2_filsys fs)
ext2fs_test_changed	./libmke2fs/ext2fs.h	/^extern int ext2fs_test_changed(ext2_filsys fs);$/;"	p	signature:(ext2_filsys fs)
ext2fs_test_generic_bmap	./libmke2fs/ext2fsP.h	/^extern int ext2fs_test_generic_bmap(ext2fs_generic_bitmap bitmap,$/;"	p	signature:(ext2fs_generic_bitmap bitmap, __u64 arg)
ext2fs_test_ib_dirty	./libmke2fs/ext2fs.h	/^_INLINE_ int ext2fs_test_ib_dirty(ext2_filsys fs)$/;"	f	signature:(ext2_filsys fs)
ext2fs_test_ib_dirty	./libmke2fs/ext2fs.h	/^extern int ext2fs_test_ib_dirty(ext2_filsys fs);$/;"	p	signature:(ext2_filsys fs)
ext2fs_test_valid	./libmke2fs/ext2fs.h	/^_INLINE_ int ext2fs_test_valid(ext2_filsys fs)$/;"	f	signature:(ext2_filsys fs)
ext2fs_test_valid	./libmke2fs/ext2fs.h	/^extern int ext2fs_test_valid(ext2_filsys fs);$/;"	p	signature:(ext2_filsys fs)
ext2fs_u32_copy	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_u32_copy(ext2_u32_list src, ext2_u32_list *dest);$/;"	p	signature:(ext2_u32_list src, ext2_u32_list *dest)
ext2fs_u32_list_add	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_u32_list_add(ext2_u32_list bb, __u32 blk);$/;"	p	signature:(ext2_u32_list bb, __u32 blk)
ext2fs_u32_list_count	./libmke2fs/ext2fs.h	/^extern int ext2fs_u32_list_count(ext2_u32_list bb);$/;"	p	signature:(ext2_u32_list bb)
ext2fs_u32_list_create	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_u32_list_create(ext2_u32_list *ret, int size);$/;"	p	signature:(ext2_u32_list *ret, int size)
ext2fs_u32_list_del	./libmke2fs/ext2fs.h	/^extern int ext2fs_u32_list_del(ext2_u32_list bb, __u32 blk);$/;"	p	signature:(ext2_u32_list bb, __u32 blk)
ext2fs_u32_list_equal	./libmke2fs/ext2fs.h	/^extern int ext2fs_u32_list_equal(ext2_u32_list bb1, ext2_u32_list bb2);$/;"	p	signature:(ext2_u32_list bb1, ext2_u32_list bb2)
ext2fs_u32_list_find	./libmke2fs/ext2fs.h	/^extern int ext2fs_u32_list_find(ext2_u32_list bb, __u32 blk);$/;"	p	signature:(ext2_u32_list bb, __u32 blk)
ext2fs_u32_list_free	./libmke2fs/ext2fs.h	/^extern void ext2fs_u32_list_free(ext2_u32_list bb);$/;"	p	signature:(ext2_u32_list bb)
ext2fs_u32_list_iterate	./libmke2fs/ext2fs.h	/^extern int ext2fs_u32_list_iterate(ext2_u32_iterate iter, blk_t *blk);$/;"	p	signature:(ext2_u32_iterate iter, blk_t *blk)
ext2fs_u32_list_iterate_begin	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_u32_list_iterate_begin(ext2_u32_list bb,$/;"	p	signature:(ext2_u32_list bb, ext2_u32_iterate *ret)
ext2fs_u32_list_iterate_end	./libmke2fs/ext2fs.h	/^extern void ext2fs_u32_list_iterate_end(ext2_u32_iterate iter);$/;"	p	signature:(ext2_u32_iterate iter)
ext2fs_u32_list_test	./libmke2fs/ext2fs.h	/^extern int ext2fs_u32_list_test(ext2_u32_list bb, blk_t blk);$/;"	p	signature:(ext2_u32_list bb, blk_t blk)
ext2fs_unlink	./libmke2fs/ext2fs.h	/^errcode_t ext2fs_unlink(ext2_filsys fs, ext2_ino_t dir, const char *name,$/;"	p	signature:(ext2_filsys fs, ext2_ino_t dir, const char *name, ext2_ino_t ino, int flags)
ext2fs_unmark_generic_bmap	./libmke2fs/ext2fsP.h	/^extern int ext2fs_unmark_generic_bmap(ext2fs_generic_bitmap bitmap,$/;"	p	signature:(ext2fs_generic_bitmap bitmap, __u64 arg)
ext2fs_unmark_valid	./libmke2fs/ext2fs.h	/^_INLINE_ void ext2fs_unmark_valid(ext2_filsys fs)$/;"	f	signature:(ext2_filsys fs)
ext2fs_unmark_valid	./libmke2fs/ext2fs.h	/^extern void ext2fs_unmark_valid(ext2_filsys fs);$/;"	p	signature:(ext2_filsys fs)
ext2fs_update_bb_inode	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_update_bb_inode(ext2_filsys fs,$/;"	p	signature:(ext2_filsys fs, ext2_badblocks_list bb_list)
ext2fs_update_dynamic_rev	./libmke2fs/ext2fs.h	/^extern void ext2fs_update_dynamic_rev(ext2_filsys fs);$/;"	p	signature:(ext2_filsys fs)
ext2fs_warn_bitmap32	./libmke2fs/ext2fsP.h	/^extern void ext2fs_warn_bitmap32(ext2fs_generic_bitmap bitmap,const char *func);$/;"	p	signature:(ext2fs_generic_bitmap bitmap,const char *func)
ext2fs_write_bb_FILE	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_write_bb_FILE(ext2_badblocks_list bb_list,$/;"	p	signature:(ext2_badblocks_list bb_list, unsigned int flags, FILE *f)
ext2fs_write_bitmaps	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_write_bitmaps(ext2_filsys fs);$/;"	p	signature:(ext2_filsys fs)
ext2fs_write_block_bitmap	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_write_block_bitmap (ext2_filsys fs);$/;"	p	signature:(ext2_filsys fs)
ext2fs_write_dir_block	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_write_dir_block(ext2_filsys fs, blk_t block,$/;"	p	signature:(ext2_filsys fs, blk_t block, void *buf)
ext2fs_write_dir_block2	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_write_dir_block2(ext2_filsys fs, blk_t block,$/;"	p	signature:(ext2_filsys fs, blk_t block, void *buf, int flags)
ext2fs_write_dir_block3	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_write_dir_block3(ext2_filsys fs, blk64_t block,$/;"	p	signature:(ext2_filsys fs, blk64_t block, void *buf, int flags)
ext2fs_write_ext_attr	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_write_ext_attr(ext2_filsys fs, blk_t block,$/;"	p	signature:(ext2_filsys fs, blk_t block, void *buf)
ext2fs_write_ext_attr2	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_write_ext_attr2(ext2_filsys fs, blk64_t block,$/;"	p	signature:(ext2_filsys fs, blk64_t block, void *buf)
ext2fs_write_ind_block	./libmke2fs/ext2fs.h	/^errcode_t ext2fs_write_ind_block(ext2_filsys fs, blk_t blk, void *buf);$/;"	p	signature:(ext2_filsys fs, blk_t blk, void *buf)
ext2fs_write_inode	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_write_inode(ext2_filsys fs, ext2_ino_t ino,$/;"	p	signature:(ext2_filsys fs, ext2_ino_t ino, struct ext2_inode * inode)
ext2fs_write_inode_bitmap	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_write_inode_bitmap(ext2_filsys fs);$/;"	p	signature:(ext2_filsys fs)
ext2fs_write_inode_full	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_write_inode_full(ext2_filsys fs, ext2_ino_t ino,$/;"	p	signature:(ext2_filsys fs, ext2_ino_t ino, struct ext2_inode * inode, int bufsize)
ext2fs_write_new_inode	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_write_new_inode(ext2_filsys fs, ext2_ino_t ino,$/;"	p	signature:(ext2_filsys fs, ext2_ino_t ino, struct ext2_inode * inode)
ext2fs_zero_blocks	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_zero_blocks(ext2_filsys fs, blk_t blk, int num,$/;"	p	signature:(ext2_filsys fs, blk_t blk, int num, blk_t *ret_blk, int *ret_count)
ext2fs_zero_blocks2	./libmke2fs/ext2fs.h	/^extern errcode_t ext2fs_zero_blocks2(ext2_filsys fs, blk64_t blk, int num,$/;"	p	signature:(ext2_filsys fs, blk64_t blk, int num, blk64_t *ret_blk, int *ret_count)
ext_attr_ver	./libe2fsck/e2fsck.h	/^	int ext_attr_ver;$/;"	m	struct:e2fsck_struct	access:public
ext_journal	./libe2fsck/e2fsck_lib.h	/^	char ext_journal[256];$/;"	m	struct:e2fsck_cfg	access:public
ext_opts	./libe2fsck/e2fsck_lib.h	/^	struct e2fsck_extended_opt ext_opts;$/;"	m	struct:e2fsck_cfg	typeref:struct:e2fsck_cfg::e2fsck_extended_opt	access:public
ext_opts	./libmke2fs/mke2fs.h	/^	struct extended_opt ext_opts;$/;"	m	struct:e2fs_cfg	typeref:struct:e2fs_cfg::extended_opt	access:public
extended_opt	./libmke2fs/mke2fs.h	/^struct extended_opt {$/;"	s
extended_opt::desc_size	./libmke2fs/mke2fs.h	/^	__u16 desc_size;$/;"	m	struct:extended_opt	access:public
extended_opt::discard	./libmke2fs/mke2fs.h	/^	int discard;	$/;"	m	struct:extended_opt	access:public
extended_opt::mmp_update_interval	./libmke2fs/mke2fs.h	/^	__u16 mmp_update_interval;$/;"	m	struct:extended_opt	access:public
extended_opt::stride	./libmke2fs/mke2fs.h	/^	__u16 stride;$/;"	m	struct:extended_opt	access:public
extended_opt::stripe_width	./libmke2fs/mke2fs.h	/^	__u32 stripe_width;$/;"	m	struct:extended_opt	access:public
extended_opt::test_fs	./libmke2fs/mke2fs.h	/^	int test_fs;$/;"	m	struct:extended_opt	access:public
extent_depth_count	./libe2fsck/e2fsck.h	/^	__u32 extent_depth_count[MAX_EXTENT_DEPTH_COUNT];$/;"	m	struct:e2fsck_struct	access:public
external	./libmdadm/mdadm.h	/^	int external;$/;"	m	struct:superswitch	access:public
failed_disks	./libmdadm/md_p.h	/^	__u32 failed_disks;	\/*  4 Number of failed disks		      *\/$/;"	m	struct:mdp_superblock_s	access:public
failed_disks	./libmdadm/md_u.h	/^	int failed_disks;	\/*  4 Number of failed disks		      *\/$/;"	m	struct:mdu_array_info_s	access:public
fatal_error	./libe2fsck/e2fsck.h	/^extern void fatal_error(e2fsck_t ctx, const char * fmt_string);$/;"	p	signature:(e2fsck_t ctx, const char * fmt_string)
fd2devnm	./libmdadm/mdadm.h	/^extern char *fd2devnm(int fd);$/;"	p	signature:(int fd)
figure_journal_size	./libmke2fs/util.h	/^extern unsigned int figure_journal_size(int size, ext2_filsys fs);$/;"	p	signature:(int size, ext2_filsys fs)
file	./libmdadm/bitmap.h	/^	struct file *file; \/* backing disk file *\/$/;"	m	struct:bitmap	typeref:struct:bitmap::file	access:public
file_pages	./libmdadm/bitmap.h	/^	unsigned long file_pages; \/* number of pages in the file *\/$/;"	m	struct:bitmap	access:public
file_path	./libmdadm/bitmap.h	/^char *file_path(struct file *file, char *buf, int count);$/;"	p	signature:(struct file *file, char *buf, int count)
filemap	./libmdadm/bitmap.h	/^	struct page **filemap; \/* list of cache pages for the file *\/$/;"	m	struct:bitmap	typeref:struct:bitmap::page	access:public
filemap_attr	./libmdadm/bitmap.h	/^	unsigned long *filemap_attr; \/* attributes associated w\/ filemap pages *\/$/;"	m	struct:bitmap	access:public
filesystem_name	./libe2fsck/e2fsck.h	/^	char *filesystem_name;$/;"	m	struct:e2fsck_struct	access:public
find_driver_devices	./libmdadm/platform-intel.h	/^struct sys_dev *find_driver_devices(const char *bus, const char *driver);$/;"	p	signature:(const char *bus, const char *driver)
find_free_devnm	./libmdadm/mdadm.h	/^extern char *find_free_devnm(int use_partitions);$/;"	p	signature:(int use_partitions)
find_imsm_capability	./libmdadm/platform-intel.h	/^const struct imsm_orom *find_imsm_capability(enum sys_dev_type hba_id);$/;"	p	signature:(enum sys_dev_type hba_id)
find_imsm_orom	./libmdadm/platform-intel.h	/^const struct imsm_orom *find_imsm_orom(void);$/;"	p	signature:(void)
find_intel_devices	./libmdadm/platform-intel.h	/^struct sys_dev *find_intel_devices(void);$/;"	p	signature:(void)
first_cyl	./libmdadm/part.h	/^  __u8 first_cyl;$/;"	m	struct:MBR_part_record	access:public
first_head	./libmdadm/part.h	/^  __u8 first_head;$/;"	m	struct:MBR_part_record	access:public
first_lba	./libmdadm/part.h	/^	__u64 first_lba;$/;"	m	struct:GPT	access:public
first_sect_lba	./libmdadm/part.h	/^  __u32 first_sect_lba;$/;"	m	struct:MBR_part_record	access:public
first_sector	./libmdadm/part.h	/^  __u8 first_sector;$/;"	m	struct:MBR_part_record	access:public
fix_problem	./libe2fsck/problem.h	/^int fix_problem(e2fsck_t ctx, problem_t code, struct problem_context *pctx);$/;"	p	signature:(e2fsck_t ctx, problem_t code, struct problem_context *pctx)
flags	./libe2fsck/e2fsck.h	/^	int		flags;$/;"	m	struct:dx_dirblock_info	access:public
flags	./libe2fsck/e2fsck.h	/^	int	flags;		\/* E2fsck internal flags *\/$/;"	m	struct:e2fsck_struct	access:public
flags	./libe2fsck/problemP.h	/^	int		flags;$/;"	m	struct:e2fsck_problem	access:public
flags	./libe2fsck/problemP.h	/^	int		flags;$/;"	m	struct:latch_descr	access:public
flags	./libmdadm/bitmap.h	/^	unsigned long flags;$/;"	m	struct:bitmap	access:public
flags	./libmke2fs/ext2fs.h	/^	int				flags;$/;"	m	struct:struct_ext2_filsys	access:public
flags	./libmke2fs/ext2fsP.h	/^	int		flags;$/;"	m	struct:dir_context	access:public
flex_bg_size	./libmke2fs/mke2fs.h	/^	unsigned long flex_bg_size;$/;"	m	struct:e2fs_cfg	access:public
fls	./libmdadm/platform-intel.h	/^static inline int fls(int x)$/;"	f	signature:(int x)
flush	./libe2fsck/e2fsck_lib.h	/^	int flush;$/;"	m	struct:e2fsck_cfg	access:public
flush_mdmon	./libmdadm/msg.h	/^extern void flush_mdmon(char *container);$/;"	p	signature:(char *container)
flush_metadata_updates	./libmdadm/mdadm.h	/^extern int flush_metadata_updates(struct supertype *st);$/;"	p	signature:(struct supertype *st)
fmt_devname	./libmdadm/mdadm.h	/^extern void fmt_devname(char *name, int num);$/;"	p	signature:(char *name, int num)
fname_from_uuid	./libmdadm/mdadm.h	/^extern char *fname_from_uuid(struct supertype *st,$/;"	p	signature:(struct supertype *st, struct mdinfo *info, char *buf, char sep)
force	./libe2fsck/e2fsck_lib.h	/^	int force;$/;"	m	struct:e2fsck_cfg	access:public
force	./libmdadm/mdadm.h	/^	int	force;$/;"	m	struct:context	access:public
force	./libmke2fs/mke2fs.h	/^	int force;$/;"	m	struct:e2fs_cfg	access:public
fping_monitor	./libmdadm/msg.h	/^extern int fping_monitor(int sock);$/;"	p	signature:(int sock)
fragcheck	./libe2fsck/e2fsck_lib.h	/^	int fragcheck;$/;"	m	struct:e2fsck_extended_opt	access:public
fragsize	./libmke2fs/ext2fs.h	/^	int				fragsize;$/;"	m	struct:struct_ext2_filsys	access:public
free_blocks	./libe2fsck/e2fsck.h	/^	blk64_t free_blocks;$/;"	m	struct:e2fsck_struct	access:public
free_inodes	./libe2fsck/e2fsck.h	/^	ino_t	free_inodes;$/;"	m	struct:e2fsck_struct	access:public
free_line	./libmdadm/mdadm.h	/^extern void free_line(char *line);$/;"	p	signature:(char *line)
free_mdstat	./libmdadm/mdadm.h	/^extern void free_mdstat(struct mdstat_ent *ms);$/;"	p	signature:(struct mdstat_ent *ms)
free_super	./libmdadm/mdadm.h	/^	void (*free_super)(struct supertype *st);$/;"	m	struct:superswitch	access:public
freeze_reshape	./libmdadm/mdadm.h	/^	int	freeze_reshape;$/;"	m	struct:context	access:public
fs	./libe2fsck/e2fsck.h	/^	ext2_filsys fs;$/;"	m	struct:e2fsck_struct	access:public
fs	./libmke2fs/ext2fsP.h	/^	ext2_filsys		fs;$/;"	m	struct:ext2_struct_dblist	access:public
fs_badblocks_count	./libe2fsck/e2fsck.h	/^	__u32 fs_badblocks_count;$/;"	m	struct:e2fsck_struct	access:public
fs_blockdev_count	./libe2fsck/e2fsck.h	/^	__u32 fs_blockdev_count;$/;"	m	struct:e2fsck_struct	access:public
fs_chardev_count	./libe2fsck/e2fsck.h	/^	__u32 fs_chardev_count;$/;"	m	struct:e2fsck_struct	access:public
fs_dind_count	./libe2fsck/e2fsck.h	/^	__u32 fs_dind_count;$/;"	m	struct:e2fsck_struct	access:public
fs_directory_count	./libe2fsck/e2fsck.h	/^	__u32 fs_directory_count;$/;"	m	struct:e2fsck_struct	access:public
fs_ext_attr_blocks	./libe2fsck/e2fsck.h	/^	__u32 fs_ext_attr_blocks;$/;"	m	struct:e2fsck_struct	access:public
fs_ext_attr_inodes	./libe2fsck/e2fsck.h	/^	__u32 fs_ext_attr_inodes;$/;"	m	struct:e2fsck_struct	access:public
fs_fast_symlinks_count	./libe2fsck/e2fsck.h	/^	__u32 fs_fast_symlinks_count;$/;"	m	struct:e2fsck_struct	access:public
fs_features	./libmke2fs/mke2fs.h	/^	char fs_features[256];$/;"	m	struct:e2fs_cfg	access:public
fs_fifo_count	./libe2fsck/e2fsck.h	/^	__u32 fs_fifo_count;$/;"	m	struct:e2fsck_struct	access:public
fs_fragmented	./libe2fsck/e2fsck.h	/^	__u32 fs_fragmented;$/;"	m	struct:e2fsck_struct	access:public
fs_fragmented_dir	./libe2fsck/e2fsck.h	/^	__u32 fs_fragmented_dir;$/;"	m	struct:e2fsck_struct	access:public
fs_ind_count	./libe2fsck/e2fsck.h	/^	__u32 fs_ind_count;$/;"	m	struct:e2fsck_struct	access:public
fs_links_count	./libe2fsck/e2fsck.h	/^	__u32 fs_links_count;$/;"	m	struct:e2fsck_struct	access:public
fs_proc_check	./libe2fsck/e2fsck.h	/^extern int fs_proc_check(const char *fs_name);$/;"	p	signature:(const char *fs_name)
fs_regular_count	./libe2fsck/e2fsck.h	/^	__u32 fs_regular_count;$/;"	m	struct:e2fsck_struct	access:public
fs_sockets_count	./libe2fsck/e2fsck.h	/^	__u32 fs_sockets_count;$/;"	m	struct:e2fsck_struct	access:public
fs_symlinks_count	./libe2fsck/e2fsck.h	/^	__u32 fs_symlinks_count;$/;"	m	struct:e2fsck_struct	access:public
fs_tind_count	./libe2fsck/e2fsck.h	/^	__u32 fs_tind_count;$/;"	m	struct:e2fsck_struct	access:public
fs_total_count	./libe2fsck/e2fsck.h	/^	__u32 fs_total_count;$/;"	m	struct:e2fsck_struct	access:public
fs_type	./libmke2fs/mke2fs.h	/^	char fs_type[16];$/;"	m	struct:e2fs_cfg	access:public
fs_uuid	./libmke2fs/mke2fs.h	/^	char fs_uuid[64];$/;"	m	struct:e2fs_cfg	access:public
func	./libmke2fs/ext2fsP.h	/^	int (*func)(ext2_ino_t	dir,$/;"	m	struct:dir_context	access:public
g_bLoop	./unitest/RAIDManager_test.cpp	/^bool g_bLoop = true;$/;"	v
get_alloc_block	./libmke2fs/ext2fs.h	/^	errcode_t (*get_alloc_block)(ext2_filsys fs, blk64_t goal,$/;"	m	struct:struct_ext2_filsys	access:public
get_backup_sb	./libe2fsck/e2fsck.h	/^extern blk64_t get_backup_sb(e2fsck_t ctx, ext2_filsys fs,$/;"	p	signature:(e2fsck_t ctx, ext2_filsys fs, const char *name, io_manager manager)
get_blocks	./libmke2fs/ext2fs.h	/^	errcode_t (*get_blocks)(ext2_filsys fs, ext2_ino_t ino, blk_t *blocks);$/;"	m	struct:struct_ext2_filsys	access:public
get_component_size	./libmdadm/mdadm.h	/^extern unsigned long long get_component_size(int fd);$/;"	p	signature:(int fd)
get_data_disks	./libmdadm/mdadm.h	/^extern int get_data_disks(int level, int layout, int raid_disks);$/;"	p	signature:(int level, int layout, int raid_disks)
get_dev_size	./libmdadm/mdadm.h	/^extern int get_dev_size(int fd, char *dname, unsigned long long *sizep);$/;"	p	signature:(int fd, char *dname, unsigned long long *sizep)
get_disk_controller_domain	./libmdadm/mdadm.h	/^	const char *(*get_disk_controller_domain)(const char *path);$/;"	m	struct:superswitch	access:public
get_latch_flags	./libe2fsck/problem.h	/^int get_latch_flags(int mask, int *value);$/;"	p	signature:(int mask, int *value)
get_linux_version	./libmdadm/mdadm.h	/^extern int get_linux_version(void);$/;"	p	signature:(void)
get_maj_min	./libmdadm/mdadm.h	/^extern int get_maj_min(char *dev, int *major, int *minor);$/;"	p	signature:(char *dev, int *major, int *minor)
get_md_name	./libmdadm/mdadm.h	/^extern char *get_md_name(char *devnm);$/;"	p	signature:(char *devnm)
get_mdp_major	./libmdadm/mdadm.h	/^extern int get_mdp_major(void);$/;"	p	signature:(void)
get_progname	./libmke2fs/util.h	/^extern char *get_progname(char *argv_zero);$/;"	p	signature:(char *argv_zero)
get_sys_dev_type	./libmdadm/platform-intel.h	/^const char *get_sys_dev_type(enum sys_dev_type);$/;"	p	signature:(enum sys_dev_type)
getblk	./libe2fsck/jfs_user.h	/^struct buffer_head *getblk(kdev_t ctx, blk64_t blocknr, int blocksize);$/;"	p	signature:(kdev_t ctx, blk64_t blocknr, int blocksize)
getinfo_super	./libmdadm/mdadm.h	/^	void (*getinfo_super)(struct supertype *st, struct mdinfo *info, char *map);$/;"	m	struct:superswitch	access:public
getinfo_super_disks	./libmdadm/mdadm.h	/^	struct mdinfo *(*getinfo_super_disks)(struct supertype *st);$/;"	m	struct:superswitch	typeref:struct:superswitch::getinfo_super_disks	access:public
gid	./libmdadm/mdadm.h	/^	int	gid;$/;"	m	struct:createinfo	access:public
global_rtrack	./libe2fsck/e2fsck.h	/^	struct resource_track	global_rtrack;$/;"	m	struct:e2fsck_struct	typeref:struct:e2fsck_struct::resource_track	access:public
group	./libe2fsck/problem.h	/^	dgrp_t		group;$/;"	m	struct:problem_context	access:public
group_desc	./libmke2fs/ext2fs.h	/^	struct opaque_ext2_group_desc *	group_desc;$/;"	m	struct:struct_ext2_filsys	typeref:struct:struct_ext2_filsys::opaque_ext2_group_desc	access:public
group_desc_count	./libmke2fs/ext2fs.h	/^	dgrp_t				group_desc_count;$/;"	m	struct:struct_ext2_filsys	access:public
gstate_creserved	./libmdadm/md_p.h	/^	__u32 gstate_creserved[MD_SB_GENERIC_CONSTANT_WORDS - 16];$/;"	m	struct:mdp_superblock_s	access:public
gstate_sreserved	./libmdadm/md_p.h	/^	__u32 gstate_sreserved[MD_SB_GENERIC_STATE_WORDS - 18];$/;"	m	struct:mdp_superblock_s	access:public
guess_any	./libmdadm/mdadm.h	/^enum guess_types { guess_any, guess_array, guess_partitions };$/;"	e	enum:guess_types
guess_array	./libmdadm/mdadm.h	/^enum guess_types { guess_any, guess_array, guess_partitions };$/;"	e	enum:guess_types
guess_partitions	./libmdadm/mdadm.h	/^enum guess_types { guess_any, guess_array, guess_partitions };$/;"	e	enum:guess_types
guess_super	./libmdadm/mdadm.h	/^static inline struct supertype *guess_super(int fd) {$/;"	f	signature:(int fd)
guess_super_type	./libmdadm/mdadm.h	/^extern struct supertype *guess_super_type(int fd, enum guess_types guess_type);$/;"	p	signature:(int fd, enum guess_types guess_type)
guess_types	./libmdadm/mdadm.h	/^enum guess_types { guess_any, guess_array, guess_partitions };$/;"	g
guid	./libmdadm/part.h	/^	__u8 guid[16];$/;"	m	struct:GPT	access:public
guid_str	./libmdadm/platform-intel.h	/^static inline char *guid_str(char *buf, struct efi_guid guid)$/;"	f	signature:(char *buf, struct efi_guid guid)
gvalid_words	./libmdadm/md_p.h	/^	__u32 gvalid_words;	\/*  4 Number of used words in this section    *\/$/;"	m	struct:mdp_superblock_s	access:public
h_aborted	./libe2fsck/kernel-jbd.h	/^	unsigned int	h_aborted:	1;	\/* fatal error on handle *\/$/;"	m	struct:handle_s	access:public
h_blocktype	./libe2fsck/kernel-jbd.h	/^	__u32		h_blocktype;$/;"	m	struct:commit_header	access:public
h_blocktype	./libe2fsck/kernel-jbd.h	/^	__u32		h_blocktype;$/;"	m	struct:journal_header_s	access:public
h_buffer_credits	./libe2fsck/kernel-jbd.h	/^	int			h_buffer_credits;$/;"	m	struct:handle_s	access:public
h_chksum	./libe2fsck/kernel-jbd.h	/^	__u32		h_chksum[JBD2_CHECKSUM_BYTES];$/;"	m	struct:commit_header	access:public
h_chksum_size	./libe2fsck/kernel-jbd.h	/^	unsigned char	h_chksum_size;$/;"	m	struct:commit_header	access:public
h_chksum_type	./libe2fsck/kernel-jbd.h	/^	unsigned char	h_chksum_type;$/;"	m	struct:commit_header	access:public
h_commit_nsec	./libe2fsck/kernel-jbd.h	/^	__u32		h_commit_nsec;$/;"	m	struct:commit_header	access:public
h_commit_sec	./libe2fsck/kernel-jbd.h	/^	__u64		h_commit_sec;$/;"	m	struct:commit_header	access:public
h_err	./libe2fsck/kernel-jbd.h	/^	int			h_err;$/;"	m	struct:handle_s	access:public
h_jdata	./libe2fsck/kernel-jbd.h	/^	unsigned int	h_jdata:	1;	\/* force data journaling *\/$/;"	m	struct:handle_s	access:public
h_magic	./libe2fsck/kernel-jbd.h	/^	__u32		h_magic;$/;"	m	struct:commit_header	access:public
h_magic	./libe2fsck/kernel-jbd.h	/^	__u32		h_magic;$/;"	m	struct:journal_header_s	access:public
h_padding	./libe2fsck/kernel-jbd.h	/^	unsigned char	h_padding[2];$/;"	m	struct:commit_header	access:public
h_ref	./libe2fsck/kernel-jbd.h	/^	int			h_ref;$/;"	m	struct:handle_s	access:public
h_sequence	./libe2fsck/kernel-jbd.h	/^	__u32		h_sequence;$/;"	m	struct:commit_header	access:public
h_sequence	./libe2fsck/kernel-jbd.h	/^	__u32		h_sequence;$/;"	m	struct:journal_header_s	access:public
h_sync	./libe2fsck/kernel-jbd.h	/^	unsigned int	h_sync:		1;	\/* sync-on-close *\/$/;"	m	struct:handle_s	access:public
h_transaction	./libe2fsck/kernel-jbd.h	/^	transaction_t	      * h_transaction;$/;"	m	struct:handle_s	access:public
handle	./libe2fsck/e2fsck.h	/^	e2fsck_handle *handle;$/;"	m	struct:e2fsck_struct	access:public
handle_s	./libe2fsck/kernel-jbd.h	/^struct handle_s$/;"	s
handle_s::h_aborted	./libe2fsck/kernel-jbd.h	/^	unsigned int	h_aborted:	1;	\/* fatal error on handle *\/$/;"	m	struct:handle_s	access:public
handle_s::h_buffer_credits	./libe2fsck/kernel-jbd.h	/^	int			h_buffer_credits;$/;"	m	struct:handle_s	access:public
handle_s::h_err	./libe2fsck/kernel-jbd.h	/^	int			h_err;$/;"	m	struct:handle_s	access:public
handle_s::h_jdata	./libe2fsck/kernel-jbd.h	/^	unsigned int	h_jdata:	1;	\/* force data journaling *\/$/;"	m	struct:handle_s	access:public
handle_s::h_ref	./libe2fsck/kernel-jbd.h	/^	int			h_ref;$/;"	m	struct:handle_s	access:public
handle_s::h_sync	./libe2fsck/kernel-jbd.h	/^	unsigned int	h_sync:		1;	\/* sync-on-close *\/$/;"	m	struct:handle_s	access:public
handle_s::h_transaction	./libe2fsck/kernel-jbd.h	/^	transaction_t	      * h_transaction;$/;"	m	struct:handle_s	access:public
handle_t	./libe2fsck/kernel-jbd.h	/^typedef struct handle_s		handle_t;	\/* Atomic operation type *\/$/;"	t	typeref:struct:handle_s
hashversion	./libe2fsck/e2fsck.h	/^	int			hashversion;$/;"	m	struct:dx_dir_info	access:public
header_size	./libmdadm/part.h	/^	__u32 header_size;$/;"	m	struct:GPT	access:public
hijacked	./libmdadm/bitmap.h	/^	unsigned int hijacked;$/;"	m	struct:bitmap_page	access:public
homehost	./libmdadm/mdadm.h	/^	char	*homehost;$/;"	m	struct:context	access:public
hotfix_ver	./libmdadm/platform-intel.h	/^	__u16 hotfix_ver; \/* Example: 0 as in 8.6.0.1020 *\/$/;"	m	struct:imsm_orom	access:public
htree_slack_percentage	./libe2fsck/e2fsck.h	/^	unsigned int htree_slack_percentage;$/;"	m	struct:e2fsck_struct	access:public
human_size	./libmdadm/mdadm.h	/^extern char *human_size(long long bytes);$/;"	p	signature:(long long bytes)
human_size_brief	./libmdadm/mdadm.h	/^extern char *human_size_brief(long long bytes, int prefix);$/;"	p	signature:(long long bytes, int prefix)
iDeltaDisks	./libmdadm/mdadm_other.h	/^	int iDeltaDisks;$/;"	m	struct:array_detail	access:public
iDiskNumber	./libmdadm/mdadm_other.h	/^	int iDiskNumber;$/;"	m	struct:query_result	access:public
iEnough	./libmdadm/mdadm_other.h	/^	int iEnough; \/* 0: Raid disk is not enough. *\/$/;"	m	struct:array_detail	access:public
iLayout	./libmdadm/mdadm_other.h	/^	int iLayout;$/;"	m	struct:array_detail	access:public
iMDRaidDiskNum	./libmdadm/mdadm_other.h	/^	int iMDRaidDiskNum;	\/\/ Available for MD, Disk$/;"	m	struct:query_result	access:public
iMDRaidLevel	./libmdadm/mdadm_other.h	/^	int iMDRaidLevel;	\/\/ Available for MD, Disk$/;"	m	struct:query_result	access:public
iMDSpareDiskNum	./libmdadm/mdadm_other.h	/^	int iMDSpareDiskNum;	$/;"	m	struct:query_result	access:public
iNewChunkSize	./libmdadm/mdadm_other.h	/^	int iNewChunkSize; \/* Byte *\/$/;"	m	struct:array_detail	access:public
iRaidNewLevel	./libmdadm/mdadm_other.h	/^	int iRaidNewLevel;$/;"	m	struct:array_detail	access:public
iRebuildProgress	./libmdadm/mdadm_other.h	/^	int iRebuildProgress; \/* -1 if no resync *\/$/;"	m	struct:array_detail	access:public
i_ctx	./libe2fsck/jfs_user.h	/^	e2fsck_t	i_ctx;$/;"	m	struct:inode	access:public
i_ext2	./libe2fsck/jfs_user.h	/^	struct ext2_inode i_ext2;$/;"	m	struct:inode	typeref:struct:inode::ext2_inode	access:public
i_ino	./libe2fsck/jfs_user.h	/^	ext2_ino_t	i_ino;$/;"	m	struct:inode	access:public
icache	./libmke2fs/ext2fs.h	/^	struct ext2_inode_cache		*icache;$/;"	m	struct:struct_ext2_filsys	typeref:struct:struct_ext2_filsys::ext2_inode_cache	access:public
idle	./libmdadm/mdmon.h	/^enum sync_action { idle, reshape, resync, recover, check, repair, bad_action };$/;"	e	enum:sync_action
ignore_hw_compat	./libmdadm/mdadm.h	/^	int ignore_hw_compat; \/* used to inform metadata handlers that it should ignore$/;"	m	struct:supertype	access:public
image_header	./libmke2fs/ext2fs.h	/^	struct ext2_image_hdr *		image_header;$/;"	m	struct:struct_ext2_filsys	typeref:struct:struct_ext2_filsys::ext2_image_hdr	access:public
image_io	./libmke2fs/ext2fs.h	/^	io_channel			image_io;$/;"	m	struct:struct_ext2_filsys	access:public
imsm_orom	./libmdadm/platform-intel.h	/^struct imsm_orom {$/;"	s
imsm_orom::attr	./libmdadm/platform-intel.h	/^	__u32 attr;$/;"	m	struct:imsm_orom	access:public
imsm_orom::build	./libmdadm/platform-intel.h	/^	__u16 build; \/* Example: 1020 as in 8.6.0.1020 *\/$/;"	m	struct:imsm_orom	access:public
imsm_orom::capabilities	./libmdadm/platform-intel.h	/^	__u32 capabilities;$/;"	m	struct:imsm_orom	access:public
imsm_orom::checksum	./libmdadm/platform-intel.h	/^	__u8 checksum; \/* checksum of all the bytes in this table *\/$/;"	m	struct:imsm_orom	access:public
imsm_orom::dpa	./libmdadm/platform-intel.h	/^	__u16 dpa; \/* Disks Per Array supported *\/$/;"	m	struct:imsm_orom	access:public
imsm_orom::driver_features	./libmdadm/platform-intel.h	/^	__u32 driver_features;$/;"	m	struct:imsm_orom	access:public
imsm_orom::hotfix_ver	./libmdadm/platform-intel.h	/^	__u16 hotfix_ver; \/* Example: 0 as in 8.6.0.1020 *\/$/;"	m	struct:imsm_orom	access:public
imsm_orom::len	./libmdadm/platform-intel.h	/^	__u8 len; \/* number of bytes in this entire table *\/$/;"	m	struct:imsm_orom	access:public
imsm_orom::major_ver	./libmdadm/platform-intel.h	/^	__u16 major_ver; \/* Example: 8 as in 8.6.0.1020 *\/$/;"	m	struct:imsm_orom	access:public
imsm_orom::minor_ver	./libmdadm/platform-intel.h	/^	__u16 minor_ver; \/* Example: 6 as in 8.6.0.1020 *\/$/;"	m	struct:imsm_orom	access:public
imsm_orom::rlc	./libmdadm/platform-intel.h	/^	__u16 rlc; \/* RAID Level Capability *\/$/;"	m	struct:imsm_orom	access:public
imsm_orom::signature	./libmdadm/platform-intel.h	/^	__u8 signature[4];$/;"	m	struct:imsm_orom	access:public
imsm_orom::sss	./libmdadm/platform-intel.h	/^	__u16 sss; \/* Strip Size Supported *\/$/;"	m	struct:imsm_orom	access:public
imsm_orom::table_ver_major	./libmdadm/platform-intel.h	/^	__u8 table_ver_major; \/* Currently 2 (can change with future revs) *\/$/;"	m	struct:imsm_orom	access:public
imsm_orom::table_ver_minor	./libmdadm/platform-intel.h	/^	__u8 table_ver_minor; \/* Currently 2 (can change with future revs) *\/$/;"	m	struct:imsm_orom	access:public
imsm_orom::tds	./libmdadm/platform-intel.h	/^	__u16 tds; \/* Total Disks Supported *\/$/;"	m	struct:imsm_orom	access:public
imsm_orom::vpa	./libmdadm/platform-intel.h	/^	__u8 vpa; \/* # Volumes Per Array supported *\/$/;"	m	struct:imsm_orom	access:public
imsm_orom::vphba	./libmdadm/platform-intel.h	/^	__u8 vphba; \/* # Volumes Per Host Bus Adapter supported *\/$/;"	m	struct:imsm_orom	access:public
imsm_orom_has_chunk	./libmdadm/platform-intel.h	/^static inline int imsm_orom_has_chunk(const struct imsm_orom *orom, int chunk)$/;"	f	signature:(const struct imsm_orom *orom, int chunk)
imsm_orom_has_raid0	./libmdadm/platform-intel.h	/^static inline int imsm_orom_has_raid0(const struct imsm_orom *orom)$/;"	f	signature:(const struct imsm_orom *orom)
imsm_orom_has_raid1	./libmdadm/platform-intel.h	/^static inline int imsm_orom_has_raid1(const struct imsm_orom *orom)$/;"	f	signature:(const struct imsm_orom *orom)
imsm_orom_has_raid10	./libmdadm/platform-intel.h	/^static inline int imsm_orom_has_raid10(const struct imsm_orom *orom)$/;"	f	signature:(const struct imsm_orom *orom)
imsm_orom_has_raid1e	./libmdadm/platform-intel.h	/^static inline int imsm_orom_has_raid1e(const struct imsm_orom *orom)$/;"	f	signature:(const struct imsm_orom *orom)
imsm_orom_has_raid5	./libmdadm/platform-intel.h	/^static inline int imsm_orom_has_raid5(const struct imsm_orom *orom)$/;"	f	signature:(const struct imsm_orom *orom)
in_initrd	./libmdadm/mdadm.h	/^extern int in_initrd(void);$/;"	p	signature:(void)
inactive	./libmdadm/mdmon.h	/^enum array_state { clear, inactive, suspended, readonly, read_auto,$/;"	e	enum:array_state
info	./libmdadm/mdadm.h	/^	void *info;$/;"	m	struct:supertype	access:public
info	./libmdadm/mdmon.h	/^	struct mdinfo info;$/;"	m	struct:active_array	typeref:struct:active_array::mdinfo	access:public
info_arch	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_compiler	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_platform	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_version	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v
info_version	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v
info_version	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v
init_prof_err_tbl	./libmke2fs/prof_err.h	48;"	d
init_resource_track	./libe2fsck/e2fsck.h	/^extern void init_resource_track(struct resource_track *track,$/;"	p	signature:(struct resource_track *track, io_channel channel)
init_resource_track	./libe2fsck/e2fsck.h	526;"	d
init_super	./libmdadm/mdadm.h	/^	int (*init_super)(struct supertype *st, mdu_array_info_t *info,$/;"	m	struct:superswitch	access:public
initialize_prof_error_table	./libmke2fs/prof_err.h	/^extern void initialize_prof_error_table(void);$/;"	p	signature:(void)
initialize_prof_error_table_r	./libmke2fs/prof_err.h	/^extern void initialize_prof_error_table_r(struct et_list **list);$/;"	p	signature:(struct et_list **list)
inline	./libe2fsck/jfs_compat.h	65;"	d
ino	./libe2fsck/e2fsck.h	/^	ext2_ino_t		ino;	\/* Inode number *\/$/;"	m	struct:dir_info	access:public
ino	./libe2fsck/e2fsck.h	/^	ext2_ino_t		ino; 		\/* Inode number *\/$/;"	m	struct:dx_dir_info	access:public
ino	./libe2fsck/problem.h	/^	ext2_ino_t ino, ino2, dir;$/;"	m	struct:problem_context	access:public
ino	./libmke2fs/ext2fs.h	/^	ext2_ino_t	ino;$/;"	m	struct:ext2_db_entry	access:public
ino	./libmke2fs/ext2fs.h	/^	ext2_ino_t	ino;$/;"	m	struct:ext2_db_entry2	access:public
ino	./libmke2fs/ext2fsP.h	/^	ext2_ino_t		ino;$/;"	m	struct:ext2_inode_cache_ent	access:public
ino2	./libe2fsck/problem.h	/^	ext2_ino_t ino, ino2, dir;$/;"	m	struct:problem_context	access:public
inode	./libe2fsck/jfs_user.h	/^struct inode {$/;"	s
inode	./libe2fsck/problem.h	/^	struct ext2_inode *inode;$/;"	m	struct:problem_context	typeref:struct:problem_context::ext2_inode	access:public
inode	./libmke2fs/ext2fsP.h	/^	struct ext2_inode	inode;$/;"	m	struct:ext2_inode_cache_ent	typeref:struct:ext2_inode_cache_ent::ext2_inode	access:public
inode::i_ctx	./libe2fsck/jfs_user.h	/^	e2fsck_t	i_ctx;$/;"	m	struct:inode	access:public
inode::i_ext2	./libe2fsck/jfs_user.h	/^	struct ext2_inode i_ext2;$/;"	m	struct:inode	typeref:struct:inode::ext2_inode	access:public
inode::i_ino	./libe2fsck/jfs_user.h	/^	ext2_ino_t	i_ino;$/;"	m	struct:inode	access:public
inode_bad_map	./libe2fsck/e2fsck.h	/^	ext2fs_inode_bitmap inode_bad_map; \/* Inodes which are bad somehow *\/$/;"	m	struct:e2fsck_struct	access:public
inode_bb_map	./libe2fsck/e2fsck.h	/^	ext2fs_inode_bitmap inode_bb_map; \/* Inodes which are in bad blocks *\/$/;"	m	struct:e2fsck_struct	access:public
inode_blocks_per_group	./libmke2fs/ext2fs.h	/^	unsigned int			inode_blocks_per_group;$/;"	m	struct:struct_ext2_filsys	access:public
inode_buffer_blocks	./libe2fsck/e2fsck.h	/^	int inode_buffer_blocks;$/;"	m	struct:e2fsck_struct	access:public
inode_count	./libe2fsck/e2fsck.h	/^	ext2_icount_t	inode_count;$/;"	m	struct:e2fsck_struct	access:public
inode_dir_map	./libe2fsck/e2fsck.h	/^	ext2fs_inode_bitmap inode_dir_map; \/* Inodes which are directories *\/$/;"	m	struct:e2fsck_struct	access:public
inode_has_valid_blocks	./libe2fsck/e2fsck.h	/^extern int inode_has_valid_blocks(struct ext2_inode *inode);$/;"	p	signature:(struct ext2_inode *inode)
inode_imagic_map	./libe2fsck/e2fsck.h	/^	ext2fs_inode_bitmap inode_imagic_map; \/* AFS inodes *\/$/;"	m	struct:e2fsck_struct	access:public
inode_link_info	./libe2fsck/e2fsck.h	/^	ext2_icount_t inode_link_info;$/;"	m	struct:e2fsck_struct	access:public
inode_map	./libmke2fs/ext2fs.h	/^	ext2fs_inode_bitmap		inode_map;$/;"	m	struct:struct_ext2_filsys	access:public
inode_ratio	./libmke2fs/mke2fs.h	/^	int inode_ratio;$/;"	m	struct:e2fs_cfg	access:public
inode_reg_map	./libe2fsck/e2fsck.h	/^	ext2fs_inode_bitmap inode_reg_map; \/* Inodes which are regular files*\/$/;"	m	struct:e2fsck_struct	access:public
inode_size	./libmke2fs/mke2fs.h	/^	int inode_size;$/;"	m	struct:e2fs_cfg	access:public
inode_used_map	./libe2fsck/e2fsck.h	/^	ext2fs_inode_bitmap inode_used_map; \/* Inodes which are in use *\/$/;"	m	struct:e2fsck_struct	access:public
interactive	./libe2fsck/e2fsck.h	/^	int interactive;	\/* Are we connected directly to a tty? *\/$/;"	m	struct:e2fsck_struct	access:public
invalid_backup	./libmdadm/mdadm.h	/^	int	invalid_backup;$/;"	m	struct:context	access:public
invalid_bitmaps	./libe2fsck/e2fsck.h	/^	int invalid_bitmaps;	\/* There are invalid bitmaps\/itable *\/$/;"	m	struct:e2fsck_struct	access:public
invalid_block_bitmap_flag	./libe2fsck/e2fsck.h	/^	int *invalid_block_bitmap_flag;$/;"	m	struct:e2fsck_struct	access:public
invalid_inode_bitmap_flag	./libe2fsck/e2fsck.h	/^	int *invalid_inode_bitmap_flag;$/;"	m	struct:e2fsck_struct	access:public
invalid_inode_table_flag	./libe2fsck/e2fsck.h	/^	int *invalid_inode_table_flag;$/;"	m	struct:e2fsck_struct	access:public
io	./libmke2fs/ext2fs.h	/^	io_channel			io;$/;"	m	struct:struct_ext2_filsys	access:public
io_options	./libe2fsck/e2fsck.h	/^	char *io_options;$/;"	m	struct:e2fsck_struct	access:public
is_container_member	./libmdadm/mdadm.h	/^extern int is_container_member(struct mdstat_ent *ent, char *devname);$/;"	p	signature:(struct mdstat_ent *ent, char *devname)
is_container_member	./libmdadm/mdmon.h	/^int is_container_member(struct mdstat_ent *mdstat, char *container);$/;"	p	signature:(struct mdstat_ent *mdstat, char *container)
is_handle_aborted	./libe2fsck/kernel-jbd.h	/^static inline int is_handle_aborted(handle_t *handle)$/;"	f	signature:(handle_t *handle)
is_journal_abort	./libe2fsck/jfs_compat.h	59;"	d
is_journal_aborted	./libe2fsck/kernel-jbd.h	/^static inline int is_journal_aborted(journal_t *journal)$/;"	f	signature:(journal_t *journal)
is_resync_complete	./libmdadm/mdmon.h	/^static inline int is_resync_complete(struct mdinfo *array)$/;"	f	signature:(struct mdinfo *array)
is_standard	./libmdadm/mdadm.h	/^extern int is_standard(char *dev, int *nump);$/;"	p	signature:(char *dev, int *nump)
is_subarray	./libmdadm/mdadm.h	/^static inline int is_subarray(char *vers)$/;"	f	signature:(char *vers)
is_subarray_active	./libmdadm/mdadm.h	/^extern int is_subarray_active(char *subarray, char *devname);$/;"	p	signature:(char *subarray, char *devname)
j_all_journals	./libe2fsck/kernel-jbd.h	/^	struct list_head	j_all_journals;$/;"	m	struct:journal_s	typeref:struct:journal_s::list_head	access:public
j_barrier	./libe2fsck/kernel-jbd.h	/^	struct semaphore	j_barrier;$/;"	m	struct:journal_s	typeref:struct:journal_s::semaphore	access:public
j_barrier_count	./libe2fsck/kernel-jbd.h	/^	int			j_barrier_count;$/;"	m	struct:journal_s	access:public
j_blk_offset	./libe2fsck/jfs_compat.h	/^	unsigned int		j_blk_offset;$/;"	m	struct:journal_s	access:public
j_blk_offset	./libe2fsck/kernel-jbd.h	/^	unsigned int		j_blk_offset;$/;"	m	struct:journal_s	access:public
j_blocksize	./libe2fsck/jfs_compat.h	/^	int			j_blocksize;$/;"	m	struct:journal_s	access:public
j_blocksize	./libe2fsck/kernel-jbd.h	/^	int			j_blocksize;$/;"	m	struct:journal_s	access:public
j_checkpoint_sem	./libe2fsck/kernel-jbd.h	/^	struct semaphore 	j_checkpoint_sem;$/;"	m	struct:journal_s	typeref:struct:journal_s::semaphore	access:public
j_checkpoint_transactions	./libe2fsck/kernel-jbd.h	/^	transaction_t *		j_checkpoint_transactions;$/;"	m	struct:journal_s	access:public
j_commit_interval	./libe2fsck/kernel-jbd.h	/^	unsigned long		j_commit_interval;$/;"	m	struct:journal_s	access:public
j_commit_request	./libe2fsck/kernel-jbd.h	/^	tid_t			j_commit_request;$/;"	m	struct:journal_s	access:public
j_commit_sequence	./libe2fsck/kernel-jbd.h	/^	tid_t			j_commit_sequence;$/;"	m	struct:journal_s	access:public
j_commit_timer	./libe2fsck/kernel-jbd.h	/^	struct timer_list *	j_commit_timer;$/;"	m	struct:journal_s	typeref:struct:journal_s::timer_list	access:public
j_commit_timer_active	./libe2fsck/kernel-jbd.h	/^	int			j_commit_timer_active;$/;"	m	struct:journal_s	access:public
j_committing_transaction	./libe2fsck/kernel-jbd.h	/^	transaction_t *		j_committing_transaction;$/;"	m	struct:journal_s	access:public
j_dev	./libe2fsck/jfs_compat.h	/^	kdev_t			j_dev;$/;"	m	struct:journal_s	access:public
j_dev	./libe2fsck/kernel-jbd.h	/^	kdev_t			j_dev;$/;"	m	struct:journal_s	access:public
j_errno	./libe2fsck/jfs_compat.h	/^	int			j_errno;$/;"	m	struct:journal_s	access:public
j_errno	./libe2fsck/kernel-jbd.h	/^	int			j_errno;$/;"	m	struct:journal_s	access:public
j_failed_commit	./libe2fsck/jfs_compat.h	/^	tid_t			j_failed_commit;$/;"	m	struct:journal_s	access:public
j_failed_commit	./libe2fsck/kernel-jbd.h	/^	unsigned int		j_failed_commit;$/;"	m	struct:journal_s	access:public
j_first	./libe2fsck/jfs_compat.h	/^	unsigned long		j_first, j_last;$/;"	m	struct:journal_s	access:public
j_first	./libe2fsck/kernel-jbd.h	/^	unsigned long		j_first, j_last;$/;"	m	struct:journal_s	access:public
j_flags	./libe2fsck/jfs_compat.h	/^	unsigned long		j_flags;$/;"	m	struct:journal_s	access:public
j_flags	./libe2fsck/kernel-jbd.h	/^	unsigned long		j_flags;$/;"	m	struct:journal_s	access:public
j_format_version	./libe2fsck/jfs_compat.h	/^	int			j_format_version;$/;"	m	struct:journal_s	access:public
j_format_version	./libe2fsck/kernel-jbd.h	/^	int			j_format_version;$/;"	m	struct:journal_s	access:public
j_free	./libe2fsck/jfs_compat.h	/^	unsigned long		j_free;$/;"	m	struct:journal_s	access:public
j_free	./libe2fsck/kernel-jbd.h	/^	unsigned long		j_free;$/;"	m	struct:journal_s	access:public
j_fs_dev	./libe2fsck/jfs_compat.h	/^	kdev_t			j_fs_dev;$/;"	m	struct:journal_s	access:public
j_fs_dev	./libe2fsck/kernel-jbd.h	/^	kdev_t			j_fs_dev;$/;"	m	struct:journal_s	access:public
j_head	./libe2fsck/jfs_compat.h	/^	unsigned long		j_head;$/;"	m	struct:journal_s	access:public
j_head	./libe2fsck/kernel-jbd.h	/^	unsigned long		j_head;$/;"	m	struct:journal_s	access:public
j_inode	./libe2fsck/jfs_compat.h	/^	struct inode *		j_inode;$/;"	m	struct:journal_s	typeref:struct:journal_s::inode	access:public
j_inode	./libe2fsck/kernel-jbd.h	/^	struct inode *		j_inode;$/;"	m	struct:journal_s	typeref:struct:journal_s::inode	access:public
j_last	./libe2fsck/jfs_compat.h	/^	unsigned long		j_first, j_last;$/;"	m	struct:journal_s	access:public
j_last	./libe2fsck/kernel-jbd.h	/^	unsigned long		j_first, j_last;$/;"	m	struct:journal_s	access:public
j_max_transaction_buffers	./libe2fsck/kernel-jbd.h	/^	int			j_max_transaction_buffers;$/;"	m	struct:journal_s	access:public
j_maxlen	./libe2fsck/jfs_compat.h	/^	unsigned int		j_maxlen;$/;"	m	struct:journal_s	access:public
j_maxlen	./libe2fsck/kernel-jbd.h	/^	unsigned int		j_maxlen;$/;"	m	struct:journal_s	access:public
j_revoke	./libe2fsck/jfs_compat.h	/^	struct jbd_revoke_table_s *j_revoke;$/;"	m	struct:journal_s	typeref:struct:journal_s::jbd_revoke_table_s	access:public
j_revoke	./libe2fsck/kernel-jbd.h	/^	struct jbd_revoke_table_s *j_revoke;$/;"	m	struct:journal_s	typeref:struct:journal_s::jbd_revoke_table_s	access:public
j_running_transaction	./libe2fsck/kernel-jbd.h	/^	transaction_t *		j_running_transaction;$/;"	m	struct:journal_s	access:public
j_sb_buffer	./libe2fsck/jfs_compat.h	/^	struct buffer_head *	j_sb_buffer;$/;"	m	struct:journal_s	typeref:struct:journal_s::buffer_head	access:public
j_sb_buffer	./libe2fsck/kernel-jbd.h	/^	struct buffer_head *	j_sb_buffer;$/;"	m	struct:journal_s	typeref:struct:journal_s::buffer_head	access:public
j_sem	./libe2fsck/kernel-jbd.h	/^	struct semaphore	j_sem;$/;"	m	struct:journal_s	typeref:struct:journal_s::semaphore	access:public
j_superblock	./libe2fsck/jfs_compat.h	/^	struct journal_superblock_s *j_superblock;$/;"	m	struct:journal_s	typeref:struct:journal_s::journal_superblock_s	access:public
j_superblock	./libe2fsck/kernel-jbd.h	/^	journal_superblock_t *	j_superblock;$/;"	m	struct:journal_s	access:public
j_tail	./libe2fsck/jfs_compat.h	/^	unsigned long		j_tail;$/;"	m	struct:journal_s	access:public
j_tail	./libe2fsck/kernel-jbd.h	/^	unsigned long		j_tail;$/;"	m	struct:journal_s	access:public
j_tail_sequence	./libe2fsck/jfs_compat.h	/^	tid_t			j_tail_sequence;$/;"	m	struct:journal_s	access:public
j_tail_sequence	./libe2fsck/kernel-jbd.h	/^	tid_t			j_tail_sequence;$/;"	m	struct:journal_s	access:public
j_task	./libe2fsck/kernel-jbd.h	/^	struct task_struct *	j_task;$/;"	m	struct:journal_s	typeref:struct:journal_s::task_struct	access:public
j_transaction_sequence	./libe2fsck/jfs_compat.h	/^	tid_t			j_transaction_sequence;$/;"	m	struct:journal_s	access:public
j_transaction_sequence	./libe2fsck/kernel-jbd.h	/^	tid_t			j_transaction_sequence;$/;"	m	struct:journal_s	access:public
j_uuid	./libe2fsck/jfs_compat.h	/^	__u8			j_uuid[16];$/;"	m	struct:journal_s	access:public
j_uuid	./libe2fsck/kernel-jbd.h	/^	__u8			j_uuid[16];$/;"	m	struct:journal_s	access:public
j_wait_checkpoint	./libe2fsck/kernel-jbd.h	/^	wait_queue_head_t	j_wait_checkpoint;$/;"	m	struct:journal_s	access:public
j_wait_commit	./libe2fsck/kernel-jbd.h	/^	wait_queue_head_t	j_wait_commit;$/;"	m	struct:journal_s	access:public
j_wait_done_commit	./libe2fsck/kernel-jbd.h	/^	wait_queue_head_t	j_wait_done_commit;$/;"	m	struct:journal_s	access:public
j_wait_logspace	./libe2fsck/kernel-jbd.h	/^	wait_queue_head_t	j_wait_logspace;$/;"	m	struct:journal_s	access:public
j_wait_transaction_locked	./libe2fsck/kernel-jbd.h	/^	wait_queue_head_t	j_wait_transaction_locked;$/;"	m	struct:journal_s	access:public
j_wait_updates	./libe2fsck/kernel-jbd.h	/^	wait_queue_head_t	j_wait_updates;$/;"	m	struct:journal_s	access:public
jbd_ENOSYS	./libe2fsck/kernel-jbd.h	779;"	d
jbd_blocks_per_page	./libe2fsck/kernel-jbd.h	/^extern int jbd_blocks_per_page(struct inode *inode);$/;"	p	signature:(struct inode *inode)
jbd_debug	./libe2fsck/kernel-jbd.h	49;"	d
jbd_debug	./libe2fsck/kernel-jbd.h	59;"	d
jbd_debug	./libe2fsck/kernel-jbd.h	61;"	d
jbd_debug	./libe2fsck/kernel-jbd.h	65;"	d
jbd_kmalloc	./libe2fsck/kernel-jbd.h	69;"	d
jbd_rep_kmalloc	./libe2fsck/kernel-jbd.h	71;"	d
jbd_state_bits	./libe2fsck/kernel-jbd.h	/^enum jbd_state_bits {$/;"	g
jfs_debug	./libe2fsck/kernel-jbd.h	25;"	d
jh2bh	./libe2fsck/kernel-jbd.h	/^static inline struct buffer_head *jh2bh(struct journal_head *jh)$/;"	f	signature:(struct journal_head *jh)
journal_abort	./libe2fsck/kernel-jbd.h	/^extern void	   journal_abort      (journal_t *, int);$/;"	p	signature:(journal_t *, int)
journal_abort_handle	./libe2fsck/kernel-jbd.h	/^static inline void journal_abort_handle(handle_t *handle)$/;"	f	signature:(handle_t *handle)
journal_ack_err	./libe2fsck/kernel-jbd.h	/^extern void	   journal_ack_err    (journal_t *);$/;"	p	signature:(journal_t *)
journal_add_journal_head	./libe2fsck/kernel-jbd.h	/^		*journal_add_journal_head(struct buffer_head *bh);$/;"	p	signature:(struct buffer_head *bh)
journal_block_tag_s	./libe2fsck/kernel-jbd.h	/^typedef struct journal_block_tag_s$/;"	s
journal_block_tag_s::t_blocknr	./libe2fsck/kernel-jbd.h	/^	__u32		t_blocknr;	\/* The on-disk block number *\/$/;"	m	struct:journal_block_tag_s	access:public
journal_block_tag_s::t_blocknr_high	./libe2fsck/kernel-jbd.h	/^	__u32		t_blocknr_high; \/* most-significant high 32bits. *\/$/;"	m	struct:journal_block_tag_s	access:public
journal_block_tag_s::t_flags	./libe2fsck/kernel-jbd.h	/^	__u32		t_flags;	\/* See below *\/$/;"	m	struct:journal_block_tag_s	access:public
journal_block_tag_t	./libe2fsck/kernel-jbd.h	/^} journal_block_tag_t;$/;"	t	typeref:struct:journal_block_tag_s
journal_blocks_per_page	./libe2fsck/kernel-jbd.h	/^extern int journal_blocks_per_page(struct inode *inode);$/;"	p	signature:(struct inode *inode)
journal_bmap	./libe2fsck/jfs_user.h	/^int journal_bmap(journal_t *journal, blk64_t block, unsigned long long *phys);$/;"	p	signature:(journal_t *journal, blk64_t block, unsigned long long *phys)
journal_bmap	./libe2fsck/kernel-jbd.h	/^extern unsigned long journal_bmap(journal_t *journal, unsigned long blocknr);$/;"	p	signature:(journal_t *journal, unsigned long blocknr)
journal_brelse_array	./libe2fsck/kernel-jbd.h	/^extern void	   journal_brelse_array(struct buffer_head *b[], int n);$/;"	p	signature:(struct buffer_head *b[], int n)
journal_buffer_journal_lru	./libe2fsck/kernel-jbd.h	953;"	d
journal_cancel_revoke	./libe2fsck/kernel-jbd.h	/^extern int	   journal_cancel_revoke(handle_t *, struct journal_head *);$/;"	p	signature:(handle_t *, struct journal_head *)
journal_check_available_features	./libe2fsck/kernel-jbd.h	/^extern int	   journal_check_available_features$/;"	p	signature:(journal_t *, unsigned long, unsigned long, unsigned long)
journal_check_used_features	./libe2fsck/kernel-jbd.h	/^extern int	   journal_check_used_features$/;"	p	signature:(journal_t *, unsigned long, unsigned long, unsigned long)
journal_clear_err	./libe2fsck/kernel-jbd.h	/^extern int	   journal_clear_err  (journal_t *);$/;"	p	signature:(journal_t *)
journal_clear_revoke	./libe2fsck/kernel-jbd.h	/^extern void	   journal_clear_revoke(journal_t *);$/;"	p	signature:(journal_t *)
journal_commit_transaction	./libe2fsck/kernel-jbd.h	/^extern void journal_commit_transaction(journal_t *);$/;"	p	signature:(journal_t *)
journal_create	./libe2fsck/kernel-jbd.h	/^extern int	   journal_create     (journal_t *);$/;"	p	signature:(journal_t *)
journal_current_handle	./libe2fsck/kernel-jbd.h	/^static inline handle_t *journal_current_handle(void)$/;"	f	signature:(void)
journal_destroy	./libe2fsck/kernel-jbd.h	/^extern void	   journal_destroy    (journal_t *);$/;"	p	signature:(journal_t *)
journal_destroy_revoke	./libe2fsck/kernel-jbd.h	/^extern void	   journal_destroy_revoke(journal_t *);$/;"	p	signature:(journal_t *)
journal_destroy_revoke_caches	./libe2fsck/kernel-jbd.h	/^extern void	   journal_destroy_revoke_caches(void);$/;"	p	signature:(void)
journal_dirty_data	./libe2fsck/kernel-jbd.h	/^extern int	 journal_dirty_data (handle_t *,$/;"	p	signature:(handle_t *, struct buffer_head *, int async)
journal_dirty_metadata	./libe2fsck/kernel-jbd.h	/^extern int	 journal_dirty_metadata (handle_t *, struct buffer_head *);$/;"	p	signature:(handle_t *, struct buffer_head *)
journal_errno	./libe2fsck/kernel-jbd.h	/^extern int	   journal_errno      (journal_t *);$/;"	p	signature:(journal_t *)
journal_extend	./libe2fsck/kernel-jbd.h	/^extern int	 journal_extend (handle_t *, int nblocks);$/;"	p	signature:(handle_t *, int nblocks)
journal_file_buffer	./libe2fsck/kernel-jbd.h	/^extern void journal_file_buffer(struct journal_head *, transaction_t *, int);$/;"	p	signature:(struct journal_head *, transaction_t *, int)
journal_flush	./libe2fsck/kernel-jbd.h	/^extern int	 journal_flush (journal_t *);$/;"	p	signature:(journal_t *)
journal_flushpage	./libe2fsck/kernel-jbd.h	/^extern int	 journal_flushpage(journal_t *, struct page *, unsigned long);$/;"	p	signature:(journal_t *, struct page *, unsigned long)
journal_force_commit	./libe2fsck/kernel-jbd.h	/^extern int	    journal_force_commit(journal_t *journal);$/;"	p	signature:(journal_t *journal)
journal_forget	./libe2fsck/kernel-jbd.h	/^extern void	 journal_forget (handle_t *, struct buffer_head *);$/;"	p	signature:(handle_t *, struct buffer_head *)
journal_get_create_access	./libe2fsck/kernel-jbd.h	/^extern int	 journal_get_create_access (handle_t *, struct buffer_head *);$/;"	p	signature:(handle_t *, struct buffer_head *)
journal_get_descriptor_buffer	./libe2fsck/kernel-jbd.h	/^extern struct journal_head * journal_get_descriptor_buffer(journal_t *);$/;"	p	signature:(journal_t *)
journal_get_undo_access	./libe2fsck/kernel-jbd.h	/^extern int	 journal_get_undo_access (handle_t *, struct buffer_head *);$/;"	p	signature:(handle_t *, struct buffer_head *)
journal_get_write_access	./libe2fsck/kernel-jbd.h	/^extern int	 journal_get_write_access (handle_t *, struct buffer_head *);$/;"	p	signature:(handle_t *, struct buffer_head *)
journal_header_s	./libe2fsck/kernel-jbd.h	/^typedef struct journal_header_s$/;"	s
journal_header_s::h_blocktype	./libe2fsck/kernel-jbd.h	/^	__u32		h_blocktype;$/;"	m	struct:journal_header_s	access:public
journal_header_s::h_magic	./libe2fsck/kernel-jbd.h	/^	__u32		h_magic;$/;"	m	struct:journal_header_s	access:public
journal_header_s::h_sequence	./libe2fsck/kernel-jbd.h	/^	__u32		h_sequence;$/;"	m	struct:journal_header_s	access:public
journal_header_t	./libe2fsck/kernel-jbd.h	/^} journal_header_t;$/;"	t	typeref:struct:journal_header_s
journal_init_dev	./libe2fsck/kernel-jbd.h	/^extern journal_t * journal_init_dev(kdev_t dev, kdev_t fs_dev,$/;"	p	signature:(kdev_t dev, kdev_t fs_dev, int start, int len, int bsize)
journal_init_inode	./libe2fsck/kernel-jbd.h	/^extern journal_t * journal_init_inode (struct inode *);$/;"	p	signature:(struct inode *)
journal_init_revoke	./libe2fsck/kernel-jbd.h	/^extern int	   journal_init_revoke(journal_t *, int);$/;"	p	signature:(journal_t *, int)
journal_init_revoke_caches	./libe2fsck/kernel-jbd.h	/^extern int	   journal_init_revoke_caches(void);$/;"	p	signature:(void)
journal_insert_checkpoint	./libe2fsck/kernel-jbd.h	/^extern void journal_insert_checkpoint(struct journal_head *, transaction_t *);$/;"	p	signature:(struct journal_head *, transaction_t *)
journal_io	./libe2fsck/e2fsck.h	/^	io_channel	journal_io;$/;"	m	struct:e2fsck_struct	access:public
journal_load	./libe2fsck/kernel-jbd.h	/^extern int	   journal_load       (journal_t *journal);$/;"	p	signature:(journal_t *journal)
journal_lock_updates	./libe2fsck/kernel-jbd.h	/^extern void	 journal_lock_updates (journal_t *);$/;"	p	signature:(journal_t *)
journal_name	./libe2fsck/e2fsck.h	/^	char	*journal_name;$/;"	m	struct:e2fsck_struct	access:public
journal_next_log_block	./libe2fsck/kernel-jbd.h	/^extern unsigned long journal_next_log_block(journal_t *);$/;"	p	signature:(journal_t *)
journal_only	./libe2fsck/e2fsck_lib.h	/^	int journal_only;$/;"	m	struct:e2fsck_extended_opt	access:public
journal_oom_retry	./libe2fsck/kernel-jbd.h	37;"	d
journal_recover	./libe2fsck/kernel-jbd.h	/^extern int	   journal_recover    (journal_t *journal);$/;"	p	signature:(journal_t *journal)
journal_refile_buffer	./libe2fsck/kernel-jbd.h	/^extern void journal_refile_buffer(struct journal_head *);$/;"	p	signature:(struct journal_head *)
journal_release_buffer	./libe2fsck/kernel-jbd.h	/^extern void	 journal_release_buffer (handle_t *, struct buffer_head *);$/;"	p	signature:(handle_t *, struct buffer_head *)
journal_remove_checkpoint	./libe2fsck/kernel-jbd.h	/^extern void journal_remove_checkpoint(struct journal_head *);$/;"	p	signature:(struct journal_head *)
journal_remove_journal_head	./libe2fsck/kernel-jbd.h	/^extern void	journal_remove_journal_head(struct buffer_head *bh);$/;"	p	signature:(struct buffer_head *bh)
journal_restart	./libe2fsck/kernel-jbd.h	/^extern int	 journal_restart (handle_t *, int nblocks);$/;"	p	signature:(handle_t *, int nblocks)
journal_revoke	./libe2fsck/kernel-jbd.h	/^extern int	   journal_revoke (handle_t *,$/;"	p	signature:(handle_t *, unsigned long, struct buffer_head *)
journal_revoke_header_s	./libe2fsck/kernel-jbd.h	/^typedef struct journal_revoke_header_s$/;"	s
journal_revoke_header_s::r_count	./libe2fsck/kernel-jbd.h	/^	int		 r_count;	\/* Count of bytes used in the block *\/$/;"	m	struct:journal_revoke_header_s	access:public
journal_revoke_header_s::r_header	./libe2fsck/kernel-jbd.h	/^	journal_header_t r_header;$/;"	m	struct:journal_revoke_header_s	access:public
journal_revoke_header_t	./libe2fsck/kernel-jbd.h	/^} journal_revoke_header_t;$/;"	t	typeref:struct:journal_revoke_header_s
journal_s	./libe2fsck/jfs_compat.h	/^struct journal_s$/;"	s
journal_s	./libe2fsck/kernel-jbd.h	/^struct journal_s$/;"	s
journal_s::j_all_journals	./libe2fsck/kernel-jbd.h	/^	struct list_head	j_all_journals;$/;"	m	struct:journal_s	typeref:struct:journal_s::list_head	access:public
journal_s::j_barrier	./libe2fsck/kernel-jbd.h	/^	struct semaphore	j_barrier;$/;"	m	struct:journal_s	typeref:struct:journal_s::semaphore	access:public
journal_s::j_barrier_count	./libe2fsck/kernel-jbd.h	/^	int			j_barrier_count;$/;"	m	struct:journal_s	access:public
journal_s::j_blk_offset	./libe2fsck/jfs_compat.h	/^	unsigned int		j_blk_offset;$/;"	m	struct:journal_s	access:public
journal_s::j_blk_offset	./libe2fsck/kernel-jbd.h	/^	unsigned int		j_blk_offset;$/;"	m	struct:journal_s	access:public
journal_s::j_blocksize	./libe2fsck/jfs_compat.h	/^	int			j_blocksize;$/;"	m	struct:journal_s	access:public
journal_s::j_blocksize	./libe2fsck/kernel-jbd.h	/^	int			j_blocksize;$/;"	m	struct:journal_s	access:public
journal_s::j_checkpoint_sem	./libe2fsck/kernel-jbd.h	/^	struct semaphore 	j_checkpoint_sem;$/;"	m	struct:journal_s	typeref:struct:journal_s::semaphore	access:public
journal_s::j_checkpoint_transactions	./libe2fsck/kernel-jbd.h	/^	transaction_t *		j_checkpoint_transactions;$/;"	m	struct:journal_s	access:public
journal_s::j_commit_interval	./libe2fsck/kernel-jbd.h	/^	unsigned long		j_commit_interval;$/;"	m	struct:journal_s	access:public
journal_s::j_commit_request	./libe2fsck/kernel-jbd.h	/^	tid_t			j_commit_request;$/;"	m	struct:journal_s	access:public
journal_s::j_commit_sequence	./libe2fsck/kernel-jbd.h	/^	tid_t			j_commit_sequence;$/;"	m	struct:journal_s	access:public
journal_s::j_commit_timer	./libe2fsck/kernel-jbd.h	/^	struct timer_list *	j_commit_timer;$/;"	m	struct:journal_s	typeref:struct:journal_s::timer_list	access:public
journal_s::j_commit_timer_active	./libe2fsck/kernel-jbd.h	/^	int			j_commit_timer_active;$/;"	m	struct:journal_s	access:public
journal_s::j_committing_transaction	./libe2fsck/kernel-jbd.h	/^	transaction_t *		j_committing_transaction;$/;"	m	struct:journal_s	access:public
journal_s::j_dev	./libe2fsck/jfs_compat.h	/^	kdev_t			j_dev;$/;"	m	struct:journal_s	access:public
journal_s::j_dev	./libe2fsck/kernel-jbd.h	/^	kdev_t			j_dev;$/;"	m	struct:journal_s	access:public
journal_s::j_errno	./libe2fsck/jfs_compat.h	/^	int			j_errno;$/;"	m	struct:journal_s	access:public
journal_s::j_errno	./libe2fsck/kernel-jbd.h	/^	int			j_errno;$/;"	m	struct:journal_s	access:public
journal_s::j_failed_commit	./libe2fsck/jfs_compat.h	/^	tid_t			j_failed_commit;$/;"	m	struct:journal_s	access:public
journal_s::j_failed_commit	./libe2fsck/kernel-jbd.h	/^	unsigned int		j_failed_commit;$/;"	m	struct:journal_s	access:public
journal_s::j_first	./libe2fsck/jfs_compat.h	/^	unsigned long		j_first, j_last;$/;"	m	struct:journal_s	access:public
journal_s::j_first	./libe2fsck/kernel-jbd.h	/^	unsigned long		j_first, j_last;$/;"	m	struct:journal_s	access:public
journal_s::j_flags	./libe2fsck/jfs_compat.h	/^	unsigned long		j_flags;$/;"	m	struct:journal_s	access:public
journal_s::j_flags	./libe2fsck/kernel-jbd.h	/^	unsigned long		j_flags;$/;"	m	struct:journal_s	access:public
journal_s::j_format_version	./libe2fsck/jfs_compat.h	/^	int			j_format_version;$/;"	m	struct:journal_s	access:public
journal_s::j_format_version	./libe2fsck/kernel-jbd.h	/^	int			j_format_version;$/;"	m	struct:journal_s	access:public
journal_s::j_free	./libe2fsck/jfs_compat.h	/^	unsigned long		j_free;$/;"	m	struct:journal_s	access:public
journal_s::j_free	./libe2fsck/kernel-jbd.h	/^	unsigned long		j_free;$/;"	m	struct:journal_s	access:public
journal_s::j_fs_dev	./libe2fsck/jfs_compat.h	/^	kdev_t			j_fs_dev;$/;"	m	struct:journal_s	access:public
journal_s::j_fs_dev	./libe2fsck/kernel-jbd.h	/^	kdev_t			j_fs_dev;$/;"	m	struct:journal_s	access:public
journal_s::j_head	./libe2fsck/jfs_compat.h	/^	unsigned long		j_head;$/;"	m	struct:journal_s	access:public
journal_s::j_head	./libe2fsck/kernel-jbd.h	/^	unsigned long		j_head;$/;"	m	struct:journal_s	access:public
journal_s::j_inode	./libe2fsck/jfs_compat.h	/^	struct inode *		j_inode;$/;"	m	struct:journal_s	typeref:struct:journal_s::inode	access:public
journal_s::j_inode	./libe2fsck/kernel-jbd.h	/^	struct inode *		j_inode;$/;"	m	struct:journal_s	typeref:struct:journal_s::inode	access:public
journal_s::j_last	./libe2fsck/jfs_compat.h	/^	unsigned long		j_first, j_last;$/;"	m	struct:journal_s	access:public
journal_s::j_last	./libe2fsck/kernel-jbd.h	/^	unsigned long		j_first, j_last;$/;"	m	struct:journal_s	access:public
journal_s::j_max_transaction_buffers	./libe2fsck/kernel-jbd.h	/^	int			j_max_transaction_buffers;$/;"	m	struct:journal_s	access:public
journal_s::j_maxlen	./libe2fsck/jfs_compat.h	/^	unsigned int		j_maxlen;$/;"	m	struct:journal_s	access:public
journal_s::j_maxlen	./libe2fsck/kernel-jbd.h	/^	unsigned int		j_maxlen;$/;"	m	struct:journal_s	access:public
journal_s::j_revoke	./libe2fsck/jfs_compat.h	/^	struct jbd_revoke_table_s *j_revoke;$/;"	m	struct:journal_s	typeref:struct:journal_s::jbd_revoke_table_s	access:public
journal_s::j_revoke	./libe2fsck/kernel-jbd.h	/^	struct jbd_revoke_table_s *j_revoke;$/;"	m	struct:journal_s	typeref:struct:journal_s::jbd_revoke_table_s	access:public
journal_s::j_running_transaction	./libe2fsck/kernel-jbd.h	/^	transaction_t *		j_running_transaction;$/;"	m	struct:journal_s	access:public
journal_s::j_sb_buffer	./libe2fsck/jfs_compat.h	/^	struct buffer_head *	j_sb_buffer;$/;"	m	struct:journal_s	typeref:struct:journal_s::buffer_head	access:public
journal_s::j_sb_buffer	./libe2fsck/kernel-jbd.h	/^	struct buffer_head *	j_sb_buffer;$/;"	m	struct:journal_s	typeref:struct:journal_s::buffer_head	access:public
journal_s::j_sem	./libe2fsck/kernel-jbd.h	/^	struct semaphore	j_sem;$/;"	m	struct:journal_s	typeref:struct:journal_s::semaphore	access:public
journal_s::j_superblock	./libe2fsck/jfs_compat.h	/^	struct journal_superblock_s *j_superblock;$/;"	m	struct:journal_s	typeref:struct:journal_s::journal_superblock_s	access:public
journal_s::j_superblock	./libe2fsck/kernel-jbd.h	/^	journal_superblock_t *	j_superblock;$/;"	m	struct:journal_s	access:public
journal_s::j_tail	./libe2fsck/jfs_compat.h	/^	unsigned long		j_tail;$/;"	m	struct:journal_s	access:public
journal_s::j_tail	./libe2fsck/kernel-jbd.h	/^	unsigned long		j_tail;$/;"	m	struct:journal_s	access:public
journal_s::j_tail_sequence	./libe2fsck/jfs_compat.h	/^	tid_t			j_tail_sequence;$/;"	m	struct:journal_s	access:public
journal_s::j_tail_sequence	./libe2fsck/kernel-jbd.h	/^	tid_t			j_tail_sequence;$/;"	m	struct:journal_s	access:public
journal_s::j_task	./libe2fsck/kernel-jbd.h	/^	struct task_struct *	j_task;$/;"	m	struct:journal_s	typeref:struct:journal_s::task_struct	access:public
journal_s::j_transaction_sequence	./libe2fsck/jfs_compat.h	/^	tid_t			j_transaction_sequence;$/;"	m	struct:journal_s	access:public
journal_s::j_transaction_sequence	./libe2fsck/kernel-jbd.h	/^	tid_t			j_transaction_sequence;$/;"	m	struct:journal_s	access:public
journal_s::j_uuid	./libe2fsck/jfs_compat.h	/^	__u8			j_uuid[16];$/;"	m	struct:journal_s	access:public
journal_s::j_uuid	./libe2fsck/kernel-jbd.h	/^	__u8			j_uuid[16];$/;"	m	struct:journal_s	access:public
journal_s::j_wait_checkpoint	./libe2fsck/kernel-jbd.h	/^	wait_queue_head_t	j_wait_checkpoint;$/;"	m	struct:journal_s	access:public
journal_s::j_wait_commit	./libe2fsck/kernel-jbd.h	/^	wait_queue_head_t	j_wait_commit;$/;"	m	struct:journal_s	access:public
journal_s::j_wait_done_commit	./libe2fsck/kernel-jbd.h	/^	wait_queue_head_t	j_wait_done_commit;$/;"	m	struct:journal_s	access:public
journal_s::j_wait_logspace	./libe2fsck/kernel-jbd.h	/^	wait_queue_head_t	j_wait_logspace;$/;"	m	struct:journal_s	access:public
journal_s::j_wait_transaction_locked	./libe2fsck/kernel-jbd.h	/^	wait_queue_head_t	j_wait_transaction_locked;$/;"	m	struct:journal_s	access:public
journal_s::j_wait_updates	./libe2fsck/kernel-jbd.h	/^	wait_queue_head_t	j_wait_updates;$/;"	m	struct:journal_s	access:public
journal_set_features	./libe2fsck/kernel-jbd.h	/^extern int	   journal_set_features$/;"	p	signature:(journal_t *, unsigned long, unsigned long, unsigned long)
journal_set_revoke	./libe2fsck/kernel-jbd.h	/^extern int	   journal_set_revoke(journal_t *, unsigned long, tid_t);$/;"	p	signature:(journal_t *, unsigned long, tid_t)
journal_size	./libmke2fs/mke2fs.h	/^	int journal_size;$/;"	m	struct:e2fs_cfg	access:public
journal_skip_recovery	./libe2fsck/kernel-jbd.h	/^extern int	   journal_skip_recovery (journal_t *);$/;"	p	signature:(journal_t *)
journal_start	./libe2fsck/kernel-jbd.h	/^extern handle_t *journal_start(journal_t *, int nblocks);$/;"	p	signature:(journal_t *, int nblocks)
journal_stop	./libe2fsck/kernel-jbd.h	/^extern int	 journal_stop(handle_t *);$/;"	p	signature:(handle_t *)
journal_superblock_s	./libe2fsck/kernel-jbd.h	/^typedef struct journal_superblock_s$/;"	s
journal_superblock_s::s_blocksize	./libe2fsck/kernel-jbd.h	/^	__u32	s_blocksize;		\/* journal device blocksize *\/$/;"	m	struct:journal_superblock_s	access:public
journal_superblock_s::s_dynsuper	./libe2fsck/kernel-jbd.h	/^	__u32	s_dynsuper;		\/* Blocknr of dynamic superblock copy*\/$/;"	m	struct:journal_superblock_s	access:public
journal_superblock_s::s_errno	./libe2fsck/kernel-jbd.h	/^	__s32	s_errno;$/;"	m	struct:journal_superblock_s	access:public
journal_superblock_s::s_feature_compat	./libe2fsck/kernel-jbd.h	/^	__u32	s_feature_compat; 	\/* compatible feature set *\/$/;"	m	struct:journal_superblock_s	access:public
journal_superblock_s::s_feature_incompat	./libe2fsck/kernel-jbd.h	/^	__u32	s_feature_incompat; 	\/* incompatible feature set *\/$/;"	m	struct:journal_superblock_s	access:public
journal_superblock_s::s_feature_ro_compat	./libe2fsck/kernel-jbd.h	/^	__u32	s_feature_ro_compat; 	\/* readonly-compatible feature set *\/$/;"	m	struct:journal_superblock_s	access:public
journal_superblock_s::s_first	./libe2fsck/kernel-jbd.h	/^	__u32	s_first;		\/* first block of log information *\/$/;"	m	struct:journal_superblock_s	access:public
journal_superblock_s::s_header	./libe2fsck/kernel-jbd.h	/^	journal_header_t s_header;$/;"	m	struct:journal_superblock_s	access:public
journal_superblock_s::s_max_trans_data	./libe2fsck/kernel-jbd.h	/^	__u32	s_max_trans_data;	\/* Limit of data blocks per trans. *\/$/;"	m	struct:journal_superblock_s	access:public
journal_superblock_s::s_max_transaction	./libe2fsck/kernel-jbd.h	/^	__u32	s_max_transaction;	\/* Limit of journal blocks per trans.*\/$/;"	m	struct:journal_superblock_s	access:public
journal_superblock_s::s_maxlen	./libe2fsck/kernel-jbd.h	/^	__u32	s_maxlen;		\/* total blocks in journal file *\/$/;"	m	struct:journal_superblock_s	access:public
journal_superblock_s::s_nr_users	./libe2fsck/kernel-jbd.h	/^	__u32	s_nr_users;		\/* Nr of filesystems sharing log *\/$/;"	m	struct:journal_superblock_s	access:public
journal_superblock_s::s_padding	./libe2fsck/kernel-jbd.h	/^	__u32	s_padding[44];$/;"	m	struct:journal_superblock_s	access:public
journal_superblock_s::s_sequence	./libe2fsck/kernel-jbd.h	/^	__u32	s_sequence;		\/* first commit ID expected in log *\/$/;"	m	struct:journal_superblock_s	access:public
journal_superblock_s::s_start	./libe2fsck/kernel-jbd.h	/^	__u32	s_start;		\/* blocknr of start of log *\/$/;"	m	struct:journal_superblock_s	access:public
journal_superblock_s::s_users	./libe2fsck/kernel-jbd.h	/^	__u8	s_users[JFS_USERS_SIZE];		\/* ids of all fs'es sharing the log *\/$/;"	m	struct:journal_superblock_s	access:public
journal_superblock_s::s_uuid	./libe2fsck/kernel-jbd.h	/^	__u8	s_uuid[16];		\/* 128-bit uuid for journal *\/$/;"	m	struct:journal_superblock_s	access:public
journal_superblock_t	./libe2fsck/kernel-jbd.h	/^} journal_superblock_t;$/;"	t	typeref:struct:journal_superblock_s
journal_sync_buffer	./libe2fsck/kernel-jbd.h	/^extern void	 journal_sync_buffer (struct buffer_head *);$/;"	p	signature:(struct buffer_head *)
journal_t	./libe2fsck/jfs_compat.h	/^typedef struct journal_s journal_t;$/;"	t	typeref:struct:journal_s
journal_t	./libe2fsck/kernel-jbd.h	/^typedef struct journal_s	journal_t;	\/* Journal control structure *\/$/;"	t	typeref:struct:journal_s
journal_tag_bytes	./libe2fsck/jfs_user.h	/^_INLINE_ size_t journal_tag_bytes(journal_t *journal)$/;"	f	signature:(journal_t *journal)
journal_tag_bytes	./libe2fsck/jfs_user.h	/^extern size_t journal_tag_bytes(journal_t *journal);$/;"	p	signature:(journal_t *journal)
journal_test_revoke	./libe2fsck/kernel-jbd.h	/^extern int	   journal_test_revoke(journal_t *, unsigned long, tid_t);$/;"	p	signature:(journal_t *, unsigned long, tid_t)
journal_try_start	./libe2fsck/kernel-jbd.h	/^extern handle_t *journal_try_start(journal_t *, int nblocks);$/;"	p	signature:(journal_t *, int nblocks)
journal_try_to_free_buffers	./libe2fsck/kernel-jbd.h	/^extern int	 journal_try_to_free_buffers(journal_t *, struct page *, int);$/;"	p	signature:(journal_t *, struct page *, int)
journal_unfile_buffer	./libe2fsck/kernel-jbd.h	/^extern void journal_unfile_buffer(struct journal_head *);$/;"	p	signature:(struct journal_head *)
journal_unlock_journal_head	./libe2fsck/kernel-jbd.h	/^extern void	journal_unlock_journal_head(struct journal_head *jh);$/;"	p	signature:(struct journal_head *jh)
journal_unlock_updates	./libe2fsck/kernel-jbd.h	/^extern void	 journal_unlock_updates (journal_t *);$/;"	p	signature:(journal_t *)
journal_update_format	./libe2fsck/kernel-jbd.h	/^extern int	   journal_update_format (journal_t *);$/;"	p	signature:(journal_t *)
journal_update_superblock	./libe2fsck/kernel-jbd.h	/^extern void	   journal_update_superblock (journal_t *, int);$/;"	p	signature:(journal_t *, int)
journal_wipe	./libe2fsck/kernel-jbd.h	/^extern int	   journal_wipe       (journal_t *, int);$/;"	p	signature:(journal_t *, int)
journal_write_metadata_buffer	./libe2fsck/kernel-jbd.h	/^journal_write_metadata_buffer(transaction_t	  *transaction,$/;"	p	signature:(transaction_t *transaction, struct journal_head *jh_in, struct journal_head **jh_out, int blocknr)
journal_write_revoke_records	./libe2fsck/kernel-jbd.h	/^extern void	   journal_write_revoke_records(journal_t *, transaction_t *);$/;"	p	signature:(journal_t *, transaction_t *)
k_ctx	./libe2fsck/jfs_user.h	/^	e2fsck_t	k_ctx;$/;"	m	struct:kdev_s	access:public
k_dev	./libe2fsck/jfs_user.h	/^	int		k_dev;$/;"	m	struct:kdev_s	access:public
kdev_s	./libe2fsck/jfs_user.h	/^struct kdev_s {$/;"	s
kdev_s::k_ctx	./libe2fsck/jfs_user.h	/^	e2fsck_t	k_ctx;$/;"	m	struct:kdev_s	access:public
kdev_s::k_dev	./libe2fsck/jfs_user.h	/^	int		k_dev;$/;"	m	struct:kdev_s	access:public
kdev_t	./libe2fsck/jfs_user.h	/^typedef struct kdev_s *kdev_t;$/;"	t	typeref:struct:kdev_s
kfree	./libe2fsck/jfs_user.h	60;"	d
kill_subarray	./libmdadm/mdadm.h	/^	int (*kill_subarray)(struct supertype *st); \/* optional *\/$/;"	m	struct:superswitch	access:public
kmalloc	./libe2fsck/jfs_user.h	59;"	d
kmem_cache_alloc	./libe2fsck/jfs_user.h	55;"	d
kmem_cache_create	./libe2fsck/jfs_user.h	57;"	d
kmem_cache_destroy	./libe2fsck/jfs_user.h	58;"	d
kmem_cache_free	./libe2fsck/jfs_user.h	56;"	d
large_files	./libe2fsck/e2fsck.h	/^	__u32 large_files;$/;"	m	struct:e2fsck_struct	access:public
last_checkpoint	./libmdadm/mdmon.h	/^	unsigned long long last_checkpoint; \/* sync_completed fires for many$/;"	m	struct:active_array	access:public
last_cyl	./libmdadm/part.h	/^  __u8 last_cyl;$/;"	m	struct:MBR_part_record	access:public
last_head	./libmdadm/part.h	/^  __u8 last_head;$/;"	m	struct:MBR_part_record	access:public
last_lba	./libmdadm/part.h	/^	__u64 last_lba;$/;"	m	struct:GPT	access:public
last_sector	./libmdadm/part.h	/^  __u8 last_sector;$/;"	m	struct:MBR_part_record	access:public
latch_code	./libe2fsck/problemP.h	/^	int		latch_code;$/;"	m	struct:latch_descr	access:public
latch_descr	./libe2fsck/problemP.h	/^struct latch_descr {$/;"	s
latch_descr::end_message	./libe2fsck/problemP.h	/^	problem_t	end_message;$/;"	m	struct:latch_descr	access:public
latch_descr::flags	./libe2fsck/problemP.h	/^	int		flags;$/;"	m	struct:latch_descr	access:public
latch_descr::latch_code	./libe2fsck/problemP.h	/^	int		latch_code;$/;"	m	struct:latch_descr	access:public
latch_descr::question	./libe2fsck/problemP.h	/^	problem_t	question;$/;"	m	struct:latch_descr	access:public
layout	./libmdadm/md_p.h	/^	__u32 layout;		\/*  0 the array's physical layout	      *\/$/;"	m	struct:mdp_superblock_s	access:public
layout	./libmdadm/md_u.h	/^	int layout;		\/*  0 the array's physical layout	      *\/$/;"	m	struct:mdu_array_info_s	access:public
layout	./libmdadm/mdadm.h	/^		int layout;$/;"	m	struct:reshape::__anon8	access:public
layout	./libmdadm/mdadm.h	/^	int	layout;$/;"	m	struct:shape	access:public
layout_str	./libmdadm/mdadm.h	/^	char	*layout_str;$/;"	m	struct:shape	access:public
len	./libmdadm/mdadm.h	/^	int	len;$/;"	m	struct:metadata_update	access:public
len	./libmdadm/platform-intel.h	/^	__u8 len; \/* number of bytes in this entire table *\/$/;"	m	struct:imsm_orom	access:public
level	./libmdadm/md_p.h	/^	__u32 level;		\/*  7 Raid personality			      *\/$/;"	m	struct:mdp_superblock_s	access:public
level	./libmdadm/md_u.h	/^	int level;$/;"	m	struct:mdu_array_info_s	access:public
level	./libmdadm/mdadm.h	/^	char		*level;$/;"	m	struct:mdstat_ent	access:public
level	./libmdadm/mdadm.h	/^	int	level;$/;"	m	struct:mddev_ident	access:public
level	./libmdadm/mdadm.h	/^	int	level;$/;"	m	struct:shape	access:public
level	./libmdadm/mdadm.h	/^	int level;$/;"	m	struct:reshape	access:public
likely	./libe2fsck/crc32defs.h	59;"	d
likely	./libe2fsck/crc32defs.h	62;"	d
list	./libmdadm/bitmap.h	/^	struct list_head list;$/;"	m	struct:page_list	typeref:struct:page_list::list_head	access:public
list	./libmke2fs/ext2fsP.h	/^	__u32	*list;$/;"	m	struct:ext2_struct_u32_list	access:public
list	./libmke2fs/ext2fsP.h	/^	struct ext2_db_entry2 *	list;$/;"	m	struct:ext2_struct_dblist	typeref:struct:ext2_struct_dblist::ext2_db_entry2	access:public
list_add	./libe2fsck/kernel-list.h	/^static __inline__ void list_add(struct list_head *new, struct list_head *head)$/;"	f	signature:(struct list_head *new, struct list_head *head)
list_add_tail	./libe2fsck/kernel-list.h	/^static __inline__ void list_add_tail(struct list_head *new, struct list_head *head)$/;"	f	signature:(struct list_head *new, struct list_head *head)
list_del	./libe2fsck/kernel-list.h	/^static __inline__ void list_del(struct list_head *entry)$/;"	f	signature:(struct list_head *entry)
list_empty	./libe2fsck/kernel-list.h	/^static __inline__ int list_empty(struct list_head *head)$/;"	f	signature:(struct list_head *head)
list_entry	./libe2fsck/kernel-list.h	103;"	d
list_for_each	./libe2fsck/kernel-list.h	106;"	d
list_head	./libe2fsck/kernel-list.h	/^struct list_head {$/;"	s
list_head::next	./libe2fsck/kernel-list.h	/^	struct list_head *next, *prev;$/;"	m	struct:list_head	typeref:struct:list_head::list_head	access:public
list_head::prev	./libe2fsck/kernel-list.h	/^	struct list_head *next, *prev;$/;"	m	struct:list_head	typeref:struct:list_head::	access:public
list_splice	./libe2fsck/kernel-list.h	/^static __inline__ void list_splice(struct list_head *list, struct list_head *head)$/;"	f	signature:(struct list_head *list, struct list_head *head)
lkmem_cache_t	./libe2fsck/jfs_user.h	/^} lkmem_cache_t;$/;"	t	typeref:struct:__anon3
ll_rw_block	./libe2fsck/jfs_user.h	/^void ll_rw_block(int rw, int dummy, struct buffer_head *bh[]);$/;"	p	signature:(int rw, int dummy, struct buffer_head *bh[])
lnf_repair_block	./libe2fsck/e2fsck.h	/^	blk64_t root_repair_block, lnf_repair_block;$/;"	m	struct:e2fsck_struct	access:public
load_container	./libmdadm/mdadm.h	/^	int (*load_container)(struct supertype *st, int fd, char *devname);$/;"	m	struct:superswitch	access:public
load_super	./libmdadm/mdadm.h	/^	int (*load_super)(struct supertype *st, int fd, char *devname);$/;"	m	struct:superswitch	access:public
load_sys	./libmdadm/mdadm.h	/^extern int load_sys(char *path, char *buf);$/;"	p	signature:(char *path, char *buf)
locate_backup	./libmdadm/mdadm.h	/^extern char *locate_backup(char *name);$/;"	p	signature:(char *name)
locate_bitmap	./libmdadm/mdadm.h	/^	void (*locate_bitmap)(struct supertype *st, int fd);$/;"	m	struct:superswitch	access:public
lock	./libmdadm/bitmap.h	/^	spinlock_t lock;$/;"	m	struct:bitmap	access:public
lock_buffer	./libe2fsck/jfs_user.h	44;"	d
lock_journal	./libe2fsck/kernel-jbd.h	/^static inline void lock_journal(journal_t *journal)$/;"	f	signature:(journal_t *journal)
log_do_checkpoint	./libe2fsck/kernel-jbd.h	/^extern int	log_do_checkpoint (journal_t *, int);$/;"	p	signature:(journal_t *, int)
log_fn	./libe2fsck/e2fsck.h	/^	char	*log_fn;$/;"	m	struct:e2fsck_struct	access:public
log_max	./libmke2fs/ext2fsP.h	/^	int		log_max;$/;"	m	struct:ext2fs_numeric_progress_struct	access:public
log_space_left	./libe2fsck/kernel-jbd.h	/^extern int	log_space_left (journal_t *); \/* Called with journal locked *\/$/;"	p	signature:(journal_t *)
log_start_commit	./libe2fsck/kernel-jbd.h	/^extern tid_t	log_start_commit (journal_t *, transaction_t *);$/;"	p	signature:(journal_t *, transaction_t *)
log_wait_commit	./libe2fsck/kernel-jbd.h	/^extern void	log_wait_commit (journal_t *, tid_t);$/;"	p	signature:(journal_t *, tid_t)
log_wait_for_space	./libe2fsck/kernel-jbd.h	/^extern void	log_wait_for_space(journal_t *, int nblocks);$/;"	p	signature:(journal_t *, int nblocks)
logf	./libe2fsck/e2fsck.h	/^	FILE	*logf;$/;"	m	struct:e2fsck_struct	access:public
lost_and_found	./libe2fsck/e2fsck.h	/^	ext2_ino_t lost_and_found;$/;"	m	struct:e2fsck_struct	access:public
lseek64	./libmdadm/mdadm.h	/^extern __off64_t lseek64 __P ((int __fd, __off64_t __offset, int __whence));$/;"	p	signature:(int __fd, __off64_t __offset, int __whence)
lseek64	./libmdadm/mdadm.h	1090;"	d
lseek64	./libmdadm/mdadm.h	32;"	d
m_BlockLength	./RAIDManager.h	/^	uint8_t m_BlockLength[4];$/;"	m	struct:SGReadCapacity10	access:public
m_BlockLength	./RAIDManager.h	/^	uint8_t m_BlockLength[4];$/;"	m	struct:SGReadCapacity16	access:public
m_CreationTime	./RAIDManager.h	/^	time_t			m_CreationTime;$/;"	m	struct:RAIDInfo	access:public
m_LogicalBlockAddr	./RAIDManager.h	/^	uint8_t m_LogicalBlockAddr[4];$/;"	m	struct:SGReadCapacity10	access:public
m_LogicalBlockAddr	./RAIDManager.h	/^	uint8_t m_LogicalBlockAddr[8];$/;"	m	struct:SGReadCapacity16	access:public
m_ProtectionInfo	./RAIDManager.h	/^	uint8_t m_ProtectionInfo; \/\/ bit 0: PROT_EN, bit 1:3: P_TYPE, bit 4:7: reserved$/;"	m	struct:SGReadCapacity16	access:public
m_RaidUUID	./RAIDManager.h	/^	int32_t		m_RaidUUID[4];			\/* Get after Examine(). *\/$/;"	m	struct:RAIDDiskInfo	access:public
m_Reserved	./RAIDManager.h	/^	uint8_t m_Reserved[19];$/;"	m	struct:SGReadCapacity16	access:public
m_UUID	./RAIDManager.h	/^	uint32_t		m_UUID[4];$/;"	m	struct:RAIDInfo	access:public
m_UpdateTime	./RAIDManager.h	/^	time_t			m_UpdateTime;$/;"	m	struct:RAIDInfo	access:public
m_bFormat	./FilesystemManager.h	/^	bool m_bFormat;$/;"	m	class:FilesystemManager	access:private
m_bFormat	./RAIDManager.h	/^	bool			m_bFormat;$/;"	m	struct:RAIDInfo	access:public
m_bHasMDSB	./RAIDManager.h	/^	bool		m_bHasMDSB;$/;"	m	struct:RAIDDiskInfo	access:public
m_bInMDStat	./RAIDManager.h	/^	bool m_bInMDStat;$/;"	m	struct:MDProfile	access:public
m_bInactive	./RAIDManager.h	/^	bool			m_bInactive;$/;"	m	struct:RAIDInfo	access:public
m_bInitialized	./FilesystemManager.h	/^	bool m_bInitialized;$/;"	m	class:FilesystemManager	access:private
m_bMount	./FilesystemManager.h	/^	bool m_bMount;$/;"	m	class:FilesystemManager	access:private
m_bMount	./RAIDManager.h	/^	bool			m_bMount;$/;"	m	struct:RAIDInfo	access:public
m_bRebuilding	./RAIDManager.h	/^	bool			m_bRebuilding;$/;"	m	struct:RAIDInfo	access:public
m_bSMARTSupport	./RAIDManager.h	/^	bool m_bSMARTSupport;$/;"	m	struct:DiskProfile	access:public
m_bSuperBlockPersistent	./RAIDManager.h	/^	bool			m_bSuperBlockPersistent;$/;"	m	struct:RAIDInfo	access:public
m_bUsedMD	./RAIDManager.h	/^	bool m_bUsedMD[128];$/;"	m	class:RAIDManager	access:private
m_bUsedVolume	./RAIDManager.h	/^	bool m_bUsedVolume[128];$/;"	m	class:RAIDManager	access:private
m_bytePQPDT	./RAIDManager.h	/^	uint8_t m_bytePQPDT; \/* bit 5-7: Peripheral Qualifier, bit 0-4: Peripheral Device Type *\/$/;"	m	struct:SGSerialNoPage	access:public
m_bytePageCode	./RAIDManager.h	/^	uint8_t m_bytePageCode;$/;"	m	struct:SGSerialNoPage	access:public
m_bytePageLength	./RAIDManager.h	/^	uint8_t m_bytePageLength;$/;"	m	struct:SGSerialNoPage	access:public
m_bytePageSN	./RAIDManager.h	/^	uint8_t m_bytePageSN[32];$/;"	m	struct:SGSerialNoPage	access:public
m_byteReservied	./RAIDManager.h	/^	uint8_t m_byteReservied;$/;"	m	struct:SGSerialNoPage	access:public
m_cb	./RAIDManager.h	/^	raidmgr_cb m_cb;$/;"	m	class:RAIDManager	access:private
m_cs	./test_utils.h	/^	CriticalSection *m_cs;$/;"	m	class:CriticalSectionLock	access:private
m_csDiskProfiles	./RAIDManager.h	/^	CriticalSection m_csDiskProfiles;$/;"	m	class:RAIDManager	access:private
m_csFormat	./FilesystemManager.h	/^	CriticalSection m_csFormat;$/;"	m	class:FilesystemManager	access:private
m_csInitialized	./FilesystemManager.h	/^	CriticalSection m_csInitialized;$/;"	m	class:FilesystemManager	access:private
m_csLastError	./RAIDManager.h	/^	CriticalSection m_csLastError;$/;"	m	class:RAIDManager	access:private
m_csMDProfiles	./RAIDManager.h	/^	CriticalSection m_csMDProfiles;$/;"	m	class:RAIDManager	access:private
m_csMount	./FilesystemManager.h	/^	CriticalSection m_csMount;$/;"	m	class:FilesystemManager	access:private
m_csNotifyChange	./RAIDManager.h	/^	CriticalSection m_csNotifyChange;$/;"	m	class:RAIDManager	access:private
m_csUsedMD	./RAIDManager.h	/^	CriticalSection m_csUsedMD;$/;"	m	class:RAIDManager	access:private
m_csUsedVolume	./RAIDManager.h	/^	CriticalSection m_csUsedVolume;$/;"	m	class:RAIDManager	access:private
m_diskProfile	./RAIDManager.h	/^	DiskProfile m_diskProfile;$/;"	m	struct:RAIDDiskInfo	access:public
m_diskType	./RAIDManager.h	/^	eDiskType m_diskType;$/;"	m	struct:DiskProfile	access:public
m_fsMgr	./RAIDManager.h	/^	smart_ptr<FilesystemManager> m_fsMgr;$/;"	m	struct:MDProfile	access:public
m_iActiveDiskNum	./RAIDManager.h	/^	int32_t			m_iActiveDiskNum;$/;"	m	struct:RAIDInfo	access:public
m_iBay	./RAIDManager.h	/^	int m_iBay;$/;"	m	struct:DiskProfile	access:public
m_iChunkSize	./RAIDManager.h	/^	int32_t			m_iChunkSize;$/;"	m	struct:RAIDInfo	access:public
m_iDevCount	./RAIDManager.h	/^	int m_iDevCount;$/;"	m	struct:MDProfile	access:public
m_iFailedDiskNum	./RAIDManager.h	/^	int32_t			m_iFailedDiskNum;$/;"	m	struct:RAIDInfo	access:public
m_iFormatProgress	./FilesystemManager.h	/^	int m_iFormatProgress;$/;"	m	class:FilesystemManager	access:private
m_iFormatProgress	./RAIDManager.h	/^	int32_t			m_iFormatProgress;$/;"	m	struct:RAIDInfo	access:public
m_iFormatingState	./FilesystemManager.h	/^	int m_iFormatingState;$/;"	m	class:FilesystemManager	access:private
m_iFormatingState	./RAIDManager.h	/^	int32_t			m_iFormatingState;$/;"	m	struct:RAIDInfo	access:public
m_iLock	./test_utils.h	/^	int m_iLock;$/;"	m	class:CriticalSection	access:private
m_iMDNum	./RAIDManager.h	/^	int m_iMDNum;$/;"	m	struct:MDProfile	access:public
m_iMDNum	./RAIDManager.h	/^	int32_t			m_iMDNum;$/;"	m	struct:RAIDInfo	access:public
m_iMajor	./RAIDManager.h	/^	int32_t		m_iMajor;				\/* For confirming whether disk is valid or not. *\/$/;"	m	struct:RAIDDiskInfo	access:public
m_iMinor	./RAIDManager.h	/^	int32_t		m_iMinor;				\/* For confirming whether disk is valid or not. *\/$/;"	m	struct:RAIDDiskInfo	access:public
m_iRAIDDiskNum	./RAIDManager.h	/^	int32_t			m_iRAIDDiskNum;$/;"	m	struct:RAIDInfo	access:public
m_iRAIDLevel	./RAIDManager.h	/^	int32_t			m_iRAIDLevel;$/;"	m	struct:RAIDInfo	access:public
m_iRaidDiskNum	./RAIDManager.h	/^	int32_t		m_iRaidDiskNum;$/;"	m	struct:RAIDDiskInfo	access:public
m_iRaidDisks	./RAIDManager.h	/^	int m_iRaidDisks; $/;"	m	struct:MDProfile	access:public
m_iRebuildingProgress	./RAIDManager.h	/^	int32_t			m_iRebuildingProgress;$/;"	m	struct:RAIDInfo	access:public
m_iSpareDiskNum	./RAIDManager.h	/^	int32_t			m_iSpareDiskNum;$/;"	m	struct:RAIDInfo	access:public
m_iState	./RAIDManager.h	/^	int32_t			m_iState;$/;"	m	struct:RAIDInfo	access:public
m_iState	./RAIDManager.h	/^	int32_t		m_iState;$/;"	m	struct:RAIDDiskInfo	access:public
m_iTotalDiskNum	./RAIDManager.h	/^	int32_t			m_iTotalDiskNum;$/;"	m	struct:RAIDInfo	access:public
m_iVolumeNum	./FilesystemManager.h	/^	int m_iVolumeNum;$/;"	m	class:FilesystemManager	access:private
m_iWorkingDiskNum	./RAIDManager.h	/^	int32_t			m_iWorkingDiskNum;$/;"	m	struct:RAIDInfo	access:public
m_llCapacity	./RAIDManager.h	/^	uint64_t m_llCapacity;$/;"	m	struct:DiskProfile	access:public
m_mapDiskProfiles	./RAIDManager.h	/^	map<string, DiskProfile> m_mapDiskProfiles; \/* \/dev\/sdX, profile *\/$/;"	m	class:RAIDManager	access:private
m_mapMDProfiles	./RAIDManager.h	/^	map<string, MDProfile> m_mapMDProfiles; \/* \/dev\/mdX, profile *\/$/;"	m	class:RAIDManager	access:private
m_mkfsHandle	./FilesystemManager.h	/^	mke2fs_handle m_mkfsHandle;$/;"	m	class:FilesystemManager	access:private
m_pNotifyChange	./RAIDManager.h	/^	AprCond *m_pNotifyChange;$/;"	m	class:RAIDManager	access:private
m_semAssemble	./RAIDManager.h	/^	Semaphore m_semAssemble;$/;"	m	class:RAIDManager	access:private
m_strDevNode	./FilesystemManager.h	/^	string m_strDevNode;$/;"	m	class:FilesystemManager	access:private
m_strDevPath	./RAIDManager.h	/^	string			m_strDevPath;$/;"	m	struct:RAIDInfo	access:public
m_strDevPath	./RAIDManager.h	/^	string		m_strDevPath;			\/* Device node *\/$/;"	m	struct:RAIDDiskInfo	access:public
m_strDevPath	./RAIDManager.h	/^	string m_strDevPath;$/;"	m	struct:DiskProfile	access:public
m_strDevPath	./RAIDManager.h	/^	string m_strDevPath;$/;"	m	struct:MDProfile	access:public
m_strFSType	./FilesystemManager.h	/^	string m_strFSType;$/;"	m	class:FilesystemManager	access:private
m_strFWVer	./RAIDManager.h	/^	string m_strFWVer;$/;"	m	struct:DiskProfile	access:public
m_strLastError	./RAIDManager.h	/^	string m_strLastError;$/;"	m	class:RAIDManager	access:private
m_strLayout	./RAIDManager.h	/^	string			m_strLayout;$/;"	m	struct:RAIDInfo	access:public
m_strMDDev	./RAIDManager.h	/^	string m_strMDDev;$/;"	m	struct:DiskProfile	access:public
m_strModel	./RAIDManager.h	/^	string m_strModel;$/;"	m	struct:DiskProfile	access:public
m_strMountPoint	./FilesystemManager.h	/^	string m_strMountPoint;$/;"	m	class:FilesystemManager	access:private
m_strMountPoint	./RAIDManager.h	/^	string			m_strMountPoint;$/;"	m	struct:RAIDInfo	access:public
m_strRebuildingOperation	./RAIDManager.h	/^	string			m_strRebuildingOperation;$/;"	m	struct:RAIDInfo	access:public
m_strSMARTOverall	./RAIDManager.h	/^	string m_strSMARTOverall;$/;"	m	struct:DiskProfile	access:public
m_strSerialNum	./RAIDManager.h	/^	string m_strSerialNum;$/;"	m	struct:DiskProfile	access:public
m_strState	./RAIDManager.h	/^	string			m_strState;$/;"	m	struct:RAIDInfo	access:public
m_strState	./RAIDManager.h	/^	string		m_strState;$/;"	m	struct:RAIDDiskInfo	access:public
m_strSymLink	./RAIDManager.h	/^	string m_strSymLink;$/;"	m	struct:DiskProfile	access:public
m_strSysName	./RAIDManager.h	/^	string			m_strSysName;$/;"	m	struct:RAIDInfo	access:public
m_strSysName	./RAIDManager.h	/^	string m_strSysName;$/;"	m	struct:DiskProfile	access:public
m_strSysName	./RAIDManager.h	/^	string m_strSysName;$/;"	m	struct:MDProfile	access:public
m_strUUID	./FilesystemManager.h	/^	string m_strUUID;$/;"	m	class:FilesystemManager	access:private
m_strVendor	./RAIDManager.h	/^	string m_strVendor;$/;"	m	struct:DiskProfile	access:public
m_ullSMARTBadSectors	./RAIDManager.h	/^	uint64_t m_ullSMARTBadSectors;$/;"	m	struct:DiskProfile	access:public
m_ullSMARTTemp	./RAIDManager.h	/^	uint64_t m_ullSMARTTemp;$/;"	m	struct:DiskProfile	access:public
m_ullTotalCapacity	./RAIDManager.h	/^	int64_t			m_ullTotalCapacity;$/;"	m	struct:RAIDInfo	access:public
m_ullUsedSize	./RAIDManager.h	/^	int64_t			m_ullUsedSize;$/;"	m	struct:RAIDInfo	access:public
m_uuid	./RAIDManager.h	/^	int m_uuid[4];$/;"	m	struct:MDProfile	access:public
m_vDiskList	./RAIDManager.h	/^	vector<RAIDDiskInfo>	m_vDiskList;$/;"	m	struct:RAIDInfo	access:public
m_vMembers	./RAIDManager.h	/^	vector<string> m_vMembers;$/;"	m	struct:MDProfile	access:public
magic	./libmdadm/bitmap.h	/^	__u32 magic;        \/*  0  BITMAP_MAGIC *\/$/;"	m	struct:bitmap_super_s	access:public
magic	./libmdadm/part.h	/^	__u16 magic;$/;"	m	struct:MBR	access:public
magic	./libmdadm/part.h	/^	__u64 magic;$/;"	m	struct:GPT	access:public
magic	./libmke2fs/ext2fs.h	/^	errcode_t			magic;$/;"	m	struct:struct_ext2_filsys	access:public
magic	./libmke2fs/ext2fsP.h	/^	int			magic;$/;"	m	struct:ext2_struct_dblist	access:public
magic	./libmke2fs/ext2fsP.h	/^	int			magic;$/;"	m	struct:ext2_struct_u32_iterate	access:public
magic	./libmke2fs/ext2fsP.h	/^	int	magic;$/;"	m	struct:ext2_struct_u32_list	access:public
main	./build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f	signature:(int argc, char* argv[])
main	./libe2fsck/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f	signature:(int argc, char* argv[])
main	./libmdadm/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f	signature:(int argc, char* argv[])
main	./unitest/FilesystemManager_test.cpp	/^int main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
main	./unitest/RAIDManager_test.cpp	/^int main(int argc, char* argv[])$/;"	f	signature:(int argc, char* argv[])
major	./libmdadm/md_p.h	/^	__u32 major;		\/* 1 Device major number		      *\/$/;"	m	struct:mdp_device_descriptor_s	access:public
major	./libmdadm/md_u.h	/^	int major;$/;"	m	struct:mdu_disk_info_s	access:public
major	./libmdadm/md_u.h	/^	int major;$/;"	m	struct:mdu_start_info_s	access:public
major	./libmdadm/md_u.h	/^	int major;$/;"	m	struct:mdu_version_s	access:public
major	./libmdadm/mdadm.h	1444;"	d
major	./libmdadm/mdadm.h	1447;"	d
major_ver	./libmdadm/platform-intel.h	/^	__u16 major_ver; \/* Example: 8 as in 8.6.0.1020 *\/$/;"	m	struct:imsm_orom	access:public
major_version	./libmdadm/md_p.h	/^	__u32 major_version;	\/*  1 major version to which the set conforms *\/$/;"	m	struct:mdp_superblock_s	access:public
major_version	./libmdadm/md_u.h	/^	int major_version;$/;"	m	struct:mdu_array_info_s	access:public
make_backup	./libmdadm/mdadm.h	/^extern char *make_backup(char *name);$/;"	p	signature:(char *name)
makedev	./libmdadm/mdadm.h	1445;"	d
makedev	./libmdadm/mdadm.h	1448;"	d
manage_reshape	./libmdadm/mdadm.h	/^	int (*manage_reshape)( \/* optional *\/$/;"	m	struct:superswitch	access:public
map	./libmdadm/bitmap.h	/^	char *map;$/;"	m	struct:bitmap_page	access:public
map_add	./libmdadm/mdadm.h	/^extern void map_add(struct map_ent **melp,$/;"	p	signature:(struct map_ent **melp, char *devnm, char *metadata, int uuid[4], char *path)
map_by_devnm	./libmdadm/mdadm.h	/^extern struct map_ent *map_by_devnm(struct map_ent **map, char *devnm);$/;"	p	signature:(struct map_ent **map, char *devnm)
map_by_devnm	./libmdadm/mdadm.h	/^static inline struct map_ent *map_by_devnm(struct map_ent **map, char *name)$/;"	f	signature:(struct map_ent **map, char *name)
map_by_name	./libmdadm/mdadm.h	/^extern struct map_ent *map_by_name(struct map_ent **map, char *name);$/;"	p	signature:(struct map_ent **map, char *name)
map_by_uuid	./libmdadm/mdadm.h	/^extern struct map_ent *map_by_uuid(struct map_ent **map, int uuid[4]);$/;"	p	signature:(struct map_ent **map, int uuid[4])
map_delete	./libmdadm/mdadm.h	/^extern void map_delete(struct map_ent **mapp, char *devnm);$/;"	p	signature:(struct map_ent **mapp, char *devnm)
map_dev	./libmdadm/mdadm.h	/^static inline char *map_dev(int major, int minor, int create)$/;"	f	signature:(int major, int minor, int create)
map_dev_preferred	./libmdadm/mdadm.h	/^extern char *map_dev_preferred(int major, int minor, int create,$/;"	p	signature:(int major, int minor, int create, char *prefer)
map_ent	./libmdadm/mdadm.h	/^struct map_ent {$/;"	s
map_ent::bad	./libmdadm/mdadm.h	/^	int	bad;$/;"	m	struct:map_ent	access:public
map_ent::devnm	./libmdadm/mdadm.h	/^	char	devnm[32];$/;"	m	struct:map_ent	access:public
map_ent::metadata	./libmdadm/mdadm.h	/^	char	metadata[20];$/;"	m	struct:map_ent	access:public
map_ent::next	./libmdadm/mdadm.h	/^	struct map_ent *next;$/;"	m	struct:map_ent	typeref:struct:map_ent::map_ent	access:public
map_ent::path	./libmdadm/mdadm.h	/^	char	*path;$/;"	m	struct:map_ent	access:public
map_ent::uuid	./libmdadm/mdadm.h	/^	int	uuid[4];$/;"	m	struct:map_ent	access:public
map_fork	./libmdadm/mdadm.h	/^extern void map_fork(void);$/;"	p	signature:(void)
map_free	./libmdadm/mdadm.h	/^extern void map_free(struct map_ent *map);$/;"	p	signature:(struct map_ent *map)
map_free	./libmdadm/mdadm.h	/^static inline void map_free(struct map_ent *map)$/;"	f	signature:(struct map_ent *map)
map_lock	./libmdadm/mdadm.h	/^extern int map_lock(struct map_ent **melp);$/;"	p	signature:(struct map_ent **melp)
map_name	./libmdadm/mdadm.h	/^extern int map_name(mapping_t *map, char *name);$/;"	p	signature:(mapping_t *map, char *name)
map_num	./libmdadm/mdadm.h	/^extern char *map_num(mapping_t *map, int num);$/;"	p	signature:(mapping_t *map, int num)
map_read	./libmdadm/mdadm.h	/^extern void map_read(struct map_ent **melp);$/;"	p	signature:(struct map_ent **melp)
map_remove	./libmdadm/mdadm.h	/^extern void map_remove(struct map_ent **map, char *devnm);$/;"	p	signature:(struct map_ent **map, char *devnm)
map_unlock	./libmdadm/mdadm.h	/^extern void map_unlock(struct map_ent **melp);$/;"	p	signature:(struct map_ent **melp)
map_update	./libmdadm/mdadm.h	/^extern int map_update(struct map_ent **mpp, char *devnm, char *metadata,$/;"	p	signature:(struct map_ent **mpp, char *devnm, char *metadata, int uuid[4], char *path)
map_write	./libmdadm/mdadm.h	/^extern int map_write(struct map_ent *mel);$/;"	p	signature:(struct map_ent *mel)
mapping	./libmdadm/mdadm.h	/^typedef struct mapping {$/;"	s
mapping::name	./libmdadm/mdadm.h	/^	char *name;$/;"	m	struct:mapping	access:public
mapping::num	./libmdadm/mdadm.h	/^	int num;$/;"	m	struct:mapping	access:public
mapping_t	./libmdadm/mdadm.h	/^} mapping_t;$/;"	t	typeref:struct:mapping
mark_buffer_dirty	./libe2fsck/jfs_user.h	/^void mark_buffer_dirty(struct buffer_head *bh);$/;"	p	signature:(struct buffer_head *bh)
mark_buffer_uptodate	./libe2fsck/jfs_user.h	/^void mark_buffer_uptodate(struct buffer_head *bh, int val);$/;"	p	signature:(struct buffer_head *bh, int val)
match_home	./libmdadm/mdadm.h	/^	int (*match_home)(struct supertype *st, char *homehost);$/;"	m	struct:superswitch	access:public
match_metadata_desc	./libmdadm/mdadm.h	/^	struct supertype * (*match_metadata_desc)(char *arg);$/;"	m	struct:superswitch	typeref:struct:superswitch::match_metadata_desc	access:public
match_oneof	./libmdadm/mdadm.h	/^extern int match_oneof(char *devices, char *devname);$/;"	p	signature:(char *devices, char *devname)
max	./libmdadm/mdadm.h	177;"	d
max	./libmke2fs/ext2fsP.h	/^	__u64		max;$/;"	m	struct:ext2fs_numeric_progress_struct	access:public
max_count	./libe2fsck/problemP.h	/^	int		max_count;$/;"	m	struct:e2fsck_problem	access:public
max_depth	./libmke2fs/ext2fs.h	/^	int		max_depth;$/;"	m	struct:ext2_extent_info	access:public
max_devs	./libmdadm/mdadm.h	/^	int max_devs;$/;"	m	struct:supertype	access:public
max_entries	./libmke2fs/ext2fs.h	/^	int		max_entries;$/;"	m	struct:ext2_extent_info	access:public
max_fault	./libmdadm/md_u.h	/^	int			max_fault;	\/* unused for now *\/$/;"	m	struct:mdu_param_s	access:public
max_hash	./libe2fsck/e2fsck.h	/^	ext2_dirhash_t	max_hash;$/;"	m	struct:dx_dirblock_info	access:public
max_lblk	./libmke2fs/ext2fs.h	/^	blk64_t		max_lblk;$/;"	m	struct:ext2_extent_info	access:public
max_len	./libmke2fs/ext2fs.h	/^	__u32		max_len;$/;"	m	struct:ext2_extent_info	access:public
max_pblk	./libmke2fs/ext2fs.h	/^	blk64_t		max_pblk;$/;"	m	struct:ext2_extent_info	access:public
max_uninit_len	./libmke2fs/ext2fs.h	/^	__u32		max_uninit_len;$/;"	m	struct:ext2_extent_info	access:public
md_event	./libmdadm/md_p.h	/^static inline __u64 md_event(mdp_super_t *sb) {$/;"	f	signature:(mdp_super_t *sb)
md_get_version	./libmdadm/mdadm.h	/^extern int md_get_version(int fd);$/;"	p	signature:(int fd)
md_magic	./libmdadm/md_p.h	/^	__u32 md_magic;		\/*  0 MD identifier			      *\/$/;"	m	struct:mdp_superblock_s	access:public
md_minor	./libmdadm/md_p.h	/^	__u32 md_minor;		\/* 11 preferred MD minor device number	      *\/$/;"	m	struct:mdp_superblock_s	access:public
md_minor	./libmdadm/md_u.h	/^	int md_minor;$/;"	m	struct:mdu_array_info_s	access:public
mdadm_version	./libmdadm/mdadm.h	/^extern int mdadm_version(char *version);$/;"	p	signature:(char *version)
mddev	./libmdadm/bitmap.h	/^	mddev_t *mddev; \/* the md device that the bitmap is for *\/$/;"	m	struct:bitmap	access:public
mddev_busy	./libmdadm/mdadm.h	/^extern int mddev_busy(char *devnm);$/;"	p	signature:(char *devnm)
mddev_dev	./libmdadm/mdadm.h	/^struct mddev_dev {$/;"	s
mddev_dev::data_offset	./libmdadm/mdadm.h	/^	long long data_offset;$/;"	m	struct:mddev_dev	access:public
mddev_dev::devname	./libmdadm/mdadm.h	/^	char *devname;$/;"	m	struct:mddev_dev	access:public
mddev_dev::disposition	./libmdadm/mdadm.h	/^	int disposition;	\/* 'a' for add, 'r' for remove, 'f' for fail,$/;"	m	struct:mddev_dev	access:public
mddev_dev::next	./libmdadm/mdadm.h	/^	struct mddev_dev *next;$/;"	m	struct:mddev_dev	typeref:struct:mddev_dev::mddev_dev	access:public
mddev_dev::used	./libmdadm/mdadm.h	/^	int used;		\/* set when used *\/$/;"	m	struct:mddev_dev	access:public
mddev_dev::writemostly	./libmdadm/mdadm.h	/^	char writemostly;	\/* 1 for 'set writemostly', 2 for 'clear writemostly' *\/$/;"	m	struct:mddev_dev	access:public
mddev_ident	./libmdadm/mdadm.h	/^struct mddev_ident {$/;"	s
mddev_ident::__anon7::assembled	./libmdadm/mdadm.h	/^		int assembled;	\/* set when assembly succeeds *\/$/;"	m	union:mddev_ident::__anon7	access:public
mddev_ident::autof	./libmdadm/mdadm.h	/^	int	autof;		\/* 1 for normal, 2 for partitioned *\/$/;"	m	struct:mddev_ident	access:public
mddev_ident::bitmap_fd	./libmdadm/mdadm.h	/^	int	bitmap_fd;$/;"	m	struct:mddev_ident	access:public
mddev_ident::bitmap_file	./libmdadm/mdadm.h	/^	char	*bitmap_file;$/;"	m	struct:mddev_ident	access:public
mddev_ident::container	./libmdadm/mdadm.h	/^	char	*container;	\/* \/dev\/whatever name of container, or$/;"	m	struct:mddev_ident	access:public
mddev_ident::devices	./libmdadm/mdadm.h	/^	char	*devices;	\/* comma separated list of device$/;"	m	struct:mddev_ident	access:public
mddev_ident::devname	./libmdadm/mdadm.h	/^	char	*devname;$/;"	m	struct:mddev_ident	access:public
mddev_ident::level	./libmdadm/mdadm.h	/^	int	level;$/;"	m	struct:mddev_ident	access:public
mddev_ident::member	./libmdadm/mdadm.h	/^	char	*member;	\/* subarray within a container *\/$/;"	m	struct:mddev_ident	access:public
mddev_ident::name	./libmdadm/mdadm.h	/^	char	name[33];$/;"	m	struct:mddev_ident	access:public
mddev_ident::next	./libmdadm/mdadm.h	/^	struct mddev_ident *next;$/;"	m	struct:mddev_ident	typeref:struct:mddev_ident::mddev_ident	access:public
mddev_ident::raid_disks	./libmdadm/mdadm.h	/^	int raid_disks;$/;"	m	struct:mddev_ident	access:public
mddev_ident::spare_disks	./libmdadm/mdadm.h	/^	int spare_disks;$/;"	m	struct:mddev_ident	access:public
mddev_ident::spare_group	./libmdadm/mdadm.h	/^	char	*spare_group;$/;"	m	struct:mddev_ident	access:public
mddev_ident::st	./libmdadm/mdadm.h	/^	struct supertype *st;$/;"	m	struct:mddev_ident	typeref:struct:mddev_ident::supertype	access:public
mddev_ident::super_minor	./libmdadm/mdadm.h	/^	int super_minor;$/;"	m	struct:mddev_ident	access:public
mddev_ident::uuid	./libmdadm/mdadm.h	/^	int	uuid[4];$/;"	m	struct:mddev_ident	access:public
mddev_ident::uuid_set	./libmdadm/mdadm.h	/^	int	uuid_set;$/;"	m	struct:mddev_ident	access:public
mdinfo	./libmdadm/mdadm.h	/^struct mdinfo {$/;"	s
mdinfo::__anon6::recovery_start	./libmdadm/mdadm.h	/^		unsigned long long recovery_start; \/* per-device rebuild position *\/$/;"	m	union:mdinfo::__anon6	access:public
mdinfo::__anon6::resync_start	./libmdadm/mdadm.h	/^		unsigned long long resync_start; \/* per-array resync position *\/$/;"	m	union:mdinfo::__anon6	access:public
mdinfo::array	./libmdadm/mdadm.h	/^	mdu_array_info_t	array;$/;"	m	struct:mdinfo	access:public
mdinfo::bitmap_offset	./libmdadm/mdadm.h	/^	long			bitmap_offset;	\/* 0 == none, 1 == a file *\/$/;"	m	struct:mdinfo	access:public
mdinfo::cache_size	./libmdadm/mdadm.h	/^	unsigned long		cache_size; \/* size of raid456 stripe cache*\/$/;"	m	struct:mdinfo	access:public
mdinfo::component_size	./libmdadm/mdadm.h	/^	unsigned long long	component_size; \/* same as array.size, except in$/;"	m	struct:mdinfo	access:public
mdinfo::container_enough	./libmdadm/mdadm.h	/^	int container_enough; \/* flag external handlers can set to$/;"	m	struct:mdinfo	access:public
mdinfo::container_member	./libmdadm/mdadm.h	/^	int container_member; \/* for assembling external-metatdata arrays$/;"	m	struct:mdinfo	access:public
mdinfo::curr_state	./libmdadm/mdadm.h	/^	int prev_state, curr_state, next_state;$/;"	m	struct:mdinfo	access:public
mdinfo::custom_array_size	./libmdadm/mdadm.h	/^	unsigned long long	custom_array_size; \/* size for non-default sized$/;"	m	struct:mdinfo	access:public
mdinfo::data_offset	./libmdadm/mdadm.h	/^	unsigned long long	data_offset;$/;"	m	struct:mdinfo	access:public
mdinfo::delta_disks	./libmdadm/mdadm.h	/^	int			new_level, delta_disks, new_layout, new_chunk;$/;"	m	struct:mdinfo	access:public
mdinfo::devs	./libmdadm/mdadm.h	/^	struct mdinfo *devs;$/;"	m	struct:mdinfo	typeref:struct:mdinfo::mdinfo	access:public
mdinfo::disk	./libmdadm/mdadm.h	/^	mdu_disk_info_t		disk;$/;"	m	struct:mdinfo	access:public
mdinfo::errors	./libmdadm/mdadm.h	/^	int			errors;$/;"	m	struct:mdinfo	access:public
mdinfo::events	./libmdadm/mdadm.h	/^	__u64			events;$/;"	m	struct:mdinfo	access:public
mdinfo::mismatch_cnt	./libmdadm/mdadm.h	/^	int			mismatch_cnt;$/;"	m	struct:mdinfo	access:public
mdinfo::name	./libmdadm/mdadm.h	/^	char			name[33];$/;"	m	struct:mdinfo	access:public
mdinfo::new_chunk	./libmdadm/mdadm.h	/^	int			new_level, delta_disks, new_layout, new_chunk;$/;"	m	struct:mdinfo	access:public
mdinfo::new_data_offset	./libmdadm/mdadm.h	/^	unsigned long long	new_data_offset;$/;"	m	struct:mdinfo	access:public
mdinfo::new_layout	./libmdadm/mdadm.h	/^	int			new_level, delta_disks, new_layout, new_chunk;$/;"	m	struct:mdinfo	access:public
mdinfo::new_level	./libmdadm/mdadm.h	/^	int			new_level, delta_disks, new_layout, new_chunk;$/;"	m	struct:mdinfo	access:public
mdinfo::next	./libmdadm/mdadm.h	/^	struct mdinfo *next;$/;"	m	struct:mdinfo	typeref:struct:mdinfo::mdinfo	access:public
mdinfo::next_state	./libmdadm/mdadm.h	/^	int prev_state, curr_state, next_state;$/;"	m	struct:mdinfo	access:public
mdinfo::prev_state	./libmdadm/mdadm.h	/^	int prev_state, curr_state, next_state;$/;"	m	struct:mdinfo	access:public
mdinfo::recovery_blocked	./libmdadm/mdadm.h	/^	int			recovery_blocked; \/* for external metadata it$/;"	m	struct:mdinfo	access:public
mdinfo::recovery_fd	./libmdadm/mdadm.h	/^	int recovery_fd;$/;"	m	struct:mdinfo	access:public
mdinfo::reshape_active	./libmdadm/mdadm.h	/^	int			reshape_active;$/;"	m	struct:mdinfo	access:public
mdinfo::reshape_progress	./libmdadm/mdadm.h	/^	unsigned long long	reshape_progress;$/;"	m	struct:mdinfo	access:public
mdinfo::safe_mode_delay	./libmdadm/mdadm.h	/^	unsigned long		safe_mode_delay; \/* ms delay to mark clean *\/$/;"	m	struct:mdinfo	access:public
mdinfo::space_after	./libmdadm/mdadm.h	/^	unsigned long long	space_before, space_after;$/;"	m	struct:mdinfo	access:public
mdinfo::space_before	./libmdadm/mdadm.h	/^	unsigned long long	space_before, space_after;$/;"	m	struct:mdinfo	access:public
mdinfo::state_fd	./libmdadm/mdadm.h	/^	int state_fd;$/;"	m	struct:mdinfo	access:public
mdinfo::sys_name	./libmdadm/mdadm.h	/^	char		sys_name[20];$/;"	m	struct:mdinfo	access:public
mdinfo::text_version	./libmdadm/mdadm.h	/^	char			text_version[50];$/;"	m	struct:mdinfo	access:public
mdinfo::uuid	./libmdadm/mdadm.h	/^	int			uuid[4];$/;"	m	struct:mdinfo	access:public
mdmon_pid	./libmdadm/mdadm.h	/^extern int mdmon_pid(char *devnm);$/;"	p	signature:(char *devnm)
mdmon_running	./libmdadm/mdadm.h	/^extern int mdmon_running(char *devnm);$/;"	p	signature:(char *devnm)
mdp_device_descriptor_s	./libmdadm/md_p.h	/^typedef struct mdp_device_descriptor_s {$/;"	s
mdp_device_descriptor_s::major	./libmdadm/md_p.h	/^	__u32 major;		\/* 1 Device major number		      *\/$/;"	m	struct:mdp_device_descriptor_s	access:public
mdp_device_descriptor_s::minor	./libmdadm/md_p.h	/^	__u32 minor;		\/* 2 Device minor number		      *\/$/;"	m	struct:mdp_device_descriptor_s	access:public
mdp_device_descriptor_s::number	./libmdadm/md_p.h	/^	__u32 number;		\/* 0 Device number in the entire set	      *\/$/;"	m	struct:mdp_device_descriptor_s	access:public
mdp_device_descriptor_s::raid_disk	./libmdadm/md_p.h	/^	__u32 raid_disk;	\/* 3 The role of the device in the raid set   *\/$/;"	m	struct:mdp_device_descriptor_s	access:public
mdp_device_descriptor_s::reserved	./libmdadm/md_p.h	/^	__u32 reserved[MD_SB_DESCRIPTOR_WORDS - 5];$/;"	m	struct:mdp_device_descriptor_s	access:public
mdp_device_descriptor_s::state	./libmdadm/md_p.h	/^	__u32 state;		\/* 4 Operational state			      *\/$/;"	m	struct:mdp_device_descriptor_s	access:public
mdp_disk_t	./libmdadm/md_p.h	/^} mdp_disk_t;$/;"	t	typeref:struct:mdp_device_descriptor_s
mdp_super_t	./libmdadm/md_p.h	/^} mdp_super_t;$/;"	t	typeref:struct:mdp_superblock_s
mdp_superblock_s	./libmdadm/md_p.h	/^typedef struct mdp_superblock_s {$/;"	s
mdp_superblock_s::active_disks	./libmdadm/md_p.h	/^	__u32 active_disks;	\/*  2 Number of currently active disks	      *\/$/;"	m	struct:mdp_superblock_s	access:public
mdp_superblock_s::chunk_size	./libmdadm/md_p.h	/^	__u32 chunk_size;	\/*  1 chunk size in bytes		      *\/$/;"	m	struct:mdp_superblock_s	access:public
mdp_superblock_s::cp_events_hi	./libmdadm/md_p.h	/^	__u32 cp_events_hi;	\/*  9 high-order of checkpoint update count   *\/$/;"	m	struct:mdp_superblock_s	access:public
mdp_superblock_s::cp_events_hi	./libmdadm/md_p.h	/^	__u32 cp_events_hi;	\/* 10 high-order of checkpoint update count   *\/$/;"	m	struct:mdp_superblock_s	access:public
mdp_superblock_s::cp_events_lo	./libmdadm/md_p.h	/^	__u32 cp_events_lo;	\/*  9 low-order of checkpoint update count    *\/$/;"	m	struct:mdp_superblock_s	access:public
mdp_superblock_s::cp_events_lo	./libmdadm/md_p.h	/^	__u32 cp_events_lo;	\/* 10 low-order of checkpoint update count    *\/$/;"	m	struct:mdp_superblock_s	access:public
mdp_superblock_s::ctime	./libmdadm/md_p.h	/^	__u32 ctime;		\/*  6 Creation time			      *\/$/;"	m	struct:mdp_superblock_s	access:public
mdp_superblock_s::delta_disks	./libmdadm/md_p.h	/^	__u32 delta_disks;	\/* 15 change in number of raid_disks	      *\/$/;"	m	struct:mdp_superblock_s	access:public
mdp_superblock_s::disks	./libmdadm/md_p.h	/^	mdp_disk_t disks[MD_SB_DISKS];$/;"	m	struct:mdp_superblock_s	access:public
mdp_superblock_s::events_hi	./libmdadm/md_p.h	/^	__u32 events_hi;	\/*  7 high-order of superblock update count   *\/$/;"	m	struct:mdp_superblock_s	access:public
mdp_superblock_s::events_hi	./libmdadm/md_p.h	/^	__u32 events_hi;	\/*  8 high-order of superblock update count   *\/$/;"	m	struct:mdp_superblock_s	access:public
mdp_superblock_s::events_lo	./libmdadm/md_p.h	/^	__u32 events_lo;	\/*  7 low-order of superblock update count    *\/$/;"	m	struct:mdp_superblock_s	access:public
mdp_superblock_s::events_lo	./libmdadm/md_p.h	/^	__u32 events_lo;	\/*  8 low-order of superblock update count    *\/$/;"	m	struct:mdp_superblock_s	access:public
mdp_superblock_s::failed_disks	./libmdadm/md_p.h	/^	__u32 failed_disks;	\/*  4 Number of failed disks		      *\/$/;"	m	struct:mdp_superblock_s	access:public
mdp_superblock_s::gstate_creserved	./libmdadm/md_p.h	/^	__u32 gstate_creserved[MD_SB_GENERIC_CONSTANT_WORDS - 16];$/;"	m	struct:mdp_superblock_s	access:public
mdp_superblock_s::gstate_sreserved	./libmdadm/md_p.h	/^	__u32 gstate_sreserved[MD_SB_GENERIC_STATE_WORDS - 18];$/;"	m	struct:mdp_superblock_s	access:public
mdp_superblock_s::gvalid_words	./libmdadm/md_p.h	/^	__u32 gvalid_words;	\/*  4 Number of used words in this section    *\/$/;"	m	struct:mdp_superblock_s	access:public
mdp_superblock_s::layout	./libmdadm/md_p.h	/^	__u32 layout;		\/*  0 the array's physical layout	      *\/$/;"	m	struct:mdp_superblock_s	access:public
mdp_superblock_s::level	./libmdadm/md_p.h	/^	__u32 level;		\/*  7 Raid personality			      *\/$/;"	m	struct:mdp_superblock_s	access:public
mdp_superblock_s::major_version	./libmdadm/md_p.h	/^	__u32 major_version;	\/*  1 major version to which the set conforms *\/$/;"	m	struct:mdp_superblock_s	access:public
mdp_superblock_s::md_magic	./libmdadm/md_p.h	/^	__u32 md_magic;		\/*  0 MD identifier			      *\/$/;"	m	struct:mdp_superblock_s	access:public
mdp_superblock_s::md_minor	./libmdadm/md_p.h	/^	__u32 md_minor;		\/* 11 preferred MD minor device number	      *\/$/;"	m	struct:mdp_superblock_s	access:public
mdp_superblock_s::minor_version	./libmdadm/md_p.h	/^	__u32 minor_version;	\/*  2 minor version ...			      *\/$/;"	m	struct:mdp_superblock_s	access:public
mdp_superblock_s::new_chunk	./libmdadm/md_p.h	/^	__u32 new_chunk;	\/* 17 new chunk size (bytes)		      *\/$/;"	m	struct:mdp_superblock_s	access:public
mdp_superblock_s::new_layout	./libmdadm/md_p.h	/^	__u32 new_layout;	\/* 16 new layout			      *\/$/;"	m	struct:mdp_superblock_s	access:public
mdp_superblock_s::new_level	./libmdadm/md_p.h	/^	__u32 new_level;	\/* 14 new level we are reshaping to	      *\/$/;"	m	struct:mdp_superblock_s	access:public
mdp_superblock_s::not_persistent	./libmdadm/md_p.h	/^	__u32 not_persistent;	\/* 12 does it have a persistent superblock    *\/$/;"	m	struct:mdp_superblock_s	access:public
mdp_superblock_s::nr_disks	./libmdadm/md_p.h	/^	__u32 nr_disks;		\/*  9 total disks in the raid set	      *\/$/;"	m	struct:mdp_superblock_s	access:public
mdp_superblock_s::patch_version	./libmdadm/md_p.h	/^	__u32 patch_version;	\/*  3 patchlevel version ...		      *\/$/;"	m	struct:mdp_superblock_s	access:public
mdp_superblock_s::pstate_reserved	./libmdadm/md_p.h	/^	__u32 pstate_reserved[MD_SB_PERSONALITY_WORDS - 4];$/;"	m	struct:mdp_superblock_s	access:public
mdp_superblock_s::raid_disks	./libmdadm/md_p.h	/^	__u32 raid_disks;	\/* 10 disks in a fully functional raid set    *\/$/;"	m	struct:mdp_superblock_s	access:public
mdp_superblock_s::recovery_cp	./libmdadm/md_p.h	/^	__u32 recovery_cp;	\/* 11 recovery checkpoint sector count	      *\/$/;"	m	struct:mdp_superblock_s	access:public
mdp_superblock_s::reserved	./libmdadm/md_p.h	/^	__u32 reserved[MD_SB_RESERVED_WORDS];$/;"	m	struct:mdp_superblock_s	access:public
mdp_superblock_s::reshape_position	./libmdadm/md_p.h	/^	__u64 reshape_position;	\/* 12,13 next address in array-space for reshape *\/$/;"	m	struct:mdp_superblock_s	access:public
mdp_superblock_s::root_block	./libmdadm/md_p.h	/^	__u32 root_block;	\/*  3 LV root block *\/$/;"	m	struct:mdp_superblock_s	access:public
mdp_superblock_s::root_pv	./libmdadm/md_p.h	/^	__u32 root_pv;		\/*  2 LV root PV *\/$/;"	m	struct:mdp_superblock_s	access:public
mdp_superblock_s::sb_csum	./libmdadm/md_p.h	/^	__u32 sb_csum;		\/*  6 checksum of the whole superblock        *\/$/;"	m	struct:mdp_superblock_s	access:public
mdp_superblock_s::set_uuid0	./libmdadm/md_p.h	/^	__u32 set_uuid0;	\/*  5 Raid set identifier		      *\/$/;"	m	struct:mdp_superblock_s	access:public
mdp_superblock_s::set_uuid1	./libmdadm/md_p.h	/^	__u32 set_uuid1;	\/* 13 Raid set identifier #2		      *\/$/;"	m	struct:mdp_superblock_s	access:public
mdp_superblock_s::set_uuid2	./libmdadm/md_p.h	/^	__u32 set_uuid2;	\/* 14 Raid set identifier #3		      *\/$/;"	m	struct:mdp_superblock_s	access:public
mdp_superblock_s::set_uuid3	./libmdadm/md_p.h	/^	__u32 set_uuid3;	\/* 15 Raid set identifier #4		      *\/$/;"	m	struct:mdp_superblock_s	access:public
mdp_superblock_s::size	./libmdadm/md_p.h	/^	__u32 size;		\/*  8 Apparent size of each individual disk   *\/$/;"	m	struct:mdp_superblock_s	access:public
mdp_superblock_s::spare_disks	./libmdadm/md_p.h	/^	__u32 spare_disks;	\/*  5 Number of spare disks		      *\/$/;"	m	struct:mdp_superblock_s	access:public
mdp_superblock_s::state	./libmdadm/md_p.h	/^	__u32 state;		\/*  1 State bits (clean, ...)		      *\/$/;"	m	struct:mdp_superblock_s	access:public
mdp_superblock_s::this_disk	./libmdadm/md_p.h	/^	mdp_disk_t this_disk;$/;"	m	struct:mdp_superblock_s	access:public
mdp_superblock_s::utime	./libmdadm/md_p.h	/^	__u32 utime;		\/*  0 Superblock update time		      *\/$/;"	m	struct:mdp_superblock_s	access:public
mdp_superblock_s::working_disks	./libmdadm/md_p.h	/^	__u32 working_disks;	\/*  3 Number of working disks		      *\/$/;"	m	struct:mdp_superblock_s	access:public
mdstat_by_component	./libmdadm/mdadm.h	/^extern struct mdstat_ent *mdstat_by_component(char *name);$/;"	p	signature:(char *name)
mdstat_by_subdev	./libmdadm/mdadm.h	/^extern struct mdstat_ent *mdstat_by_subdev(char *subdev, char *container);$/;"	p	signature:(char *subdev, char *container)
mdstat_close	./libmdadm/mdadm.h	/^extern void mdstat_close(void);$/;"	p	signature:(void)
mdstat_ent	./libmdadm/mdadm.h	/^struct mdstat_ent {$/;"	s
mdstat_ent::active	./libmdadm/mdadm.h	/^	int		active;$/;"	m	struct:mdstat_ent	access:public
mdstat_ent::dev	./libmdadm/mdadm.h	/^	char		*dev;$/;"	m	struct:mdstat_ent	access:public
mdstat_ent::dev_member	./libmdadm/mdadm.h	/^	struct dev_member {$/;"	s	struct:mdstat_ent	access:public
mdstat_ent::dev_member::name	./libmdadm/mdadm.h	/^		char			*name;$/;"	m	struct:mdstat_ent::dev_member	access:public
mdstat_ent::dev_member::next	./libmdadm/mdadm.h	/^		struct dev_member	*next;$/;"	m	struct:mdstat_ent::dev_member	typeref:struct:mdstat_ent::dev_member::dev_member	access:public
mdstat_ent::devcnt	./libmdadm/mdadm.h	/^	int		devcnt;$/;"	m	struct:mdstat_ent	access:public
mdstat_ent::devnm	./libmdadm/mdadm.h	/^	char		devnm[32];$/;"	m	struct:mdstat_ent	access:public
mdstat_ent::level	./libmdadm/mdadm.h	/^	char		*level;$/;"	m	struct:mdstat_ent	access:public
mdstat_ent::members	./libmdadm/mdadm.h	/^	}		*members;$/;"	m	struct:mdstat_ent	typeref:struct:mdstat_ent::dev_member	access:public
mdstat_ent::metadata_version	./libmdadm/mdadm.h	/^	char *		metadata_version;$/;"	m	struct:mdstat_ent	access:public
mdstat_ent::next	./libmdadm/mdadm.h	/^	struct mdstat_ent *next;$/;"	m	struct:mdstat_ent	typeref:struct:mdstat_ent::mdstat_ent	access:public
mdstat_ent::pattern	./libmdadm/mdadm.h	/^	char		*pattern; \/* U or up, _ for down *\/$/;"	m	struct:mdstat_ent	access:public
mdstat_ent::percent	./libmdadm/mdadm.h	/^	int		percent; \/* -1 if no resync *\/$/;"	m	struct:mdstat_ent	access:public
mdstat_ent::raid_disks	./libmdadm/mdadm.h	/^	int		raid_disks;$/;"	m	struct:mdstat_ent	access:public
mdstat_ent::resync	./libmdadm/mdadm.h	/^	int		resync; \/* 3 if check, 2 if reshape, 1 if resync, 0 if recovery *\/$/;"	m	struct:mdstat_ent	access:public
mdstat_read	./libmdadm/mdadm.h	/^extern struct mdstat_ent *mdstat_read(int hold, int start);$/;"	p	signature:(int hold, int start)
mdstat_read	./libmdadm/mdmon.h	/^struct mdstat_ent *mdstat_read(int hold, int start);$/;"	p	signature:(int hold, int start)
mdstat_wait	./libmdadm/mdadm.h	/^extern void mdstat_wait(int seconds);$/;"	p	signature:(int seconds)
mdstat_wait_fd	./libmdadm/mdadm.h	/^extern void mdstat_wait_fd(int fd, const sigset_t *sigmask);$/;"	p	signature:(int fd, const sigset_t *sigmask)
mdu_array_info_s	./libmdadm/md_u.h	/^typedef struct mdu_array_info_s {$/;"	s
mdu_array_info_s::active_disks	./libmdadm/md_u.h	/^	int active_disks;	\/*  2 Number of currently active disks	      *\/$/;"	m	struct:mdu_array_info_s	access:public
mdu_array_info_s::chunk_size	./libmdadm/md_u.h	/^	int chunk_size;	\/*  1 chunk size in bytes		      *\/$/;"	m	struct:mdu_array_info_s	access:public
mdu_array_info_s::ctime	./libmdadm/md_u.h	/^	int ctime;$/;"	m	struct:mdu_array_info_s	access:public
mdu_array_info_s::failed_disks	./libmdadm/md_u.h	/^	int failed_disks;	\/*  4 Number of failed disks		      *\/$/;"	m	struct:mdu_array_info_s	access:public
mdu_array_info_s::layout	./libmdadm/md_u.h	/^	int layout;		\/*  0 the array's physical layout	      *\/$/;"	m	struct:mdu_array_info_s	access:public
mdu_array_info_s::level	./libmdadm/md_u.h	/^	int level;$/;"	m	struct:mdu_array_info_s	access:public
mdu_array_info_s::major_version	./libmdadm/md_u.h	/^	int major_version;$/;"	m	struct:mdu_array_info_s	access:public
mdu_array_info_s::md_minor	./libmdadm/md_u.h	/^	int md_minor;$/;"	m	struct:mdu_array_info_s	access:public
mdu_array_info_s::minor_version	./libmdadm/md_u.h	/^	int minor_version;$/;"	m	struct:mdu_array_info_s	access:public
mdu_array_info_s::not_persistent	./libmdadm/md_u.h	/^	int not_persistent;$/;"	m	struct:mdu_array_info_s	access:public
mdu_array_info_s::nr_disks	./libmdadm/md_u.h	/^	int nr_disks;$/;"	m	struct:mdu_array_info_s	access:public
mdu_array_info_s::patch_version	./libmdadm/md_u.h	/^	int patch_version;$/;"	m	struct:mdu_array_info_s	access:public
mdu_array_info_s::raid_disks	./libmdadm/md_u.h	/^	int raid_disks;$/;"	m	struct:mdu_array_info_s	access:public
mdu_array_info_s::size	./libmdadm/md_u.h	/^	int size;$/;"	m	struct:mdu_array_info_s	access:public
mdu_array_info_s::spare_disks	./libmdadm/md_u.h	/^	int spare_disks;	\/*  5 Number of spare disks		      *\/$/;"	m	struct:mdu_array_info_s	access:public
mdu_array_info_s::state	./libmdadm/md_u.h	/^	int state;		\/*  1 State bits (clean, ...)		      *\/$/;"	m	struct:mdu_array_info_s	access:public
mdu_array_info_s::utime	./libmdadm/md_u.h	/^	int utime;		\/*  0 Superblock update time		      *\/$/;"	m	struct:mdu_array_info_s	access:public
mdu_array_info_s::working_disks	./libmdadm/md_u.h	/^	int working_disks;	\/*  3 Number of working disks		      *\/$/;"	m	struct:mdu_array_info_s	access:public
mdu_array_info_t	./libmdadm/md_u.h	/^} mdu_array_info_t;$/;"	t	typeref:struct:mdu_array_info_s
mdu_bitmap_file_s	./libmdadm/md_u.h	/^typedef struct mdu_bitmap_file_s$/;"	s
mdu_bitmap_file_s::pathname	./libmdadm/md_u.h	/^	char pathname[4096];$/;"	m	struct:mdu_bitmap_file_s	access:public
mdu_bitmap_file_t	./libmdadm/md_u.h	/^} mdu_bitmap_file_t;$/;"	t	typeref:struct:mdu_bitmap_file_s
mdu_disk_info_s	./libmdadm/md_u.h	/^typedef struct mdu_disk_info_s {$/;"	s
mdu_disk_info_s::major	./libmdadm/md_u.h	/^	int major;$/;"	m	struct:mdu_disk_info_s	access:public
mdu_disk_info_s::minor	./libmdadm/md_u.h	/^	int minor;$/;"	m	struct:mdu_disk_info_s	access:public
mdu_disk_info_s::number	./libmdadm/md_u.h	/^	int number;$/;"	m	struct:mdu_disk_info_s	access:public
mdu_disk_info_s::raid_disk	./libmdadm/md_u.h	/^	int raid_disk;$/;"	m	struct:mdu_disk_info_s	access:public
mdu_disk_info_s::state	./libmdadm/md_u.h	/^	int state;$/;"	m	struct:mdu_disk_info_s	access:public
mdu_disk_info_t	./libmdadm/md_u.h	/^} mdu_disk_info_t;$/;"	t	typeref:struct:mdu_disk_info_s
mdu_param_s	./libmdadm/md_u.h	/^typedef struct mdu_param_s$/;"	s
mdu_param_s::chunk_size	./libmdadm/md_u.h	/^	int			chunk_size;	\/* in bytes *\/$/;"	m	struct:mdu_param_s	access:public
mdu_param_s::max_fault	./libmdadm/md_u.h	/^	int			max_fault;	\/* unused for now *\/$/;"	m	struct:mdu_param_s	access:public
mdu_param_s::personality	./libmdadm/md_u.h	/^	int			personality;	\/* 1,2,3,4 *\/$/;"	m	struct:mdu_param_s	access:public
mdu_param_t	./libmdadm/md_u.h	/^} mdu_param_t;$/;"	t	typeref:struct:mdu_param_s
mdu_start_info_s	./libmdadm/md_u.h	/^typedef struct mdu_start_info_s {$/;"	s
mdu_start_info_s::major	./libmdadm/md_u.h	/^	int major;$/;"	m	struct:mdu_start_info_s	access:public
mdu_start_info_s::minor	./libmdadm/md_u.h	/^	int minor;$/;"	m	struct:mdu_start_info_s	access:public
mdu_start_info_s::raid_disk	./libmdadm/md_u.h	/^	int raid_disk;$/;"	m	struct:mdu_start_info_s	access:public
mdu_start_info_s::state	./libmdadm/md_u.h	/^	int state;$/;"	m	struct:mdu_start_info_s	access:public
mdu_start_info_t	./libmdadm/md_u.h	/^} mdu_start_info_t;$/;"	t	typeref:struct:mdu_start_info_s
mdu_version_s	./libmdadm/md_u.h	/^typedef struct mdu_version_s {$/;"	s
mdu_version_s::major	./libmdadm/md_u.h	/^	int major;$/;"	m	struct:mdu_version_s	access:public
mdu_version_s::minor	./libmdadm/md_u.h	/^	int minor;$/;"	m	struct:mdu_version_s	access:public
mdu_version_s::patchlevel	./libmdadm/md_u.h	/^	int patchlevel;$/;"	m	struct:mdu_version_s	access:public
mdu_version_t	./libmdadm/md_u.h	/^} mdu_version_t;$/;"	t	typeref:struct:mdu_version_s
member	./libmdadm/mdadm.h	/^	char	*member;	\/* subarray within a container *\/$/;"	m	struct:mddev_ident	access:public
members	./libmdadm/mdadm.h	/^	}		*members;$/;"	m	struct:mdstat_ent	typeref:struct:mdstat_ent::dev_member	access:public
metadata	./libmdadm/mdadm.h	/^	char	metadata[20];$/;"	m	struct:map_ent	access:public
metadata	./libmdadm/mdadm.h	/^	const char *metadata;$/;"	m	struct:dev_policy	access:public
metadata_container_matches	./libmdadm/mdadm.h	/^extern int metadata_container_matches(char *metadata, char *devnm);$/;"	p	signature:(char *metadata, char *devnm)
metadata_fd	./libmdadm/mdmon.h	/^	int metadata_fd; \/* for monitoring rw\/ro status *\/$/;"	m	struct:active_array	access:public
metadata_subdev_matches	./libmdadm/mdadm.h	/^extern int metadata_subdev_matches(char *metadata, char *devnm);$/;"	p	signature:(char *metadata, char *devnm)
metadata_update	./libmdadm/mdadm.h	/^struct metadata_update {$/;"	s
metadata_update::buf	./libmdadm/mdadm.h	/^	char	*buf;$/;"	m	struct:metadata_update	access:public
metadata_update::len	./libmdadm/mdadm.h	/^	int	len;$/;"	m	struct:metadata_update	access:public
metadata_update::next	./libmdadm/mdadm.h	/^	struct metadata_update *next;$/;"	m	struct:metadata_update	typeref:struct:metadata_update::metadata_update	access:public
metadata_update::space	./libmdadm/mdadm.h	/^	void	*space; \/* allocated space that monitor will use *\/$/;"	m	struct:metadata_update	access:public
metadata_update::space_list	./libmdadm/mdadm.h	/^	void	**space_list; \/* list of allocated spaces that monitor can$/;"	m	struct:metadata_update	access:public
metadata_version	./libmdadm/mdadm.h	/^	char *		metadata_version;$/;"	m	struct:mdstat_ent	access:public
min	./libmdadm/mdadm.h	171;"	d
min_acceptable_spare_size	./libmdadm/mdadm.h	/^	unsigned long long (*min_acceptable_spare_size)(struct supertype *st);$/;"	m	struct:superswitch	access:public
min_hash	./libe2fsck/e2fsck.h	/^	ext2_dirhash_t	min_hash;$/;"	m	struct:dx_dirblock_info	access:public
min_offset_change	./libmdadm/mdadm.h	/^	unsigned long long min_offset_change;$/;"	m	struct:reshape	access:public
min_recovery_start	./libmdadm/mdadm.h	/^unsigned long long min_recovery_start(struct mdinfo *array);$/;"	p	signature:(struct mdinfo *array)
minor	./libmdadm/md_p.h	/^	__u32 minor;		\/* 2 Device minor number		      *\/$/;"	m	struct:mdp_device_descriptor_s	access:public
minor	./libmdadm/md_u.h	/^	int minor;$/;"	m	struct:mdu_disk_info_s	access:public
minor	./libmdadm/md_u.h	/^	int minor;$/;"	m	struct:mdu_start_info_s	access:public
minor	./libmdadm/md_u.h	/^	int minor;$/;"	m	struct:mdu_version_s	access:public
minor	./libmdadm/mdadm.h	1443;"	d
minor	./libmdadm/mdadm.h	1446;"	d
minor_ver	./libmdadm/platform-intel.h	/^	__u16 minor_ver; \/* Example: 6 as in 8.6.0.1020 *\/$/;"	m	struct:imsm_orom	access:public
minor_version	./libmdadm/md_p.h	/^	__u32 minor_version;	\/*  2 minor version ...			      *\/$/;"	m	struct:mdp_superblock_s	access:public
minor_version	./libmdadm/md_u.h	/^	int minor_version;$/;"	m	struct:mdu_array_info_s	access:public
minor_version	./libmdadm/mdadm.h	/^	int minor_version;$/;"	m	struct:supertype	access:public
mismatch_cnt	./libmdadm/mdadm.h	/^	int			mismatch_cnt;$/;"	m	struct:mdinfo	access:public
missing_pages	./libmdadm/bitmap.h	/^	unsigned long missing_pages; \/* number of pages not yet allocated *\/$/;"	m	struct:bitmap	access:public
mke2fs	./libmke2fs/mke2fs.h	/^extern int mke2fs(struct mke2fs_handle *handle);$/;"	p	signature:(struct mke2fs_handle *handle)
mke2fs_cb_func	./libmke2fs/mke2fs.h	/^typedef void (*mke2fs_cb_func)(void *pData, int stat, int current, int total);$/;"	t
mke2fs_handle	./libmke2fs/mke2fs.h	/^struct mke2fs_handle {$/;"	s
mke2fs_handle::buf	./libmke2fs/mke2fs.h	/^	char *buf;$/;"	m	struct:mke2fs_handle	access:public
mke2fs_handle::cb_func	./libmke2fs/mke2fs.h	/^	mke2fs_cb_func cb_func;$/;"	m	struct:mke2fs_handle	access:public
mke2fs_handle::cfg	./libmke2fs/mke2fs.h	/^	struct e2fs_cfg cfg;$/;"	m	struct:mke2fs_handle	typeref:struct:mke2fs_handle::e2fs_cfg	access:public
mke2fs_handle::device_name	./libmke2fs/mke2fs.h	/^	char device_name[32];$/;"	m	struct:mke2fs_handle	access:public
mke2fs_handle::pData	./libmke2fs/mke2fs.h	/^	void *pData;$/;"	m	struct:mke2fs_handle	access:public
mmp_buf	./libmke2fs/ext2fs.h	/^	void *mmp_buf;$/;"	m	struct:struct_ext2_filsys	access:public
mmp_cmp	./libmke2fs/ext2fs.h	/^	void *mmp_cmp;$/;"	m	struct:struct_ext2_filsys	access:public
mmp_fd	./libmke2fs/ext2fs.h	/^	int mmp_fd;$/;"	m	struct:struct_ext2_filsys	access:public
mmp_last_written	./libmke2fs/ext2fs.h	/^	long mmp_last_written;$/;"	m	struct:struct_ext2_filsys	access:public
mmp_update_interval	./libmke2fs/mke2fs.h	/^	__u16 mmp_update_interval;$/;"	m	struct:extended_opt	access:public
mode	./libmdadm/mdadm.h	/^	int	mode;$/;"	m	struct:createinfo	access:public
mode	./libmdadm/mdadm.h	/^enum mode {$/;"	g
mode_count	./libmdadm/mdadm.h	/^	mode_count$/;"	e	enum:mode
mount_dir	./libmke2fs/mke2fs.h	/^	char mount_dir[64];$/;"	m	struct:e2fs_cfg	access:public
mount_flags	./libe2fsck/e2fsck.h	/^	int	mount_flags;$/;"	m	struct:e2fsck_struct	access:public
move_spare	./libmdadm/mdadm.h	/^extern int move_spare(char *from_devname, char *to_devname, dev_t devid);$/;"	p	signature:(char *from_devname, char *to_devname, dev_t devid)
mtrace_print	./libe2fsck/e2fsck.h	/^extern void mtrace_print(char *mesg);$/;"	p	signature:(char *mesg)
must_be_container	./libmdadm/mdadm.h	/^extern int must_be_container(int fd);$/;"	p	signature:(int fd)
name	./libmdadm/mdadm.h	/^		char			*name;$/;"	m	struct:mdstat_ent::dev_member	access:public
name	./libmdadm/mdadm.h	/^		char *name;$/;"	m	struct:pol_rule::rule	access:public
name	./libmdadm/mdadm.h	/^	char			name[33];$/;"	m	struct:mdinfo	access:public
name	./libmdadm/mdadm.h	/^	char	name[33];$/;"	m	struct:mddev_ident	access:public
name	./libmdadm/mdadm.h	/^	char *name;	\/* None of these strings are allocated.  They are$/;"	m	struct:dev_policy	access:public
name	./libmdadm/mdadm.h	/^	char *name;$/;"	m	struct:mapping	access:public
name	./libmdadm/mdadm.h	/^	const char *name; \/* canonical metadata name *\/$/;"	m	struct:superswitch	access:public
name	./libmdadm/part.h	/^	unsigned char name[72];$/;"	m	struct:GPT_part_entry	access:public
names	./libmdadm/mdadm.h	/^	int	names;$/;"	m	struct:createinfo	access:public
new_chunk	./libmdadm/md_p.h	/^	__u32 new_chunk;	\/* 17 new chunk size (bytes)		      *\/$/;"	m	struct:mdp_superblock_s	access:public
new_chunk	./libmdadm/mdadm.h	/^	int			new_level, delta_disks, new_layout, new_chunk;$/;"	m	struct:mdinfo	access:public
new_data_offset	./libmdadm/mdadm.h	/^	unsigned long long	new_data_offset;$/;"	m	struct:mdinfo	access:public
new_layout	./libmdadm/md_p.h	/^	__u32 new_layout;	\/* 16 new layout			      *\/$/;"	m	struct:mdp_superblock_s	access:public
new_layout	./libmdadm/mdadm.h	/^	int			new_level, delta_disks, new_layout, new_chunk;$/;"	m	struct:mdinfo	access:public
new_level	./libmdadm/md_p.h	/^	__u32 new_level;	\/* 14 new level we are reshaping to	      *\/$/;"	m	struct:mdp_superblock_s	access:public
new_level	./libmdadm/mdadm.h	/^	int			new_level, delta_disks, new_layout, new_chunk;$/;"	m	struct:mdinfo	access:public
new_size	./libmdadm/mdadm.h	/^	unsigned long long new_size; \/* New size of array in sectors *\/$/;"	m	struct:reshape	access:public
next	./libe2fsck/kernel-list.h	/^	struct list_head *next, *prev;$/;"	m	struct:list_head	typeref:struct:list_head::list_head	access:public
next	./libmdadm/mdadm.h	/^		struct dev_member	*next;$/;"	m	struct:mdstat_ent::dev_member	typeref:struct:mdstat_ent::dev_member::dev_member	access:public
next	./libmdadm/mdadm.h	/^		struct rule *next;$/;"	m	struct:pol_rule::rule	typeref:struct:pol_rule::rule::rule	access:public
next	./libmdadm/mdadm.h	/^	struct dev_policy *next;$/;"	m	struct:dev_policy	typeref:struct:dev_policy::dev_policy	access:public
next	./libmdadm/mdadm.h	/^	struct domainlist *next;$/;"	m	struct:domainlist	typeref:struct:domainlist::domainlist	access:public
next	./libmdadm/mdadm.h	/^	struct map_ent *next;$/;"	m	struct:map_ent	typeref:struct:map_ent::map_ent	access:public
next	./libmdadm/mdadm.h	/^	struct mddev_dev *next;$/;"	m	struct:mddev_dev	typeref:struct:mddev_dev::mddev_dev	access:public
next	./libmdadm/mdadm.h	/^	struct mddev_ident *next;$/;"	m	struct:mddev_ident	typeref:struct:mddev_ident::mddev_ident	access:public
next	./libmdadm/mdadm.h	/^	struct mdinfo *next;$/;"	m	struct:mdinfo	typeref:struct:mdinfo::mdinfo	access:public
next	./libmdadm/mdadm.h	/^	struct mdstat_ent *next;$/;"	m	struct:mdstat_ent	typeref:struct:mdstat_ent::mdstat_ent	access:public
next	./libmdadm/mdadm.h	/^	struct metadata_update *next;$/;"	m	struct:metadata_update	typeref:struct:metadata_update::metadata_update	access:public
next	./libmdadm/mdadm.h	/^	struct pol_rule *next;$/;"	m	struct:pol_rule	typeref:struct:pol_rule::pol_rule	access:public
next	./libmdadm/mdadm_other.h	/^	struct examine_result* next;$/;"	m	struct:examine_result	typeref:struct:examine_result::examine_result	access:public
next	./libmdadm/mdmon.h	/^	struct active_array *next, *replaces;$/;"	m	struct:active_array	typeref:struct:active_array::active_array	access:public
next	./libmdadm/platform-intel.h	/^	struct sys_dev *next;$/;"	m	struct:sys_dev	typeref:struct:sys_dev::sys_dev	access:public
next_action	./libmdadm/mdmon.h	/^	enum sync_action prev_action, curr_action, next_action;$/;"	m	struct:active_array	typeref:enum:active_array::	access:public
next_state	./libmdadm/mdadm.h	/^	int prev_state, curr_state, next_state;$/;"	m	struct:mdinfo	access:public
next_state	./libmdadm/mdmon.h	/^	enum array_state prev_state, curr_state, next_state;$/;"	m	struct:active_array	typeref:enum:active_array::	access:public
noaction	./libmke2fs/mke2fs.h	/^	int noaction;$/;"	m	struct:e2fs_cfg	access:public
node_max_hash	./libe2fsck/e2fsck.h	/^	ext2_dirhash_t	node_max_hash;$/;"	m	struct:dx_dirblock_info	access:public
node_min_hash	./libe2fsck/e2fsck.h	/^	ext2_dirhash_t	node_min_hash;$/;"	m	struct:dx_dirblock_info	access:public
nodiscard	./libe2fsck/e2fsck_lib.h	/^	int nodiscard;$/;"	m	struct:e2fsck_extended_opt	access:public
not_persistent	./libmdadm/md_p.h	/^	__u32 not_persistent;	\/* 12 does it have a persistent superblock    *\/$/;"	m	struct:mdp_superblock_s	access:public
not_persistent	./libmdadm/md_u.h	/^	int not_persistent;$/;"	m	struct:mdu_array_info_s	access:public
now	./libe2fsck/e2fsck.h	/^	time_t now;$/;"	m	struct:e2fsck_struct	access:public
now	./libmke2fs/ext2fs.h	/^	time_t				now;$/;"	m	struct:struct_ext2_filsys	access:public
nr_disks	./libmdadm/md_p.h	/^	__u32 nr_disks;		\/*  9 total disks in the raid set	      *\/$/;"	m	struct:mdp_superblock_s	access:public
nr_disks	./libmdadm/md_u.h	/^	int nr_disks;$/;"	m	struct:mdu_array_info_s	access:public
num	./libe2fsck/problem.h	/^	__u64	num;$/;"	m	struct:problem_context	access:public
num	./libmdadm/mdadm.h	/^	int num;$/;"	m	struct:mapping	access:public
num	./libmke2fs/ext2fsP.h	/^	int	num;$/;"	m	struct:ext2_struct_u32_list	access:public
num_blocks	./libe2fsck/e2fsck.h	/^	blk64_t	num_blocks;	\/* Total number of blocks *\/$/;"	m	struct:e2fsck_struct	access:public
num_entries	./libmke2fs/ext2fs.h	/^	int		num_entries;$/;"	m	struct:ext2_extent_info	access:public
num_inodes	./libmke2fs/mke2fs.h	/^	unsigned long long num_inodes;$/;"	m	struct:e2fs_cfg	access:public
number	./libmdadm/md_p.h	/^	__u32 number;		\/* 0 Device number in the entire set	      *\/$/;"	m	struct:mdp_device_descriptor_s	access:public
number	./libmdadm/md_u.h	/^	int number;$/;"	m	struct:mdu_disk_info_s	access:public
numblocks	./libe2fsck/e2fsck.h	/^	int			numblocks;	\/* number of blocks *\/$/;"	m	struct:dx_dir_info	access:public
object_length	./libe2fsck/jfs_user.h	/^	int	object_length;$/;"	m	struct:__anon3	access:public
open_container	./libmdadm/mdadm.h	/^extern int open_container(int fd);$/;"	p	signature:(int fd)
open_dev	./libmdadm/mdadm.h	/^extern int open_dev(char *devnm);$/;"	p	signature:(char *devnm)
open_dev_excl	./libmdadm/mdadm.h	/^extern int open_dev_excl(char *devnm);$/;"	p	signature:(char *devnm)
open_dev_flags	./libmdadm/mdadm.h	/^extern int open_dev_flags(char *devnm, int flags);$/;"	p	signature:(char *devnm, int flags)
open_mddev	./libmdadm/mdadm.h	/^extern int open_mddev(char *dev, int report_errors);$/;"	p	signature:(char *dev, int report_errors)
open_new	./libmdadm/mdadm.h	/^	int (*open_new)(struct supertype *c, struct active_array *a,$/;"	m	struct:superswitch	access:public
open_subarray	./libmdadm/mdadm.h	/^extern int open_subarray(char *dev, char *subarray, struct supertype *st, int quiet);$/;"	p	signature:(char *dev, char *subarray, struct supertype *st, int quiet)
openfs_flags	./libe2fsck/e2fsck.h	/^	int	openfs_flags;$/;"	m	struct:e2fsck_struct	access:public
operator =	./RAIDManager.h	/^	DiskProfile& operator=(const DiskProfile& rhs)$/;"	f	struct:DiskProfile	access:public	signature:(const DiskProfile& rhs)
operator =	./RAIDManager.h	/^	MDProfile& operator=(MDProfile& rhs)$/;"	f	struct:MDProfile	access:public	signature:(MDProfile& rhs)
operator =	./RAIDManager.h	/^	RAIDDiskInfo& operator=(const RAIDDiskInfo& rhs)$/;"	f	struct:RAIDDiskInfo	access:public	signature:(const RAIDDiskInfo& rhs)
operator =	./RAIDManager.h	/^	RAIDDiskInfo& operator=(const struct array_disk_info& rhs)$/;"	f	struct:RAIDDiskInfo	access:public	signature:(const struct array_disk_info& rhs)
operator =	./RAIDManager.h	/^	RAIDInfo& operator=(const RAIDInfo& rhs)$/;"	f	struct:RAIDInfo	access:public	signature:(const RAIDInfo& rhs)
operator =	./RAIDManager.h	/^	RAIDInfo& operator=(const struct array_detail& rhs)$/;"	f	struct:RAIDInfo	access:public	signature:(const struct array_detail& rhs)
operator ==	./RAIDManager.h	/^	bool operator==(MDProfile& rhs)$/;"	f	struct:MDProfile	access:public	signature:(MDProfile& rhs)
operator ==	./RAIDManager.h	/^	bool operator==(const DiskProfile& profile) const$/;"	f	struct:RAIDDiskInfo	access:public	signature:(const DiskProfile& profile) const
operator ==	./RAIDManager.h	/^	bool operator==(const DiskProfile& rhs)$/;"	f	struct:DiskProfile	access:public	signature:(const DiskProfile& rhs)
operator ==	./RAIDManager.h	/^	bool operator==(const RAIDDiskInfo& rhs) const$/;"	f	struct:RAIDDiskInfo	access:public	signature:(const RAIDDiskInfo& rhs) const
operator ==	./RAIDManager.h	/^	bool operator==(const RAIDInfo& rhs) const$/;"	f	struct:RAIDInfo	access:public	signature:(const RAIDInfo& rhs) const
operator ==	./RAIDManager.h	/^	bool operator==(const string& rhs) const$/;"	f	struct:RAIDDiskInfo	access:public	signature:(const string& rhs) const
operator ==	./RAIDManager.h	/^	bool operator==(const string& rhs) const$/;"	f	struct:RAIDInfo	access:public	signature:(const string& rhs) const
optimize_dir	./libe2fsck/e2fsck_lib.h	/^	int optimize_dir;$/;"	m	struct:e2fsck_cfg	access:public
options	./libe2fsck/e2fsck.h	/^	int	options;$/;"	m	struct:e2fsck_struct	access:public
orig_super	./libmke2fs/ext2fs.h	/^	struct ext2_super_block *	orig_super;$/;"	m	struct:struct_ext2_filsys	typeref:struct:struct_ext2_filsys::ext2_super_block	access:public
other	./libmdadm/mdadm.h	/^	void *other; \/* Hack used to convert v0.90 to v1.0 *\/$/;"	m	struct:supertype	access:public
pData	./libe2fsck/e2fsck_lib.h	/^	void *pData;$/;"	m	struct:e2fsck_handle	access:public
pData	./libmke2fs/mke2fs.h	/^	void *pData;$/;"	m	struct:mke2fs_handle	access:public
pad	./libmdadm/bitmap.h	/^	__u8  pad[256 - 64]; \/* set to zero *\/$/;"	m	struct:bitmap_super_s	access:public
pad	./libmdadm/part.h	/^	__u8 pad[446];$/;"	m	struct:MBR	access:public
pad	./libmke2fs/ext2fs.h	/^	__u16				pad;$/;"	m	struct:struct_ext2_filsys	access:public
pad1	./libmdadm/part.h	/^	__u32 pad1;$/;"	m	struct:GPT	access:public
pad2	./libmdadm/part.h	/^	__u8 pad2[420];$/;"	m	struct:GPT	access:public
page	./libmdadm/bitmap.h	/^	struct page *page;$/;"	m	struct:page_list	typeref:struct:page_list::page	access:public
page_list	./libmdadm/bitmap.h	/^struct page_list {$/;"	s
page_list::list	./libmdadm/bitmap.h	/^	struct list_head list;$/;"	m	struct:page_list	typeref:struct:page_list::list_head	access:public
page_list::page	./libmdadm/bitmap.h	/^	struct page *page;$/;"	m	struct:page_list	typeref:struct:page_list::page	access:public
pages	./libmdadm/bitmap.h	/^	unsigned long pages; \/* total number of pages in the bitmap *\/$/;"	m	struct:bitmap	access:public
parent	./libe2fsck/e2fsck.h	/^	blk64_t		parent;$/;"	m	struct:dx_dirblock_info	access:public
parent	./libe2fsck/e2fsck.h	/^	ext2_ino_t		parent; \/* Parent according to treewalk *\/$/;"	m	struct:dir_info	access:public
parity	./libmdadm/mdadm.h	/^	int parity; \/* number of parity blocks\/devices *\/$/;"	m	struct:reshape	access:public
parse_auto	./libmdadm/mdadm.h	/^extern int parse_auto(char *str, char *msg, int config);$/;"	p	signature:(char *str, char *msg, int config)
parse_journal_opts	./libmke2fs/util.h	/^extern void parse_journal_opts(const char *opts);$/;"	p	signature:(const char *opts)
parse_layout_10	./libmdadm/mdadm.h	/^extern int parse_layout_10(char *layout);$/;"	p	signature:(char *layout)
parse_layout_faulty	./libmdadm/mdadm.h	/^extern int parse_layout_faulty(char *layout);$/;"	p	signature:(char *layout)
parse_num	./libmdadm/mdadm.h	/^extern long parse_num(char *num);$/;"	p	signature:(char *num)
parse_size	./libmdadm/mdadm.h	/^extern unsigned long long parse_size(char *size);$/;"	p	signature:(char *size)
parse_uuid	./libmdadm/mdadm.h	/^extern int parse_uuid(char *str, int uuid[4]);$/;"	p	signature:(char *str, int uuid[4])
part_cnt	./libmdadm/part.h	/^	__u32 part_cnt;$/;"	m	struct:GPT	access:public
part_crc	./libmdadm/part.h	/^	__u32 part_crc;$/;"	m	struct:GPT	access:public
part_size	./libmdadm/part.h	/^	__u32 part_size;$/;"	m	struct:GPT	access:public
part_start	./libmdadm/part.h	/^	__u64 part_start;$/;"	m	struct:GPT	access:public
part_type	./libmdadm/part.h	/^  __u8 part_type;$/;"	m	struct:MBR_part_record	access:public
partition_guid	./libmdadm/part.h	/^	unsigned char partition_guid[16];$/;"	m	struct:GPT_part_entry	access:public
parts	./libmdadm/part.h	/^	struct MBR_part_record parts[MBR_PARTITIONS];$/;"	m	struct:MBR	typeref:struct:MBR::MBR_part_record	access:public
patch_version	./libmdadm/md_p.h	/^	__u32 patch_version;	\/*  3 patchlevel version ...		      *\/$/;"	m	struct:mdp_superblock_s	access:public
patch_version	./libmdadm/md_u.h	/^	int patch_version;$/;"	m	struct:mdu_array_info_s	access:public
patchlevel	./libmdadm/md_u.h	/^	int patchlevel;$/;"	m	struct:mdu_version_s	access:public
path	./libmdadm/mdadm.h	/^	char	*path;$/;"	m	struct:map_ent	access:public
path	./libmdadm/platform-intel.h	/^	char *path;$/;"	m	struct:sys_dev	access:public
path_attached_to_hba	./libmdadm/platform-intel.h	/^int path_attached_to_hba(const char *disk_path, const char *hba_path);$/;"	p	signature:(const char *disk_path, const char *hba_path)
path_policy	./libmdadm/mdadm.h	/^extern struct dev_policy *path_policy(char *path, char *type);$/;"	p	signature:(char *path, char *type)
pathname	./libmdadm/md_u.h	/^	char pathname[4096];$/;"	m	struct:mdu_bitmap_file_s	access:public
pattern	./libmdadm/mdadm.h	/^	char		*pattern; \/* U or up, _ for down *\/$/;"	m	struct:mdstat_ent	access:public
pci_id	./libmdadm/platform-intel.h	/^	char *pci_id;$/;"	m	struct:sys_dev	access:public
percent	./libmdadm/mdadm.h	/^	int		percent; \/* -1 if no resync *\/$/;"	m	struct:mdstat_ent	access:public
personality	./libmdadm/md_u.h	/^	int			personality;	\/* 1,2,3,4 *\/$/;"	m	struct:mdu_param_s	access:public
phys	./libe2fsck/e2fsck.h	/^	blk64_t		phys;$/;"	m	struct:dx_dirblock_info	access:public
ping_manager	./libmdadm/msg.h	/^extern int ping_manager(char *devname);$/;"	p	signature:(char *devname)
ping_monitor	./libmdadm/msg.h	/^extern int ping_monitor(char *devname);$/;"	p	signature:(char *devname)
pol_add	./libmdadm/mdadm.h	/^extern void pol_add(struct dev_policy **pol, char *name, char *val, char *metadata);$/;"	p	signature:(struct dev_policy **pol, char *name, char *val, char *metadata)
pol_find	./libmdadm/mdadm.h	/^extern struct dev_policy *pol_find(struct dev_policy *pol, char *name);$/;"	p	signature:(struct dev_policy *pol, char *name)
pol_for_each	./libmdadm/mdadm.h	1006;"	d
pol_rule	./libmdadm/mdadm.h	/^struct pol_rule {$/;"	s
pol_rule::next	./libmdadm/mdadm.h	/^	struct pol_rule *next;$/;"	m	struct:pol_rule	typeref:struct:pol_rule::pol_rule	access:public
pol_rule::rule	./libmdadm/mdadm.h	/^	struct rule {$/;"	s	struct:pol_rule	access:public
pol_rule::rule	./libmdadm/mdadm.h	/^	} *rule;$/;"	m	struct:pol_rule	typeref:struct:pol_rule::rule	access:public
pol_rule::rule::dups	./libmdadm/mdadm.h	/^		char *dups; \/* duplicates of 'value' with a partNN appended *\/$/;"	m	struct:pol_rule::rule	access:public
pol_rule::rule::name	./libmdadm/mdadm.h	/^		char *name;$/;"	m	struct:pol_rule::rule	access:public
pol_rule::rule::next	./libmdadm/mdadm.h	/^		struct rule *next;$/;"	m	struct:pol_rule::rule	typeref:struct:pol_rule::rule::rule	access:public
pol_rule::rule::value	./libmdadm/mdadm.h	/^		char *value;$/;"	m	struct:pol_rule::rule	access:public
pol_rule::type	./libmdadm/mdadm.h	/^	char *type;	\/* rule_policy or rule_part *\/$/;"	m	struct:pol_rule	access:public
policy_action	./libmdadm/mdadm.h	/^enum policy_action {$/;"	g
policy_action_allows	./libmdadm/mdadm.h	/^extern int policy_action_allows(struct dev_policy *plist, const char *metadata,$/;"	p	signature:(struct dev_policy *plist, const char *metadata, enum policy_action want)
policy_add	./libmdadm/mdadm.h	/^extern void policy_add(char *type, ...);$/;"	p	signature:(char *type, ...)
policy_check_path	./libmdadm/mdadm.h	/^extern int policy_check_path(struct mdinfo *disk, struct map_ent *array);$/;"	p	signature:(struct mdinfo *disk, struct map_ent *array)
policy_free	./libmdadm/mdadm.h	/^extern void policy_free(void);$/;"	p	signature:(void)
policy_save_path	./libmdadm/mdadm.h	/^extern void policy_save_path(char *id_path, struct map_ent *array);$/;"	p	signature:(char *id_path, struct map_ent *array)
policyline	./libmdadm/mdadm.h	/^extern void policyline(char *line, char *type);$/;"	p	signature:(char *line, char *type)
pr_err	./libmdadm/mdadm.h	1400;"	d
pr_err	./libmdadm/mdadm.h	1403;"	d
pr_err	./libmdadm/mdmon.h	21;"	d
pr_err	./libmdadm/mdmon.h	22;"	d
preenhalt	./libe2fsck/e2fsck.h	/^extern void preenhalt(e2fsck_t ctx);$/;"	p	signature:(e2fsck_t ctx)
prefer	./libmdadm/mdadm.h	/^	char	*prefer;$/;"	m	struct:context	access:public
prefix_standard	./libmdadm/mdadm.h	/^enum prefix_standard {$/;"	g
prepare_update	./libmdadm/mdadm.h	/^	int (*prepare_update)(struct supertype *st,$/;"	m	struct:superswitch	access:public
prev	./libe2fsck/kernel-list.h	/^	struct list_head *next, *prev;$/;"	m	struct:list_head	typeref:struct:list_head::	access:public
prev_action	./libmdadm/mdmon.h	/^	enum sync_action prev_action, curr_action, next_action;$/;"	m	struct:active_array	typeref:enum:active_array::sync_action	access:public
prev_state	./libmdadm/mdadm.h	/^	int prev_state, curr_state, next_state;$/;"	m	struct:mdinfo	access:public
prev_state	./libmdadm/mdmon.h	/^	enum array_state prev_state, curr_state, next_state;$/;"	m	struct:active_array	typeref:enum:active_array::array_state	access:public
print_buffer_fields	./libe2fsck/kernel-jbd.h	932;"	d
print_buffer_trace	./libe2fsck/kernel-jbd.h	933;"	d
print_check_message	./libmke2fs/util.h	/^extern void print_check_message(int, unsigned int);$/;"	p	signature:(int, unsigned int)
print_e2fsck_message	./libe2fsck/problem.h	/^void print_e2fsck_message(FILE *f, e2fsck_t ctx, const char *msg,$/;"	p	signature:(FILE *f, e2fsck_t ctx, const char *msg, struct problem_context *pctx, int first, int recurse)
print_escape	./libmdadm/mdadm.h	/^extern void print_escape(char *str);$/;"	p	signature:(char *str)
print_quoted	./libmdadm/mdadm.h	/^extern void print_quoted(char *str);$/;"	p	signature:(char *str)
print_r10_layout	./libmdadm/mdadm.h	/^extern void print_r10_layout(int layout);$/;"	p	signature:(int layout)
print_resource_track	./libe2fsck/e2fsck.h	/^extern void print_resource_track(e2fsck_t ctx,$/;"	p	signature:(e2fsck_t ctx, const char *desc, struct resource_track *track, io_channel channel)
print_resource_track	./libe2fsck/e2fsck.h	525;"	d
printk	./libe2fsck/jfs_compat.h	11;"	d
priv_data	./libe2fsck/e2fsck.h	/^	void *priv_data;$/;"	m	struct:e2fsck_struct	access:public
priv_data	./libmke2fs/ext2fs.h	/^	void *				priv_data;$/;"	m	struct:struct_ext2_filsys	access:public
priv_data	./libmke2fs/ext2fsP.h	/^	void		*priv_data;$/;"	m	struct:dir_context	access:public
probe_roms	./libmdadm/probe_roms.h	/^void probe_roms(void);$/;"	p	signature:(void)
probe_roms_exit	./libmdadm/probe_roms.h	/^void probe_roms_exit(void);$/;"	p	signature:(void)
probe_roms_init	./libmdadm/probe_roms.h	/^int probe_roms_init(unsigned long align);$/;"	p	signature:(unsigned long align)
problem_context	./libe2fsck/problem.h	/^struct problem_context {$/;"	s
problem_context::blk	./libe2fsck/problem.h	/^	blk64_t	blk, blk2;$/;"	m	struct:problem_context	access:public
problem_context::blk2	./libe2fsck/problem.h	/^	blk64_t	blk, blk2;$/;"	m	struct:problem_context	access:public
problem_context::blkcount	./libe2fsck/problem.h	/^	e2_blkcnt_t	blkcount;$/;"	m	struct:problem_context	access:public
problem_context::csum1	./libe2fsck/problem.h	/^	__u32		csum1, csum2;$/;"	m	struct:problem_context	access:public
problem_context::csum2	./libe2fsck/problem.h	/^	__u32		csum1, csum2;$/;"	m	struct:problem_context	access:public
problem_context::dir	./libe2fsck/problem.h	/^	ext2_ino_t ino, ino2, dir;$/;"	m	struct:problem_context	access:public
problem_context::dirent	./libe2fsck/problem.h	/^	struct ext2_dir_entry *dirent;$/;"	m	struct:problem_context	typeref:struct:problem_context::ext2_dir_entry	access:public
problem_context::errcode	./libe2fsck/problem.h	/^	errcode_t	errcode;$/;"	m	struct:problem_context	access:public
problem_context::group	./libe2fsck/problem.h	/^	dgrp_t		group;$/;"	m	struct:problem_context	access:public
problem_context::ino	./libe2fsck/problem.h	/^	ext2_ino_t ino, ino2, dir;$/;"	m	struct:problem_context	access:public
problem_context::ino2	./libe2fsck/problem.h	/^	ext2_ino_t ino, ino2, dir;$/;"	m	struct:problem_context	access:public
problem_context::inode	./libe2fsck/problem.h	/^	struct ext2_inode *inode;$/;"	m	struct:problem_context	typeref:struct:problem_context::ext2_inode	access:public
problem_context::num	./libe2fsck/problem.h	/^	__u64	num;$/;"	m	struct:problem_context	access:public
problem_context::str	./libe2fsck/problem.h	/^	const char *str;$/;"	m	struct:problem_context	access:public
problem_t	./libe2fsck/problem.h	/^typedef __u32 problem_t;$/;"	t
proceed_question	./libmke2fs/util.h	/^extern void proceed_question(void);$/;"	p	signature:(void)
process_inode_size	./libe2fsck/e2fsck.h	/^	int process_inode_size;$/;"	m	struct:e2fsck_struct	access:public
process_update	./libmdadm/mdadm.h	/^	void (*process_update)(struct supertype *st,$/;"	m	struct:superswitch	access:public
prof_err_base	./libmke2fs/prof_err.h	49;"	d
profile	./libe2fsck/e2fsck.h	/^	profile_t	profile;$/;"	m	struct:e2fsck_struct	access:public
profile_get_boolean	./libe2fsck/profile.h	/^long profile_get_boolean$/;"	p	signature:(profile_t profile, const char *name, const char *subname, const char *subsubname, int def_val, int *ret_default)
profile_get_boolean	./libmke2fs/profile.h	/^long profile_get_boolean$/;"	p	signature:(profile_t profile, const char *name, const char *subname, const char *subsubname, int def_val, int *ret_default)
profile_get_double	./libe2fsck/profile.h	/^long profile_get_double$/;"	p	signature:(profile_t profile, const char *name, const char *subname, const char *subsubname, double def_val, double *ret_float)
profile_get_double	./libmke2fs/profile.h	/^long profile_get_double$/;"	p	signature:(profile_t profile, const char *name, const char *subname, const char *subsubname, double def_val, double *ret_float)
profile_get_integer	./libe2fsck/profile.h	/^long profile_get_integer$/;"	p	signature:(profile_t profile, const char *name, const char *subname, const char *subsubname, int def_val, int *ret_default)
profile_get_integer	./libmke2fs/profile.h	/^long profile_get_integer$/;"	p	signature:(profile_t profile, const char *name, const char *subname, const char *subsubname, int def_val, int *ret_default)
profile_get_string	./libe2fsck/profile.h	/^long profile_get_string$/;"	p	signature:(profile_t profile, const char *name, const char *subname, const char *subsubname, const char *def_val, char **ret_string)
profile_get_string	./libmke2fs/profile.h	/^long profile_get_string$/;"	p	signature:(profile_t profile, const char *name, const char *subname, const char *subsubname, const char *def_val, char **ret_string)
profile_get_uint	./libe2fsck/profile.h	/^long profile_get_uint$/;"	p	signature:(profile_t profile, const char *name, const char *subname, const char *subsubname, unsigned int def_val, unsigned int *ret_int)
profile_get_uint	./libmke2fs/profile.h	/^long profile_get_uint$/;"	p	signature:(profile_t profile, const char *name, const char *subname, const char *subsubname, unsigned int def_val, unsigned int *ret_int)
profile_init	./libe2fsck/profile.h	/^long profile_init$/;"	p	signature:(const char * *files, profile_t *ret_profile)
profile_init	./libmke2fs/profile.h	/^long profile_init$/;"	p	signature:(const char * *files, profile_t *ret_profile)
profile_iterator	./libe2fsck/profile.h	/^long profile_iterator$/;"	p	signature:(void **iter_p, char **ret_name, char **ret_value)
profile_iterator	./libmke2fs/profile.h	/^long profile_iterator$/;"	p	signature:(void **iter_p, char **ret_name, char **ret_value)
profile_iterator_create	./libe2fsck/profile.h	/^long profile_iterator_create$/;"	p	signature:(profile_t profile, const char *const *names, int flags, void **ret_iter)
profile_iterator_create	./libmke2fs/profile.h	/^long profile_iterator_create$/;"	p	signature:(profile_t profile, const char *const *names, int flags, void **ret_iter)
profile_iterator_free	./libe2fsck/profile.h	/^void profile_iterator_free$/;"	p	signature:(void **iter_p)
profile_iterator_free	./libmke2fs/profile.h	/^void profile_iterator_free$/;"	p	signature:(void **iter_p)
profile_release	./libe2fsck/profile.h	/^void profile_release$/;"	p	signature:(profile_t profile)
profile_release	./libmke2fs/profile.h	/^void profile_release$/;"	p	signature:(profile_t profile)
profile_set_default	./libe2fsck/profile.h	/^long profile_set_default$/;"	p	signature:(profile_t profile, const char *def_string)
profile_set_default	./libmke2fs/profile.h	/^long profile_set_default$/;"	p	signature:(profile_t profile, const char *def_string)
profile_set_syntax_err_cb	./libe2fsck/profile.h	/^profile_syntax_err_cb_t profile_set_syntax_err_cb(profile_syntax_err_cb_t hook);$/;"	p	signature:(profile_syntax_err_cb_t hook)
profile_set_syntax_err_cb	./libmke2fs/profile.h	/^profile_syntax_err_cb_t profile_set_syntax_err_cb(profile_syntax_err_cb_t hook);$/;"	p	signature:(profile_syntax_err_cb_t hook)
profile_syntax_err_cb_t	./libe2fsck/profile.h	/^typedef void (*profile_syntax_err_cb_t)(const char *file, long err,$/;"	t
profile_syntax_err_cb_t	./libmke2fs/profile.h	/^typedef void (*profile_syntax_err_cb_t)(const char *file, long err,$/;"	t
profile_t	./libe2fsck/profile.h	/^typedef struct _profile_t *profile_t;$/;"	t	typeref:struct:_profile_t
profile_t	./libmke2fs/profile.h	/^typedef struct _profile_t *profile_t;$/;"	t	typeref:struct:_profile_t
program_name	./libe2fsck/e2fsck.h	/^	const char *program_name;$/;"	m	struct:e2fsck_struct	access:public
progress	./libe2fsck/e2fsck.h	/^	int (*progress)(e2fsck_t ctx, int pass, unsigned long cur,$/;"	m	struct:e2fsck_struct	access:public
progress_fd	./libe2fsck/e2fsck.h	/^	int progress_fd;$/;"	m	struct:e2fsck_struct	access:public
progress_fd	./libe2fsck/e2fsck_lib.h	/^	int progress_fd;$/;"	m	struct:e2fsck_cfg	access:public
progress_last_percent	./libe2fsck/e2fsck.h	/^	int progress_last_percent;$/;"	m	struct:e2fsck_struct	access:public
progress_last_time	./libe2fsck/e2fsck.h	/^	unsigned int progress_last_time;$/;"	m	struct:e2fsck_struct	access:public
progress_pos	./libe2fsck/e2fsck.h	/^	int progress_pos;$/;"	m	struct:e2fsck_struct	access:public
prompt	./libe2fsck/problemP.h	/^	char		prompt;$/;"	m	struct:e2fsck_problem	access:public
pstate_reserved	./libmdadm/md_p.h	/^	__u32 pstate_reserved[MD_SB_PERSONALITY_WORDS - 4];$/;"	m	struct:mdp_superblock_s	access:public
ptr	./libmke2fs/ext2fsP.h	/^	int			ptr;$/;"	m	struct:ext2_struct_u32_iterate	access:public
put_md_name	./libmdadm/mdadm.h	/^extern void put_md_name(char *name);$/;"	p	signature:(char *name)
query_result	./libmdadm/mdadm_other.h	/^struct query_result {$/;"	s
query_result::bHasMDDetail	./libmdadm/mdadm_other.h	/^	int bHasMDDetail;$/;"	m	struct:query_result	access:public
query_result::bHasMDError	./libmdadm/mdadm_other.h	/^	int bHasMDError;$/;"	m	struct:query_result	access:public
query_result::bIsMD	./libmdadm/mdadm_other.h	/^	int bIsMD;$/;"	m	struct:query_result	access:public
query_result::bIsMDActive	./libmdadm/mdadm_other.h	/^	int bIsMDActive;$/;"	m	struct:query_result	access:public
query_result::iDiskNumber	./libmdadm/mdadm_other.h	/^	int iDiskNumber;$/;"	m	struct:query_result	access:public
query_result::iMDRaidDiskNum	./libmdadm/mdadm_other.h	/^	int iMDRaidDiskNum;	\/\/ Available for MD, Disk$/;"	m	struct:query_result	access:public
query_result::iMDRaidLevel	./libmdadm/mdadm_other.h	/^	int iMDRaidLevel;	\/\/ Available for MD, Disk$/;"	m	struct:query_result	access:public
query_result::iMDSpareDiskNum	./libmdadm/mdadm_other.h	/^	int iMDSpareDiskNum;	$/;"	m	struct:query_result	access:public
query_result::strDiskActivity	./libmdadm/mdadm_other.h	/^	char strDiskActivity[32];$/;"	m	struct:query_result	access:public
query_result::strDiskDevName	./libmdadm/mdadm_other.h	/^	char strDiskDevName[32];$/;"	m	struct:query_result	access:public
query_result::strMDDevName	./libmdadm/mdadm_other.h	/^	char strMDDevName[32];	\/\/ Available for MD, Disk$/;"	m	struct:query_result	access:public
query_result::strMDError	./libmdadm/mdadm_other.h	/^	char strMDError[128];$/;"	m	struct:query_result	access:public
query_result::strMDLevel	./libmdadm/mdadm_other.h	/^	char strMDLevel[16];	\/\/ Available for MD, Disk$/;"	m	struct:query_result	access:public
query_result::strMDSize	./libmdadm/mdadm_other.h	/^	char strMDSize[32];$/;"	m	struct:query_result	access:public
question	./libe2fsck/problemP.h	/^	problem_t	question;$/;"	m	struct:latch_descr	access:public
quiet	./libmke2fs/mke2fs.h	/^	int quiet;$/;"	m	struct:e2fs_cfg	access:public
r_count	./libe2fsck/kernel-jbd.h	/^	int		 r_count;	\/* Count of bytes used in the block *\/$/;"	m	struct:journal_revoke_header_s	access:public
r_header	./libe2fsck/kernel-jbd.h	/^	journal_header_t r_header;$/;"	m	struct:journal_revoke_header_s	access:public
r_opt	./libmke2fs/mke2fs.h	/^	int r_opt;$/;"	m	struct:e2fs_cfg	access:public
raid_disk	./libmdadm/md_p.h	/^	__u32 raid_disk;	\/* 3 The role of the device in the raid set   *\/$/;"	m	struct:mdp_device_descriptor_s	access:public
raid_disk	./libmdadm/md_u.h	/^	int raid_disk;$/;"	m	struct:mdu_disk_info_s	access:public
raid_disk	./libmdadm/md_u.h	/^	int raid_disk;$/;"	m	struct:mdu_start_info_s	access:public
raid_disks	./libmdadm/md_p.h	/^	__u32 raid_disks;	\/* 10 disks in a fully functional raid set    *\/$/;"	m	struct:mdp_superblock_s	access:public
raid_disks	./libmdadm/md_u.h	/^	int raid_disks;$/;"	m	struct:mdu_array_info_s	access:public
raid_disks	./libmdadm/mdadm.h	/^	int		raid_disks;$/;"	m	struct:mdstat_ent	access:public
raid_disks	./libmdadm/mdadm.h	/^	int raid_disks;$/;"	m	struct:mddev_ident	access:public
raiddisks	./libmdadm/mdadm.h	/^	int	raiddisks;$/;"	m	struct:shape	access:public
raidmgr_cb	./RAIDManager.h	/^typedef void (*raidmgr_cb)(void *, eCBReason);$/;"	t
random	./libmdadm/mdadm.h	50;"	d
random32	./libmdadm/mdadm.h	/^extern __u32 random32(void);$/;"	p	signature:(void)
read_auto	./libmdadm/mdmon.h	/^enum array_state { clear, inactive, suspended, readonly, read_auto,$/;"	e	enum:array_state
read_bad_blocks_file	./libe2fsck/e2fsck.h	/^extern void read_bad_blocks_file(e2fsck_t ctx, const char *bad_blocks_file,$/;"	p	signature:(e2fsck_t ctx, const char *bad_blocks_file, int replace_bad_blocks)
read_dev_state	./libmdadm/mdmon.h	/^int read_dev_state(int fd);$/;"	p	signature:(int fd)
read_inode	./libmke2fs/ext2fs.h	/^	errcode_t (*read_inode)(ext2_filsys fs, ext2_ino_t ino,$/;"	m	struct:struct_ext2_filsys	access:public
readonly	./libmdadm/mdadm.h	/^	int	readonly;$/;"	m	struct:context	access:public
readonly	./libmdadm/mdmon.h	/^enum array_state { clear, inactive, suspended, readonly, read_auto,$/;"	e	enum:array_state
receive_message	./libmdadm/msg.h	/^extern int receive_message(int fd, struct metadata_update *msg, int tmo);$/;"	p	signature:(int fd, struct metadata_update *msg, int tmo)
recover	./libmdadm/mdmon.h	/^enum sync_action { idle, reshape, resync, recover, check, repair, bad_action };$/;"	e	enum:sync_action
recover_backup	./libmdadm/mdadm.h	/^	int (*recover_backup)(struct supertype *st, struct mdinfo *info);$/;"	m	struct:superswitch	access:public
recovery_blocked	./libmdadm/mdadm.h	/^	int			recovery_blocked; \/* for external metadata it$/;"	m	struct:mdinfo	access:public
recovery_cp	./libmdadm/md_p.h	/^	__u32 recovery_cp;	\/* 11 recovery checkpoint sector count	      *\/$/;"	m	struct:mdp_superblock_s	access:public
recovery_fd	./libmdadm/mdadm.h	/^	int recovery_fd;$/;"	m	struct:mdinfo	access:public
recovery_start	./libmdadm/mdadm.h	/^		unsigned long long recovery_start; \/* per-device rebuild position *\/$/;"	m	union:mdinfo::__anon6	access:public
refcount	./libe2fsck/e2fsck.h	/^	ext2_refcount_t	refcount;$/;"	m	struct:e2fsck_struct	access:public
refcount	./libmke2fs/ext2fsP.h	/^	int				refcount;$/;"	m	struct:ext2_inode_cache	access:public
refcount_extra	./libe2fsck/e2fsck.h	/^	ext2_refcount_t refcount_extra;$/;"	m	struct:e2fsck_struct	access:public
region_addr_t	./libe2fsck/e2fsck.h	/^typedef __u32 region_addr_t;$/;"	t
region_allocate	./libe2fsck/e2fsck.h	/^extern int region_allocate(region_t region, region_addr_t start, int n);$/;"	p	signature:(region_t region, region_addr_t start, int n)
region_create	./libe2fsck/e2fsck.h	/^extern region_t region_create(region_addr_t min, region_addr_t max);$/;"	p	signature:(region_addr_t min, region_addr_t max)
region_free	./libe2fsck/e2fsck.h	/^extern void region_free(region_t region);$/;"	p	signature:(region_t region)
region_t	./libe2fsck/e2fsck.h	/^typedef struct region_struct *region_t;$/;"	t	typeref:struct:region_struct
remove_disk	./libmdadm/mdadm.h	/^extern int remove_disk(int mdfd, struct supertype *st,$/;"	p	signature:(int mdfd, struct supertype *st, struct mdinfo *sra, struct mdinfo *info)
remove_from_super	./libmdadm/mdadm.h	/^	int (*remove_from_super)(struct supertype *st, mdu_disk_info_t *dinfo);$/;"	m	struct:superswitch	access:public
remove_partitions	./libmdadm/mdadm.h	/^extern void remove_partitions(int fd);$/;"	p	signature:(int fd)
remove_pidfile	./libmdadm/mdmon.h	/^void remove_pidfile(char *devname);$/;"	p	signature:(char *devname)
reopen_mddev	./libmdadm/mdadm.h	/^extern void reopen_mddev(int mdfd);$/;"	p	signature:(int mdfd)
repair	./libmdadm/mdmon.h	/^enum sync_action { idle, reshape, resync, recover, check, repair, bad_action };$/;"	e	enum:sync_action
replaces	./libmdadm/mdmon.h	/^	struct active_array *next, *replaces;$/;"	m	struct:active_array	typeref:struct:active_array::	access:public
require_homehost	./libmdadm/mdadm.h	/^	int	require_homehost;$/;"	m	struct:context	access:public
reserved	./libmdadm/md_p.h	/^	__u32 reserved[MD_SB_DESCRIPTOR_WORDS - 5];$/;"	m	struct:mdp_device_descriptor_s	access:public
reserved	./libmdadm/md_p.h	/^	__u32 reserved[MD_SB_RESERVED_WORDS];$/;"	m	struct:mdp_superblock_s	access:public
reserved	./libmke2fs/ext2fs.h	/^	__u32				reserved[5];$/;"	m	struct:struct_ext2_filsys	access:public
reserved_ratio	./libmke2fs/mke2fs.h	/^	double reserved_ratio;$/;"	m	struct:e2fs_cfg	access:public
reshape	./libmdadm/mdadm.h	/^struct reshape {$/;"	s
reshape	./libmdadm/mdmon.h	/^enum sync_action { idle, reshape, resync, recover, check, repair, bad_action };$/;"	e	enum:sync_action
reshape::__anon8::data_disks	./libmdadm/mdadm.h	/^		int data_disks;$/;"	m	struct:reshape::__anon8	access:public
reshape::__anon8::layout	./libmdadm/mdadm.h	/^		int layout;$/;"	m	struct:reshape::__anon8	access:public
reshape::after	./libmdadm/mdadm.h	/^	} before, after;$/;"	m	struct:reshape	typeref:struct:reshape::__anon8	access:public
reshape::backup_blocks	./libmdadm/mdadm.h	/^	unsigned long long backup_blocks;$/;"	m	struct:reshape	access:public
reshape::before	./libmdadm/mdadm.h	/^	} before, after;$/;"	m	struct:reshape	typeref:struct:reshape::__anon8	access:public
reshape::level	./libmdadm/mdadm.h	/^	int level;$/;"	m	struct:reshape	access:public
reshape::min_offset_change	./libmdadm/mdadm.h	/^	unsigned long long min_offset_change;$/;"	m	struct:reshape	access:public
reshape::new_size	./libmdadm/mdadm.h	/^	unsigned long long new_size; \/* New size of array in sectors *\/$/;"	m	struct:reshape	access:public
reshape::parity	./libmdadm/mdadm.h	/^	int parity; \/* number of parity blocks\/devices *\/$/;"	m	struct:reshape	access:public
reshape::stripes	./libmdadm/mdadm.h	/^	unsigned long long stripes; \/* number of old stripes that comprise 'blocks'*\/$/;"	m	struct:reshape	access:public
reshape_active	./libmdadm/mdadm.h	/^	int			reshape_active;$/;"	m	struct:mdinfo	access:public
reshape_free_fdlist	./libmdadm/mdadm.h	/^extern void reshape_free_fdlist(int *fdlist,$/;"	p	signature:(int *fdlist, unsigned long long *offsets, int size)
reshape_open_backup_file	./libmdadm/mdadm.h	/^extern int reshape_open_backup_file(char *backup,$/;"	p	signature:(char *backup, int fd, char *devname, long blocks, int *fdlist, unsigned long long *offsets, char *sysfs_name, int restart)
reshape_position	./libmdadm/md_p.h	/^	__u64 reshape_position;	\/* 12,13 next address in array-space for reshape *\/$/;"	m	struct:mdp_superblock_s	access:public
reshape_prepare_fdlist	./libmdadm/mdadm.h	/^extern int reshape_prepare_fdlist(char *devname,$/;"	p	signature:(char *devname, struct mdinfo *sra, int raid_disks, int nrdisks, unsigned long blocks, char *backup_file, int *fdlist, unsigned long long *offsets)
reshape_progress	./libmdadm/mdadm.h	/^	unsigned long long	reshape_progress;$/;"	m	struct:mdinfo	access:public
reshape_super	./libmdadm/mdadm.h	/^	int (*reshape_super)(struct supertype *st,$/;"	m	struct:superswitch	access:public
resource_track	./libe2fsck/e2fsck.h	/^struct resource_track {$/;"	s
resource_track::brk_start	./libe2fsck/e2fsck.h	/^	void	*brk_start;$/;"	m	struct:resource_track	access:public
resource_track::bytes_read	./libe2fsck/e2fsck.h	/^	unsigned long long bytes_read;$/;"	m	struct:resource_track	access:public
resource_track::bytes_written	./libe2fsck/e2fsck.h	/^	unsigned long long bytes_written;$/;"	m	struct:resource_track	access:public
resource_track::system_start	./libe2fsck/e2fsck.h	/^	struct timeval system_start;$/;"	m	struct:resource_track	typeref:struct:resource_track::timeval	access:public
resource_track::time_start	./libe2fsck/e2fsck.h	/^	struct timeval time_start;$/;"	m	struct:resource_track	typeref:struct:resource_track::timeval	access:public
resource_track::user_start	./libe2fsck/e2fsck.h	/^	struct timeval user_start;$/;"	m	struct:resource_track	typeref:struct:resource_track::timeval	access:public
restore_backup	./libmdadm/mdadm.h	/^extern int restore_backup(struct supertype *st,$/;"	p	signature:(struct supertype *st, struct mdinfo *content, int working_disks, int spares, char **backup_filep, int verbose)
restore_stripes	./libmdadm/mdadm.h	/^extern int restore_stripes(int *dest, unsigned long long *offsets,$/;"	p	signature:(int *dest, unsigned long long *offsets, int raid_disks, int chunk_size, int level, int layout, int source, unsigned long long read_offset, unsigned long long start, unsigned long long length, char *src_buf)
resync	./libmdadm/mdadm.h	/^	int		resync; \/* 3 if check, 2 if reshape, 1 if resync, 0 if recovery *\/$/;"	m	struct:mdstat_ent	access:public
resync	./libmdadm/mdmon.h	/^enum sync_action { idle, reshape, resync, recover, check, repair, bad_action };$/;"	e	enum:sync_action
resync_start	./libmdadm/mdadm.h	/^		unsigned long long resync_start; \/* per-array resync position *\/$/;"	m	union:mdinfo::__anon6	access:public
resync_start_fd	./libmdadm/mdmon.h	/^	int resync_start_fd;$/;"	m	struct:active_array	access:public
retry_soon	./libmdadm/mdadm.h	/^	int retry_soon;$/;"	m	struct:supertype	access:public
revision	./libmdadm/part.h	/^	__u32 revision;$/;"	m	struct:GPT	access:public
rlc	./libmdadm/platform-intel.h	/^	__u16 rlc; \/* RAID Level Capability *\/$/;"	m	struct:imsm_orom	access:public
root_block	./libmdadm/md_p.h	/^	__u32 root_block;	\/*  3 LV root block *\/$/;"	m	struct:mdp_superblock_s	access:public
root_pv	./libmdadm/md_p.h	/^	__u32 root_pv;		\/*  2 LV root PV *\/$/;"	m	struct:mdp_superblock_s	access:public
root_repair_block	./libe2fsck/e2fsck.h	/^	blk64_t root_repair_block, lnf_repair_block;$/;"	m	struct:e2fsck_struct	access:public
rule	./libmdadm/mdadm.h	/^	struct rule {$/;"	s	struct:pol_rule	access:public
rule	./libmdadm/mdadm.h	/^	} *rule;$/;"	m	struct:pol_rule	typeref:struct:pol_rule::rule	access:public
runstop	./libmdadm/mdadm.h	/^	int	runstop;$/;"	m	struct:context	access:public
s_blocksize	./libe2fsck/kernel-jbd.h	/^	__u32	s_blocksize;		\/* journal device blocksize *\/$/;"	m	struct:journal_superblock_s	access:public
s_dynsuper	./libe2fsck/kernel-jbd.h	/^	__u32	s_dynsuper;		\/* Blocknr of dynamic superblock copy*\/$/;"	m	struct:journal_superblock_s	access:public
s_errno	./libe2fsck/kernel-jbd.h	/^	__s32	s_errno;$/;"	m	struct:journal_superblock_s	access:public
s_feature_compat	./libe2fsck/kernel-jbd.h	/^	__u32	s_feature_compat; 	\/* compatible feature set *\/$/;"	m	struct:journal_superblock_s	access:public
s_feature_incompat	./libe2fsck/kernel-jbd.h	/^	__u32	s_feature_incompat; 	\/* incompatible feature set *\/$/;"	m	struct:journal_superblock_s	access:public
s_feature_ro_compat	./libe2fsck/kernel-jbd.h	/^	__u32	s_feature_ro_compat; 	\/* readonly-compatible feature set *\/$/;"	m	struct:journal_superblock_s	access:public
s_first	./libe2fsck/kernel-jbd.h	/^	__u32	s_first;		\/* first block of log information *\/$/;"	m	struct:journal_superblock_s	access:public
s_header	./libe2fsck/kernel-jbd.h	/^	journal_header_t s_header;$/;"	m	struct:journal_superblock_s	access:public
s_max_trans_data	./libe2fsck/kernel-jbd.h	/^	__u32	s_max_trans_data;	\/* Limit of data blocks per trans. *\/$/;"	m	struct:journal_superblock_s	access:public
s_max_transaction	./libe2fsck/kernel-jbd.h	/^	__u32	s_max_transaction;	\/* Limit of journal blocks per trans.*\/$/;"	m	struct:journal_superblock_s	access:public
s_maxlen	./libe2fsck/kernel-jbd.h	/^	__u32	s_maxlen;		\/* total blocks in journal file *\/$/;"	m	struct:journal_superblock_s	access:public
s_nr_users	./libe2fsck/kernel-jbd.h	/^	__u32	s_nr_users;		\/* Nr of filesystems sharing log *\/$/;"	m	struct:journal_superblock_s	access:public
s_padding	./libe2fsck/kernel-jbd.h	/^	__u32	s_padding[44];$/;"	m	struct:journal_superblock_s	access:public
s_sequence	./libe2fsck/kernel-jbd.h	/^	__u32	s_sequence;		\/* first commit ID expected in log *\/$/;"	m	struct:journal_superblock_s	access:public
s_start	./libe2fsck/kernel-jbd.h	/^	__u32	s_start;		\/* blocknr of start of log *\/$/;"	m	struct:journal_superblock_s	access:public
s_users	./libe2fsck/kernel-jbd.h	/^	__u8	s_users[JFS_USERS_SIZE];		\/* ids of all fs'es sharing the log *\/$/;"	m	struct:journal_superblock_s	access:public
s_uuid	./libe2fsck/kernel-jbd.h	/^	__u8	s_uuid[16];		\/* 128-bit uuid for journal *\/$/;"	m	struct:journal_superblock_s	access:public
safe_mode_delay	./libmdadm/mdadm.h	/^	unsigned long		safe_mode_delay; \/* ms delay to mark clean *\/$/;"	m	struct:mdinfo	access:public
same_dev	./libmdadm/mdadm.h	/^extern int same_dev(char *one, char *two);$/;"	p	signature:(char *one, char *two)
same_uuid	./libmdadm/mdadm.h	/^extern int same_uuid(int a[4], int b[4], int swapuuid);$/;"	p	signature:(int a[4], int b[4], int swapuuid)
save_stripes	./libmdadm/mdadm.h	/^extern int save_stripes(int *source, unsigned long long *offsets,$/;"	p	signature:(int *source, unsigned long long *offsets, int raid_disks, int chunk_size, int level, int layout, int nwrites, int *dest, unsigned long long start, unsigned long long length, char *buf)
sb	./libmdadm/mdadm.h	/^	void *sb;$/;"	m	struct:supertype	access:public
sb_csum	./libmdadm/md_p.h	/^	__u32 sb_csum;		\/*  6 checksum of the whole superblock        *\/$/;"	m	struct:mdp_superblock_s	access:public
sb_page	./libmdadm/bitmap.h	/^	struct page *sb_page; \/* cached copy of the bitmap file superblock *\/$/;"	m	struct:bitmap	typeref:struct:bitmap::page	access:public
scan	./libmdadm/mdadm.h	/^	int	scan;$/;"	m	struct:context	access:public
scan_adapter_roms	./libmdadm/probe_roms.h	/^int scan_adapter_roms(scan_fn fn);$/;"	p	signature:(scan_fn fn)
scan_fn	./libmdadm/probe_roms.h	/^typedef int (*scan_fn)(const void *start, const void *end, const void *data);$/;"	t
second_code	./libe2fsck/problemP.h	/^	problem_t	second_code;$/;"	m	struct:e2fsck_problem	access:public
send_message	./libmdadm/msg.h	/^extern int send_message(int fd, struct metadata_update *msg, int tmo);$/;"	p	signature:(int fd, struct metadata_update *msg, int tmo)
set_array_info	./libmdadm/mdadm.h	/^extern int set_array_info(int mdfd, struct supertype *st, struct mdinfo *info);$/;"	p	signature:(int mdfd, struct supertype *st, struct mdinfo *info)
set_array_state	./libmdadm/mdadm.h	/^	int (*set_array_state)(struct active_array *a, int consistent);$/;"	m	struct:superswitch	access:public
set_buffer_uptodate	./libe2fsck/jfs_user.h	149;"	d
set_conffile	./libmdadm/mdadm.h	/^extern void set_conffile(char *file);$/;"	p	signature:(char *file)
set_disk	./libmdadm/mdadm.h	/^	void (*set_disk)(struct active_array *a, int n, int state);$/;"	m	struct:superswitch	access:public
set_latch_flags	./libe2fsck/problem.h	/^int set_latch_flags(int mask, int setflags, int clearflags);$/;"	p	signature:(int mask, int setflags, int clearflags)
set_up_logging	./libe2fsck/e2fsck.h	/^extern void set_up_logging(e2fsck_t ctx);$/;"	p	signature:(e2fsck_t ctx)
set_uuid0	./libmdadm/md_p.h	/^	__u32 set_uuid0;	\/*  5 Raid set identifier		      *\/$/;"	m	struct:mdp_superblock_s	access:public
set_uuid1	./libmdadm/md_p.h	/^	__u32 set_uuid1;	\/* 13 Raid set identifier #2		      *\/$/;"	m	struct:mdp_superblock_s	access:public
set_uuid2	./libmdadm/md_p.h	/^	__u32 set_uuid2;	\/* 14 Raid set identifier #3		      *\/$/;"	m	struct:mdp_superblock_s	access:public
set_uuid3	./libmdadm/md_p.h	/^	__u32 set_uuid3;	\/* 15 Raid set identifier #4		      *\/$/;"	m	struct:mdp_superblock_s	access:public
sha1_buffer	./libmdadm/sha1.h	/^extern void *sha1_buffer (const char *buffer, size_t len, void *resblock);$/;"	p	signature:(const char *buffer, size_t len, void *resblock)
sha1_ctx	./libmdadm/sha1.h	/^struct sha1_ctx$/;"	s
sha1_ctx::A	./libmdadm/sha1.h	/^  sha1_uint32 A;$/;"	m	struct:sha1_ctx	access:public
sha1_ctx::B	./libmdadm/sha1.h	/^  sha1_uint32 B;$/;"	m	struct:sha1_ctx	access:public
sha1_ctx::C	./libmdadm/sha1.h	/^  sha1_uint32 C;$/;"	m	struct:sha1_ctx	access:public
sha1_ctx::D	./libmdadm/sha1.h	/^  sha1_uint32 D;$/;"	m	struct:sha1_ctx	access:public
sha1_ctx::E	./libmdadm/sha1.h	/^  sha1_uint32 E;$/;"	m	struct:sha1_ctx	access:public
sha1_ctx::buffer	./libmdadm/sha1.h	/^  sha1_uint32 buffer[32];$/;"	m	struct:sha1_ctx	access:public
sha1_ctx::buflen	./libmdadm/sha1.h	/^  sha1_uint32 buflen;$/;"	m	struct:sha1_ctx	access:public
sha1_ctx::total	./libmdadm/sha1.h	/^  sha1_uint32 total[2];$/;"	m	struct:sha1_ctx	access:public
sha1_finish_ctx	./libmdadm/sha1.h	/^extern void *sha1_finish_ctx (struct sha1_ctx *ctx, void *resbuf);$/;"	p	signature:(struct sha1_ctx *ctx, void *resbuf)
sha1_init_ctx	./libmdadm/sha1.h	/^extern void sha1_init_ctx (struct sha1_ctx *ctx);$/;"	p	signature:(struct sha1_ctx *ctx)
sha1_process_block	./libmdadm/sha1.h	/^extern void sha1_process_block (const void *buffer, size_t len,$/;"	p	signature:(const void *buffer, size_t len, struct sha1_ctx *ctx)
sha1_process_bytes	./libmdadm/sha1.h	/^extern void sha1_process_bytes (const void *buffer, size_t len,$/;"	p	signature:(const void *buffer, size_t len, struct sha1_ctx *ctx)
sha1_read_ctx	./libmdadm/sha1.h	/^extern void *sha1_read_ctx (const struct sha1_ctx *ctx, void *resbuf);$/;"	p	signature:(const struct sha1_ctx *ctx, void *resbuf)
sha1_stream	./libmdadm/sha1.h	/^extern int sha1_stream (FILE *stream, void *resblock);$/;"	p	signature:(FILE *stream, void *resblock)
sha1_uint32	./libmdadm/sha1.h	/^     typedef unsigned long sha1_uint32;$/;"	t
sha1_uint32	./libmdadm/sha1.h	/^    typedef unsigned short sha1_uint32;$/;"	t
sha1_uint32	./libmdadm/sha1.h	/^   typedef unsigned int sha1_uint32;$/;"	t
sha1_uint32	./libmdadm/sha1.h	/^typedef u_int32_t sha1_uint32;$/;"	t
sha1_uintptr	./libmdadm/sha1.h	/^typedef uintptr_t sha1_uintptr;$/;"	t
shape	./libmdadm/mdadm.h	/^struct shape {$/;"	s
shape::assume_clean	./libmdadm/mdadm.h	/^	int	assume_clean;$/;"	m	struct:shape	access:public
shape::bitmap_chunk	./libmdadm/mdadm.h	/^	int	bitmap_chunk;$/;"	m	struct:shape	access:public
shape::bitmap_file	./libmdadm/mdadm.h	/^	char	*bitmap_file;$/;"	m	struct:shape	access:public
shape::chunk	./libmdadm/mdadm.h	/^	int	chunk;$/;"	m	struct:shape	access:public
shape::layout	./libmdadm/mdadm.h	/^	int	layout;$/;"	m	struct:shape	access:public
shape::layout_str	./libmdadm/mdadm.h	/^	char	*layout_str;$/;"	m	struct:shape	access:public
shape::level	./libmdadm/mdadm.h	/^	int	level;$/;"	m	struct:shape	access:public
shape::raiddisks	./libmdadm/mdadm.h	/^	int	raiddisks;$/;"	m	struct:shape	access:public
shape::size	./libmdadm/mdadm.h	/^	unsigned long long size;$/;"	m	struct:shape	access:public
shape::sparedisks	./libmdadm/mdadm.h	/^	int	sparedisks;$/;"	m	struct:shape	access:public
shape::write_behind	./libmdadm/mdadm.h	/^	int	write_behind;$/;"	m	struct:shape	access:public
shrink_journal_memory	./libe2fsck/kernel-jbd.h	/^extern void shrink_journal_memory(void);$/;"	p	signature:(void)
sig_handler	./unitest/RAIDManager_test.cpp	/^static void sig_handler(int sig)$/;"	f	file:	signature:(int sig)
sigcatcher_setup	./libe2fsck/e2fsck.h	/^void sigcatcher_setup(void);$/;"	p	signature:(void)
signature	./libmdadm/platform-intel.h	/^	__u8 signature[4];$/;"	m	struct:imsm_orom	access:public
size	./libmdadm/md_p.h	/^	__u32 size;		\/*  8 Apparent size of each individual disk   *\/$/;"	m	struct:mdp_superblock_s	access:public
size	./libmdadm/md_u.h	/^	int size;$/;"	m	struct:mdu_array_info_s	access:public
size	./libmdadm/mdadm.h	/^	unsigned long long size;$/;"	m	struct:shape	access:public
size	./libmke2fs/ext2fsP.h	/^	int	size;$/;"	m	struct:ext2_struct_u32_list	access:public
size	./libmke2fs/ext2fsP.h	/^	unsigned long long	size;$/;"	m	struct:ext2_struct_dblist	access:public
skip_progress	./libmke2fs/ext2fsP.h	/^	int		skip_progress;$/;"	m	struct:ext2fs_numeric_progress_struct	access:public
sock	./libmdadm/mdadm.h	/^	int sock; \/* listen to external programs *\/$/;"	m	struct:supertype	access:public
sorted	./libmke2fs/ext2fsP.h	/^	int			sorted;$/;"	m	struct:ext2_struct_dblist	access:public
space	./libmdadm/mdadm.h	/^	void	*space; \/* allocated space that monitor will use *\/$/;"	m	struct:metadata_update	access:public
space_after	./libmdadm/mdadm.h	/^	unsigned long long	space_before, space_after;$/;"	m	struct:mdinfo	access:public
space_before	./libmdadm/mdadm.h	/^	unsigned long long	space_before, space_after;$/;"	m	struct:mdinfo	access:public
space_list	./libmdadm/mdadm.h	/^	void	**space_list; \/* list of allocated spaces that monitor can$/;"	m	struct:metadata_update	access:public
spare_disks	./libmdadm/md_p.h	/^	__u32 spare_disks;	\/*  5 Number of spare disks		      *\/$/;"	m	struct:mdp_superblock_s	access:public
spare_disks	./libmdadm/md_u.h	/^	int spare_disks;	\/*  5 Number of spare disks		      *\/$/;"	m	struct:mdu_array_info_s	access:public
spare_disks	./libmdadm/mdadm.h	/^	int spare_disks;$/;"	m	struct:mddev_ident	access:public
spare_group	./libmdadm/mdadm.h	/^	char	*spare_group;$/;"	m	struct:mddev_ident	access:public
sparedisks	./libmdadm/mdadm.h	/^	int	sparedisks;$/;"	m	struct:shape	access:public
specified_superblock	./libe2fsck/e2fsck_lib.h	/^	int specified_superblock;$/;"	m	struct:e2fsck_cfg	access:public
srandom	./libmdadm/mdadm.h	51;"	d
ss	./libmdadm/mdadm.h	/^	struct superswitch *ss;$/;"	m	struct:supertype	typeref:struct:supertype::superswitch	access:public
sss	./libmdadm/platform-intel.h	/^	__u16 sss; \/* Strip Size Supported *\/$/;"	m	struct:imsm_orom	access:public
st	./libmdadm/mdadm.h	/^	struct supertype *st;$/;"	m	struct:mddev_ident	typeref:struct:mddev_ident::supertype	access:public
start_mdmon	./libmdadm/mdadm.h	/^extern int start_mdmon(char *devnm);$/;"	p	signature:(char *devnm)
start_meta	./libe2fsck/e2fsck.h	/^	char start_meta[2], stop_meta[2];$/;"	m	struct:e2fsck_struct	access:public
starting_lba	./libmdadm/part.h	/^	__u64 starting_lba;$/;"	m	struct:GPT_part_entry	access:public
stashed_ino	./libe2fsck/e2fsck.h	/^	ext2_ino_t stashed_ino;$/;"	m	struct:e2fsck_struct	access:public
stashed_inode	./libe2fsck/e2fsck.h	/^	struct ext2_inode *stashed_inode;$/;"	m	struct:e2fsck_struct	typeref:struct:e2fsck_struct::ext2_inode	access:public
stat2devnm	./libmdadm/mdadm.h	/^extern char *stat2devnm(struct stat *st);$/;"	p	signature:(struct stat *st)
state	./libmdadm/bitmap.h	/^	__u32 state;        \/* 48  bitmap state information *\/$/;"	m	struct:bitmap_super_s	access:public
state	./libmdadm/md_p.h	/^	__u32 state;		\/*  1 State bits (clean, ...)		      *\/$/;"	m	struct:mdp_superblock_s	access:public
state	./libmdadm/md_p.h	/^	__u32 state;		\/* 4 Operational state			      *\/$/;"	m	struct:mdp_device_descriptor_s	access:public
state	./libmdadm/md_u.h	/^	int state;		\/*  1 State bits (clean, ...)		      *\/$/;"	m	struct:mdu_array_info_s	access:public
state	./libmdadm/md_u.h	/^	int state;$/;"	m	struct:mdu_disk_info_s	access:public
state	./libmdadm/md_u.h	/^	int state;$/;"	m	struct:mdu_start_info_s	access:public
state_fd	./libmdadm/mdadm.h	/^	int state_fd;$/;"	m	struct:mdinfo	access:public
stop_meta	./libe2fsck/e2fsck.h	/^	char start_meta[2], stop_meta[2];$/;"	m	struct:e2fsck_struct	access:public
store_super	./libmdadm/mdadm.h	/^	int (*store_super)(struct supertype *st, int fd);$/;"	m	struct:superswitch	access:public
str	./libe2fsck/problem.h	/^	const char *str;$/;"	m	struct:problem_context	access:public
strArrayDevName	./libmdadm/mdadm_other.h	/^	char strArrayDevName[32];$/;"	m	struct:array_detail	access:public
strArraySize	./libmdadm/mdadm_other.h	/^	char strArraySize[32];$/;"	m	struct:array_detail	access:public
strArrayState	./libmdadm/mdadm_other.h	/^	char strArrayState[128];$/;"	m	struct:array_detail	access:public
strContainer	./libmdadm/mdadm_other.h	/^	char strContainer[32];$/;"	m	struct:array_detail	access:public
strDevName	./libmdadm/mdadm_other.h	/^	char strDevName[32];$/;"	m	struct:examine_result	access:public
strDevName	./libmdadm/mdadm_other.h	/^	char strDevName[64];$/;"	m	struct:array_disk_info	access:public
strDiskActivity	./libmdadm/mdadm_other.h	/^	char strDiskActivity[32];$/;"	m	struct:query_result	access:public
strDiskDevName	./libmdadm/mdadm_other.h	/^	char strDiskDevName[32];$/;"	m	struct:query_result	access:public
strMDDevName	./libmdadm/mdadm_other.h	/^	char strMDDevName[32];	\/\/ Available for MD, Disk$/;"	m	struct:query_result	access:public
strMDError	./libmdadm/mdadm_other.h	/^	char strMDError[128];$/;"	m	struct:query_result	access:public
strMDLevel	./libmdadm/mdadm_other.h	/^	char strMDLevel[16];	\/\/ Available for MD, Disk$/;"	m	struct:query_result	access:public
strMDSize	./libmdadm/mdadm_other.h	/^	char strMDSize[32];$/;"	m	struct:query_result	access:public
strMember	./libmdadm/mdadm_other.h	/^	char strMember[32];$/;"	m	struct:array_detail	access:public
strRaidLayout	./libmdadm/mdadm_other.h	/^	char strRaidLayout[32];$/;"	m	struct:array_detail	access:public
strRaidLevel	./libmdadm/mdadm_other.h	/^	char strRaidLevel[16];$/;"	m	struct:array_detail	access:public
strRaidNewLayout	./libmdadm/mdadm_other.h	/^	char strRaidNewLayout[32];$/;"	m	struct:array_detail	access:public
strRebuildOperation	./libmdadm/mdadm_other.h	/^	char strRebuildOperation[16];$/;"	m	struct:array_detail	access:public
strState	./libmdadm/mdadm_other.h	/^	char strState[256];$/;"	m	struct:array_disk_info	access:public
strUsedSize	./libmdadm/mdadm_other.h	/^	char strUsedSize[32];$/;"	m	struct:array_detail	access:public
stride	./libmke2fs/ext2fs.h	/^	__u32				stride;	\/* for mke2fs *\/$/;"	m	struct:struct_ext2_filsys	access:public
stride	./libmke2fs/mke2fs.h	/^	__u16 stride;$/;"	m	struct:extended_opt	access:public
string_copy	./libe2fsck/e2fsck.h	/^extern char *string_copy(e2fsck_t ctx, const char *str, int len);$/;"	p	signature:(e2fsck_t ctx, const char *str, int len)
string_format	./test_utils.cpp	/^string string_format(const char* fmt, ...)$/;"	f	signature:(const char* fmt, ...)
string_format	./test_utils.h	/^extern string string_format(const char* fmt, ...);$/;"	p	signature:(const char* fmt, ...)
stripe_width	./libmke2fs/mke2fs.h	/^	__u32 stripe_width;$/;"	m	struct:extended_opt	access:public
stripes	./libmdadm/mdadm.h	/^	unsigned long long stripes; \/* number of old stripes that comprise 'blocks'*\/$/;"	m	struct:reshape	access:public
strnlen	./libe2fsck/e2fsck.h	373;"	d
struct_ext2_filsys	./libmke2fs/ext2fs.h	/^struct struct_ext2_filsys {$/;"	s
struct_ext2_filsys::badblocks	./libmke2fs/ext2fs.h	/^	ext2_badblocks_list		badblocks;$/;"	m	struct:struct_ext2_filsys	access:public
struct_ext2_filsys::block_alloc_stats	./libmke2fs/ext2fs.h	/^	void (*block_alloc_stats)(ext2_filsys fs, blk64_t blk, int inuse);$/;"	m	struct:struct_ext2_filsys	access:public
struct_ext2_filsys::block_map	./libmke2fs/ext2fs.h	/^	ext2fs_block_bitmap		block_map;$/;"	m	struct:struct_ext2_filsys	access:public
struct_ext2_filsys::blocksize	./libmke2fs/ext2fs.h	/^	unsigned int			blocksize;$/;"	m	struct:struct_ext2_filsys	access:public
struct_ext2_filsys::check_directory	./libmke2fs/ext2fs.h	/^	errcode_t (*check_directory)(ext2_filsys fs, ext2_ino_t ino);$/;"	m	struct:struct_ext2_filsys	access:public
struct_ext2_filsys::cluster_ratio_bits	./libmke2fs/ext2fs.h	/^	int				cluster_ratio_bits;$/;"	m	struct:struct_ext2_filsys	access:public
struct_ext2_filsys::dblist	./libmke2fs/ext2fs.h	/^	ext2_dblist			dblist;$/;"	m	struct:struct_ext2_filsys	access:public
struct_ext2_filsys::default_bitmap_type	./libmke2fs/ext2fs.h	/^	__u16				default_bitmap_type;$/;"	m	struct:struct_ext2_filsys	access:public
struct_ext2_filsys::desc_blocks	./libmke2fs/ext2fs.h	/^	unsigned long			desc_blocks;$/;"	m	struct:struct_ext2_filsys	access:public
struct_ext2_filsys::device_name	./libmke2fs/ext2fs.h	/^	char *				device_name;$/;"	m	struct:struct_ext2_filsys	access:public
struct_ext2_filsys::flags	./libmke2fs/ext2fs.h	/^	int				flags;$/;"	m	struct:struct_ext2_filsys	access:public
struct_ext2_filsys::fragsize	./libmke2fs/ext2fs.h	/^	int				fragsize;$/;"	m	struct:struct_ext2_filsys	access:public
struct_ext2_filsys::get_alloc_block	./libmke2fs/ext2fs.h	/^	errcode_t (*get_alloc_block)(ext2_filsys fs, blk64_t goal,$/;"	m	struct:struct_ext2_filsys	access:public
struct_ext2_filsys::get_blocks	./libmke2fs/ext2fs.h	/^	errcode_t (*get_blocks)(ext2_filsys fs, ext2_ino_t ino, blk_t *blocks);$/;"	m	struct:struct_ext2_filsys	access:public
struct_ext2_filsys::group_desc	./libmke2fs/ext2fs.h	/^	struct opaque_ext2_group_desc *	group_desc;$/;"	m	struct:struct_ext2_filsys	typeref:struct:struct_ext2_filsys::opaque_ext2_group_desc	access:public
struct_ext2_filsys::group_desc_count	./libmke2fs/ext2fs.h	/^	dgrp_t				group_desc_count;$/;"	m	struct:struct_ext2_filsys	access:public
struct_ext2_filsys::icache	./libmke2fs/ext2fs.h	/^	struct ext2_inode_cache		*icache;$/;"	m	struct:struct_ext2_filsys	typeref:struct:struct_ext2_filsys::ext2_inode_cache	access:public
struct_ext2_filsys::image_header	./libmke2fs/ext2fs.h	/^	struct ext2_image_hdr *		image_header;$/;"	m	struct:struct_ext2_filsys	typeref:struct:struct_ext2_filsys::ext2_image_hdr	access:public
struct_ext2_filsys::image_io	./libmke2fs/ext2fs.h	/^	io_channel			image_io;$/;"	m	struct:struct_ext2_filsys	access:public
struct_ext2_filsys::inode_blocks_per_group	./libmke2fs/ext2fs.h	/^	unsigned int			inode_blocks_per_group;$/;"	m	struct:struct_ext2_filsys	access:public
struct_ext2_filsys::inode_map	./libmke2fs/ext2fs.h	/^	ext2fs_inode_bitmap		inode_map;$/;"	m	struct:struct_ext2_filsys	access:public
struct_ext2_filsys::io	./libmke2fs/ext2fs.h	/^	io_channel			io;$/;"	m	struct:struct_ext2_filsys	access:public
struct_ext2_filsys::magic	./libmke2fs/ext2fs.h	/^	errcode_t			magic;$/;"	m	struct:struct_ext2_filsys	access:public
struct_ext2_filsys::mmp_buf	./libmke2fs/ext2fs.h	/^	void *mmp_buf;$/;"	m	struct:struct_ext2_filsys	access:public
struct_ext2_filsys::mmp_cmp	./libmke2fs/ext2fs.h	/^	void *mmp_cmp;$/;"	m	struct:struct_ext2_filsys	access:public
struct_ext2_filsys::mmp_fd	./libmke2fs/ext2fs.h	/^	int mmp_fd;$/;"	m	struct:struct_ext2_filsys	access:public
struct_ext2_filsys::mmp_last_written	./libmke2fs/ext2fs.h	/^	long mmp_last_written;$/;"	m	struct:struct_ext2_filsys	access:public
struct_ext2_filsys::now	./libmke2fs/ext2fs.h	/^	time_t				now;$/;"	m	struct:struct_ext2_filsys	access:public
struct_ext2_filsys::orig_super	./libmke2fs/ext2fs.h	/^	struct ext2_super_block *	orig_super;$/;"	m	struct:struct_ext2_filsys	typeref:struct:struct_ext2_filsys::ext2_super_block	access:public
struct_ext2_filsys::pad	./libmke2fs/ext2fs.h	/^	__u16				pad;$/;"	m	struct:struct_ext2_filsys	access:public
struct_ext2_filsys::priv_data	./libmke2fs/ext2fs.h	/^	void *				priv_data;$/;"	m	struct:struct_ext2_filsys	access:public
struct_ext2_filsys::read_inode	./libmke2fs/ext2fs.h	/^	errcode_t (*read_inode)(ext2_filsys fs, ext2_ino_t ino,$/;"	m	struct:struct_ext2_filsys	access:public
struct_ext2_filsys::reserved	./libmke2fs/ext2fs.h	/^	__u32				reserved[5];$/;"	m	struct:struct_ext2_filsys	access:public
struct_ext2_filsys::stride	./libmke2fs/ext2fs.h	/^	__u32				stride;	\/* for mke2fs *\/$/;"	m	struct:struct_ext2_filsys	access:public
struct_ext2_filsys::super	./libmke2fs/ext2fs.h	/^	struct ext2_super_block	* 	super;$/;"	m	struct:struct_ext2_filsys	typeref:struct:struct_ext2_filsys::ext2_super_block	access:public
struct_ext2_filsys::umask	./libmke2fs/ext2fs.h	/^	__u32				umask;$/;"	m	struct:struct_ext2_filsys	access:public
struct_ext2_filsys::write_bitmaps	./libmke2fs/ext2fs.h	/^	errcode_t (*write_bitmaps)(ext2_filsys fs);$/;"	m	struct:struct_ext2_filsys	access:public
struct_ext2_filsys::write_inode	./libmke2fs/ext2fs.h	/^	errcode_t (*write_inode)(ext2_filsys fs, ext2_ino_t ino,$/;"	m	struct:struct_ext2_filsys	access:public
subarray	./libmdadm/mdadm.h	/^	char	*subarray;$/;"	m	struct:context	access:public
super	./libmke2fs/ext2fs.h	/^	struct ext2_super_block	* 	super;$/;"	m	struct:struct_ext2_filsys	typeref:struct:struct_ext2_filsys::ext2_super_block	access:public
super1_make_v0	./libmdadm/mdadm.h	/^void *super1_make_v0(struct supertype *st, struct mdinfo *info, mdp_super_t *sb0);$/;"	p	signature:(struct supertype *st, struct mdinfo *info, mdp_super_t *sb0)
super_by_fd	./libmdadm/mdadm.h	/^extern struct supertype *super_by_fd(int fd, char **subarray);$/;"	p	signature:(int fd, char **subarray)
super_minor	./libmdadm/mdadm.h	/^	int super_minor;$/;"	m	struct:mddev_ident	access:public
super_only	./libmke2fs/mke2fs.h	/^	int super_only;$/;"	m	struct:e2fs_cfg	access:public
superblock	./libe2fsck/e2fsck.h	/^	blk64_t	superblock;	\/* sb used to open fs *\/$/;"	m	struct:e2fsck_struct	access:public
superblock_size	./libe2fsck/e2fsck_lib.h	/^	int superblock_size;$/;"	m	struct:e2fsck_cfg	access:public
superswitch	./libmdadm/mdadm.h	/^extern struct superswitch {$/;"	s
superswitch::activate_spare	./libmdadm/mdadm.h	/^	struct mdinfo *(*activate_spare)(struct active_array *a,$/;"	m	struct:superswitch	typeref:struct:superswitch::activate_spare	access:public
superswitch::add_internal_bitmap	./libmdadm/mdadm.h	/^	int (*add_internal_bitmap)(struct supertype *st, int *chunkp,$/;"	m	struct:superswitch	access:public
superswitch::add_to_super	./libmdadm/mdadm.h	/^	int (*add_to_super)(struct supertype *st, mdu_disk_info_t *dinfo,$/;"	m	struct:superswitch	access:public
superswitch::avail_size	./libmdadm/mdadm.h	/^	__u64 (*avail_size)(struct supertype *st, __u64 size,$/;"	m	struct:superswitch	access:public
superswitch::brief_detail_super	./libmdadm/mdadm.h	/^	void (*brief_detail_super)(struct supertype *st);$/;"	m	struct:superswitch	access:public
superswitch::brief_examine_subarrays	./libmdadm/mdadm.h	/^	void (*brief_examine_subarrays)(struct supertype *st, int verbose);$/;"	m	struct:superswitch	access:public
superswitch::brief_examine_super	./libmdadm/mdadm.h	/^	void (*brief_examine_super)(struct supertype *st, int verbose);$/;"	m	struct:superswitch	access:public
superswitch::compare_super	./libmdadm/mdadm.h	/^	int (*compare_super)(struct supertype *st, struct supertype *tst);$/;"	m	struct:superswitch	access:public
superswitch::container_content	./libmdadm/mdadm.h	/^	struct mdinfo *(*container_content)(struct supertype *st, char *subarray);$/;"	m	struct:superswitch	typeref:struct:superswitch::container_content	access:public
superswitch::copy_metadata	./libmdadm/mdadm.h	/^	int (*copy_metadata)(struct supertype *st, int from, int to);$/;"	m	struct:superswitch	access:public
superswitch::default_geometry	./libmdadm/mdadm.h	/^	void (*default_geometry)(struct supertype *st, int *level, int *layout, int *chunk); \/* optional *\/$/;"	m	struct:superswitch	access:public
superswitch::detail_platform	./libmdadm/mdadm.h	/^	int (*detail_platform)(int verbose, int enumerate_only, char *controller_path);$/;"	m	struct:superswitch	access:public
superswitch::detail_super	./libmdadm/mdadm.h	/^	void (*detail_super)(struct supertype *st, char *homehost);$/;"	m	struct:superswitch	access:public
superswitch::examine_badblocks	./libmdadm/mdadm.h	/^	int (*examine_badblocks)(struct supertype *st, int fd, char *devname);$/;"	m	struct:superswitch	access:public
superswitch::examine_super	./libmdadm/mdadm.h	/^	void (*examine_super)(struct supertype *st, char *homehost);$/;"	m	struct:superswitch	access:public
superswitch::examine_super_result	./libmdadm/mdadm.h	/^	void (*examine_super_result)(struct supertype *st, char *homehost, struct examine_result *resultlist);$/;"	m	struct:superswitch	access:public
superswitch::export_detail_platform	./libmdadm/mdadm.h	/^	int (*export_detail_platform)(int verbose, char *controller_path);$/;"	m	struct:superswitch	access:public
superswitch::export_detail_super	./libmdadm/mdadm.h	/^	void (*export_detail_super)(struct supertype *st);$/;"	m	struct:superswitch	access:public
superswitch::export_examine_super	./libmdadm/mdadm.h	/^	void (*export_examine_super)(struct supertype *st);$/;"	m	struct:superswitch	access:public
superswitch::external	./libmdadm/mdadm.h	/^	int external;$/;"	m	struct:superswitch	access:public
superswitch::free_super	./libmdadm/mdadm.h	/^	void (*free_super)(struct supertype *st);$/;"	m	struct:superswitch	access:public
superswitch::get_disk_controller_domain	./libmdadm/mdadm.h	/^	const char *(*get_disk_controller_domain)(const char *path);$/;"	m	struct:superswitch	access:public
superswitch::getinfo_super	./libmdadm/mdadm.h	/^	void (*getinfo_super)(struct supertype *st, struct mdinfo *info, char *map);$/;"	m	struct:superswitch	access:public
superswitch::getinfo_super_disks	./libmdadm/mdadm.h	/^	struct mdinfo *(*getinfo_super_disks)(struct supertype *st);$/;"	m	struct:superswitch	typeref:struct:superswitch::getinfo_super_disks	access:public
superswitch::init_super	./libmdadm/mdadm.h	/^	int (*init_super)(struct supertype *st, mdu_array_info_t *info,$/;"	m	struct:superswitch	access:public
superswitch::kill_subarray	./libmdadm/mdadm.h	/^	int (*kill_subarray)(struct supertype *st); \/* optional *\/$/;"	m	struct:superswitch	access:public
superswitch::load_container	./libmdadm/mdadm.h	/^	int (*load_container)(struct supertype *st, int fd, char *devname);$/;"	m	struct:superswitch	access:public
superswitch::load_super	./libmdadm/mdadm.h	/^	int (*load_super)(struct supertype *st, int fd, char *devname);$/;"	m	struct:superswitch	access:public
superswitch::locate_bitmap	./libmdadm/mdadm.h	/^	void (*locate_bitmap)(struct supertype *st, int fd);$/;"	m	struct:superswitch	access:public
superswitch::manage_reshape	./libmdadm/mdadm.h	/^	int (*manage_reshape)( \/* optional *\/$/;"	m	struct:superswitch	access:public
superswitch::match_home	./libmdadm/mdadm.h	/^	int (*match_home)(struct supertype *st, char *homehost);$/;"	m	struct:superswitch	access:public
superswitch::match_metadata_desc	./libmdadm/mdadm.h	/^	struct supertype * (*match_metadata_desc)(char *arg);$/;"	m	struct:superswitch	typeref:struct:superswitch::match_metadata_desc	access:public
superswitch::min_acceptable_spare_size	./libmdadm/mdadm.h	/^	unsigned long long (*min_acceptable_spare_size)(struct supertype *st);$/;"	m	struct:superswitch	access:public
superswitch::name	./libmdadm/mdadm.h	/^	const char *name; \/* canonical metadata name *\/$/;"	m	struct:superswitch	access:public
superswitch::open_new	./libmdadm/mdadm.h	/^	int (*open_new)(struct supertype *c, struct active_array *a,$/;"	m	struct:superswitch	access:public
superswitch::prepare_update	./libmdadm/mdadm.h	/^	int (*prepare_update)(struct supertype *st,$/;"	m	struct:superswitch	access:public
superswitch::process_update	./libmdadm/mdadm.h	/^	void (*process_update)(struct supertype *st,$/;"	m	struct:superswitch	access:public
superswitch::recover_backup	./libmdadm/mdadm.h	/^	int (*recover_backup)(struct supertype *st, struct mdinfo *info);$/;"	m	struct:superswitch	access:public
superswitch::remove_from_super	./libmdadm/mdadm.h	/^	int (*remove_from_super)(struct supertype *st, mdu_disk_info_t *dinfo);$/;"	m	struct:superswitch	access:public
superswitch::reshape_super	./libmdadm/mdadm.h	/^	int (*reshape_super)(struct supertype *st,$/;"	m	struct:superswitch	access:public
superswitch::set_array_state	./libmdadm/mdadm.h	/^	int (*set_array_state)(struct active_array *a, int consistent);$/;"	m	struct:superswitch	access:public
superswitch::set_disk	./libmdadm/mdadm.h	/^	void (*set_disk)(struct active_array *a, int n, int state);$/;"	m	struct:superswitch	access:public
superswitch::store_super	./libmdadm/mdadm.h	/^	int (*store_super)(struct supertype *st, int fd);$/;"	m	struct:superswitch	access:public
superswitch::swapuuid	./libmdadm/mdadm.h	/^	int swapuuid; \/* true if uuid is bigending rather than hostendian *\/$/;"	m	struct:superswitch	access:public
superswitch::sync_metadata	./libmdadm/mdadm.h	/^	void (*sync_metadata)(struct supertype *st);$/;"	m	struct:superswitch	access:public
superswitch::update_subarray	./libmdadm/mdadm.h	/^	int (*update_subarray)(struct supertype *st, char *subarray,$/;"	m	struct:superswitch	access:public
superswitch::update_super	./libmdadm/mdadm.h	/^	int (*update_super)(struct supertype *st, struct mdinfo *info,$/;"	m	struct:superswitch	access:public
superswitch::uuid_from_super	./libmdadm/mdadm.h	/^	void (*uuid_from_super)(struct supertype *st, int uuid[4]);$/;"	m	struct:superswitch	access:public
superswitch::validate_container	./libmdadm/mdadm.h	/^	int (*validate_container)(struct mdinfo *info);$/;"	m	struct:superswitch	access:public
superswitch::validate_geometry	./libmdadm/mdadm.h	/^	int (*validate_geometry)(struct supertype *st, int level, int layout,$/;"	m	struct:superswitch	access:public
superswitch::write_bitmap	./libmdadm/mdadm.h	/^	int (*write_bitmap)(struct supertype *st, int fd);$/;"	m	struct:superswitch	access:public
superswitch::write_init_super	./libmdadm/mdadm.h	/^	int (*write_init_super)(struct supertype *st);$/;"	m	struct:superswitch	access:public
supertype	./libmdadm/mdadm.h	/^	struct supertype *supertype;$/;"	m	struct:createinfo	typeref:struct:createinfo::supertype	access:public
supertype	./libmdadm/mdadm.h	/^struct supertype {$/;"	s
supertype::arrays	./libmdadm/mdadm.h	/^	struct active_array *arrays;$/;"	m	struct:supertype	typeref:struct:supertype::active_array	access:public
supertype::container_devnm	./libmdadm/mdadm.h	/^	char container_devnm[32];    \/* devnm of container *\/$/;"	m	struct:supertype	access:public
supertype::data_offset	./libmdadm/mdadm.h	/^	unsigned long long data_offset; \/* used by v1.x only *\/$/;"	m	struct:supertype	access:public
supertype::devcnt	./libmdadm/mdadm.h	/^	int devcnt;$/;"	m	struct:supertype	access:public
supertype::devnm	./libmdadm/mdadm.h	/^	char devnm[32]; \/* e.g. md0.  This appears in metadata_version:$/;"	m	struct:supertype	access:public
supertype::devs	./libmdadm/mdadm.h	/^	struct mdinfo *devs;$/;"	m	struct:supertype	typeref:struct:supertype::mdinfo	access:public
supertype::devsize	./libmdadm/mdadm.h	/^	unsigned long long devsize;$/;"	m	struct:supertype	access:public
supertype::ignore_hw_compat	./libmdadm/mdadm.h	/^	int ignore_hw_compat; \/* used to inform metadata handlers that it should ignore$/;"	m	struct:supertype	access:public
supertype::info	./libmdadm/mdadm.h	/^	void *info;$/;"	m	struct:supertype	access:public
supertype::max_devs	./libmdadm/mdadm.h	/^	int max_devs;$/;"	m	struct:supertype	access:public
supertype::minor_version	./libmdadm/mdadm.h	/^	int minor_version;$/;"	m	struct:supertype	access:public
supertype::other	./libmdadm/mdadm.h	/^	void *other; \/* Hack used to convert v0.90 to v1.0 *\/$/;"	m	struct:supertype	access:public
supertype::retry_soon	./libmdadm/mdadm.h	/^	int retry_soon;$/;"	m	struct:supertype	access:public
supertype::sb	./libmdadm/mdadm.h	/^	void *sb;$/;"	m	struct:supertype	access:public
supertype::sock	./libmdadm/mdadm.h	/^	int sock; \/* listen to external programs *\/$/;"	m	struct:supertype	access:public
supertype::ss	./libmdadm/mdadm.h	/^	struct superswitch *ss;$/;"	m	struct:supertype	typeref:struct:supertype::superswitch	access:public
supertype::update_tail	./libmdadm/mdadm.h	/^	struct metadata_update **update_tail;$/;"	m	struct:supertype	typeref:struct:supertype::metadata_update	access:public
supertype::updates	./libmdadm/mdadm.h	/^	struct metadata_update *updates;$/;"	m	struct:supertype	typeref:struct:supertype::metadata_update	access:public
suspended	./libmdadm/mdmon.h	/^enum array_state { clear, inactive, suspended, readonly, read_auto,$/;"	e	enum:array_state
swapuuid	./libmdadm/mdadm.h	/^	int swapuuid; \/* true if uuid is bigending rather than hostendian *\/$/;"	m	struct:superswitch	access:public
symlinks	./libmdadm/mdadm.h	/^	int	symlinks;$/;"	m	struct:createinfo	access:public
sync_action	./libmdadm/mdmon.h	/^enum sync_action { idle, reshape, resync, recover, check, repair, bad_action };$/;"	g
sync_blockdev	./libe2fsck/jfs_user.h	/^void sync_blockdev(kdev_t kdev);$/;"	p	signature:(kdev_t kdev)
sync_completed_fd	./libmdadm/mdmon.h	/^	int sync_completed_fd; \/* for checkpoint notification events *\/$/;"	m	struct:active_array	access:public
sync_metadata	./libmdadm/mdadm.h	/^	void (*sync_metadata)(struct supertype *st);$/;"	m	struct:superswitch	access:public
sync_size	./libmdadm/bitmap.h	/^	__u64 sync_size;    \/* 40  the size of the md device's sync range(3) *\/$/;"	m	struct:bitmap_super_s	access:public
syncchunk	./libmdadm/bitmap.h	/^	unsigned long syncchunk;$/;"	m	struct:bitmap	access:public
sys_dev	./libmdadm/platform-intel.h	/^struct sys_dev {$/;"	s
sys_dev::dev_id	./libmdadm/platform-intel.h	/^	__u16  dev_id;$/;"	m	struct:sys_dev	access:public
sys_dev::next	./libmdadm/platform-intel.h	/^	struct sys_dev *next;$/;"	m	struct:sys_dev	typeref:struct:sys_dev::sys_dev	access:public
sys_dev::path	./libmdadm/platform-intel.h	/^	char *path;$/;"	m	struct:sys_dev	access:public
sys_dev::pci_id	./libmdadm/platform-intel.h	/^	char *pci_id;$/;"	m	struct:sys_dev	access:public
sys_dev::type	./libmdadm/platform-intel.h	/^	enum sys_dev_type type;$/;"	m	struct:sys_dev	typeref:enum:sys_dev::sys_dev_type	access:public
sys_dev_type	./libmdadm/platform-intel.h	/^enum sys_dev_type {$/;"	g
sys_name	./libmdadm/mdadm.h	/^	char		sys_name[20];$/;"	m	struct:mdinfo	access:public
sysfs_add_disk	./libmdadm/mdadm.h	/^extern int sysfs_add_disk(struct mdinfo *sra, struct mdinfo *sd, int resume);$/;"	p	signature:(struct mdinfo *sra, struct mdinfo *sd, int resume)
sysfs_attr_match	./libmdadm/mdadm.h	/^extern int sysfs_attr_match(const char *attr, const char *str);$/;"	p	signature:(const char *attr, const char *str)
sysfs_attribute_available	./libmdadm/mdadm.h	/^extern int sysfs_attribute_available(struct mdinfo *sra, struct mdinfo *dev,$/;"	p	signature:(struct mdinfo *sra, struct mdinfo *dev, char *name)
sysfs_disk_to_scsi_id	./libmdadm/mdadm.h	/^extern int sysfs_disk_to_scsi_id(int fd, __u32 *id);$/;"	p	signature:(int fd, __u32 *id)
sysfs_fd_get_ll	./libmdadm/mdadm.h	/^extern int sysfs_fd_get_ll(int fd, unsigned long long *val);$/;"	p	signature:(int fd, unsigned long long *val)
sysfs_fd_get_str	./libmdadm/mdadm.h	/^extern int sysfs_fd_get_str(int fd, char *val, int size);$/;"	p	signature:(int fd, char *val, int size)
sysfs_fd_get_two	./libmdadm/mdadm.h	/^extern int sysfs_fd_get_two(int fd, unsigned long long *v1, unsigned long long *v2);$/;"	p	signature:(int fd, unsigned long long *v1, unsigned long long *v2)
sysfs_free	./libmdadm/mdadm.h	/^extern void sysfs_free(struct mdinfo *sra);$/;"	p	signature:(struct mdinfo *sra)
sysfs_freeze_array	./libmdadm/mdadm.h	/^extern int sysfs_freeze_array(struct mdinfo *sra);$/;"	p	signature:(struct mdinfo *sra)
sysfs_get_fd	./libmdadm/mdadm.h	/^extern int sysfs_get_fd(struct mdinfo *sra, struct mdinfo *dev,$/;"	p	signature:(struct mdinfo *sra, struct mdinfo *dev, char *name)
sysfs_get_ll	./libmdadm/mdadm.h	/^extern int sysfs_get_ll(struct mdinfo *sra, struct mdinfo *dev,$/;"	p	signature:(struct mdinfo *sra, struct mdinfo *dev, char *name, unsigned long long *val)
sysfs_get_str	./libmdadm/mdadm.h	/^extern int sysfs_get_str(struct mdinfo *sra, struct mdinfo *dev,$/;"	p	signature:(struct mdinfo *sra, struct mdinfo *dev, char *name, char *val, int size)
sysfs_get_two	./libmdadm/mdadm.h	/^extern int sysfs_get_two(struct mdinfo *sra, struct mdinfo *dev,$/;"	p	signature:(struct mdinfo *sra, struct mdinfo *dev, char *name, unsigned long long *v1, unsigned long long *v2)
sysfs_init	./libmdadm/mdadm.h	/^extern void sysfs_init(struct mdinfo *mdi, int fd, char *devnm);$/;"	p	signature:(struct mdinfo *mdi, int fd, char *devnm)
sysfs_match_word	./libmdadm/mdadm.h	/^extern int sysfs_match_word(const char *word, char **list);$/;"	p	signature:(const char *word, char **list)
sysfs_open	./libmdadm/mdadm.h	/^extern int sysfs_open(char *devnm, char *devname, char *attr);$/;"	p	signature:(char *devnm, char *devname, char *attr)
sysfs_read	./libmdadm/mdadm.h	/^extern struct mdinfo *sysfs_read(int fd, char *devnm, unsigned long options);$/;"	p	signature:(int fd, char *devnm, unsigned long options)
sysfs_read_flags	./libmdadm/mdadm.h	/^enum sysfs_read_flags {$/;"	g
sysfs_set_array	./libmdadm/mdadm.h	/^extern int sysfs_set_array(struct mdinfo *info, int vers);$/;"	p	signature:(struct mdinfo *info, int vers)
sysfs_set_num	./libmdadm/mdadm.h	/^extern int sysfs_set_num(struct mdinfo *sra, struct mdinfo *dev,$/;"	p	signature:(struct mdinfo *sra, struct mdinfo *dev, char *name, unsigned long long val)
sysfs_set_num_signed	./libmdadm/mdadm.h	/^extern int sysfs_set_num_signed(struct mdinfo *sra, struct mdinfo *dev,$/;"	p	signature:(struct mdinfo *sra, struct mdinfo *dev, char *name, long long val)
sysfs_set_safemode	./libmdadm/mdadm.h	/^extern int sysfs_set_safemode(struct mdinfo *sra, unsigned long ms);$/;"	p	signature:(struct mdinfo *sra, unsigned long ms)
sysfs_set_str	./libmdadm/mdadm.h	/^extern int sysfs_set_str(struct mdinfo *sra, struct mdinfo *dev,$/;"	p	signature:(struct mdinfo *sra, struct mdinfo *dev, char *name, char *val)
sysfs_uevent	./libmdadm/mdadm.h	/^extern int sysfs_uevent(struct mdinfo *sra, char *event);$/;"	p	signature:(struct mdinfo *sra, char *event)
sysfs_unique_holder	./libmdadm/mdadm.h	/^extern int sysfs_unique_holder(char *devnm, long rdev);$/;"	p	signature:(char *devnm, long rdev)
sysfs_wait	./libmdadm/mdadm.h	/^extern int sysfs_wait(int fd, int *msec);$/;"	p	signature:(int fd, int *msec)
system_start	./libe2fsck/e2fsck.h	/^	struct timeval system_start;$/;"	m	struct:resource_track	typeref:struct:resource_track::timeval	access:public
t_async_datalist	./libe2fsck/kernel-jbd.h	/^	struct journal_head *	t_async_datalist;$/;"	m	struct:transaction_s	typeref:struct:transaction_s::journal_head	access:public
t_blocknr	./libe2fsck/kernel-jbd.h	/^	__u32		t_blocknr;	\/* The on-disk block number *\/$/;"	m	struct:journal_block_tag_s	access:public
t_blocknr_high	./libe2fsck/kernel-jbd.h	/^	__u32		t_blocknr_high; \/* most-significant high 32bits. *\/$/;"	m	struct:journal_block_tag_s	access:public
t_buffers	./libe2fsck/kernel-jbd.h	/^	struct journal_head *	t_buffers;$/;"	m	struct:transaction_s	typeref:struct:transaction_s::journal_head	access:public
t_checkpoint_list	./libe2fsck/kernel-jbd.h	/^	struct journal_head *	t_checkpoint_list;$/;"	m	struct:transaction_s	typeref:struct:transaction_s::journal_head	access:public
t_cpnext	./libe2fsck/kernel-jbd.h	/^	transaction_t		*t_cpnext, *t_cpprev;$/;"	m	struct:transaction_s	access:public
t_cpprev	./libe2fsck/kernel-jbd.h	/^	transaction_t		*t_cpnext, *t_cpprev;$/;"	m	struct:transaction_s	access:public
t_expires	./libe2fsck/kernel-jbd.h	/^	unsigned long		t_expires;$/;"	m	struct:transaction_s	access:public
t_flags	./libe2fsck/kernel-jbd.h	/^	__u32		t_flags;	\/* See below *\/$/;"	m	struct:journal_block_tag_s	access:public
t_forget	./libe2fsck/kernel-jbd.h	/^	struct journal_head *	t_forget;$/;"	m	struct:transaction_s	typeref:struct:transaction_s::journal_head	access:public
t_handle_count	./libe2fsck/kernel-jbd.h	/^	int t_handle_count;$/;"	m	struct:transaction_s	access:public
t_ilist	./libe2fsck/kernel-jbd.h	/^	struct inode *		t_ilist;$/;"	m	struct:transaction_s	typeref:struct:transaction_s::inode	access:public
t_iobuf_list	./libe2fsck/kernel-jbd.h	/^	struct journal_head *	t_iobuf_list;$/;"	m	struct:transaction_s	typeref:struct:transaction_s::journal_head	access:public
t_journal	./libe2fsck/kernel-jbd.h	/^	journal_t *		t_journal;$/;"	m	struct:transaction_s	access:public
t_log_list	./libe2fsck/kernel-jbd.h	/^	struct journal_head *	t_log_list;$/;"	m	struct:transaction_s	typeref:struct:transaction_s::journal_head	access:public
t_log_start	./libe2fsck/kernel-jbd.h	/^	unsigned long		t_log_start;$/;"	m	struct:transaction_s	access:public
t_nr_buffers	./libe2fsck/kernel-jbd.h	/^	int			t_nr_buffers;$/;"	m	struct:transaction_s	access:public
t_outstanding_credits	./libe2fsck/kernel-jbd.h	/^	int			t_outstanding_credits;$/;"	m	struct:transaction_s	access:public
t_reserved_list	./libe2fsck/kernel-jbd.h	/^	struct journal_head *	t_reserved_list;$/;"	m	struct:transaction_s	typeref:struct:transaction_s::journal_head	access:public
t_shadow_list	./libe2fsck/kernel-jbd.h	/^	struct journal_head *	t_shadow_list;$/;"	m	struct:transaction_s	typeref:struct:transaction_s::journal_head	access:public
t_state	./libe2fsck/kernel-jbd.h	/^	}			t_state;$/;"	m	struct:transaction_s	typeref:enum:transaction_s::__anon2	access:public
t_sync_datalist	./libe2fsck/kernel-jbd.h	/^	struct journal_head *	t_sync_datalist;$/;"	m	struct:transaction_s	typeref:struct:transaction_s::journal_head	access:public
t_tid	./libe2fsck/kernel-jbd.h	/^	tid_t			t_tid;$/;"	m	struct:transaction_s	access:public
t_updates	./libe2fsck/kernel-jbd.h	/^	int			t_updates;$/;"	m	struct:transaction_s	access:public
table_ver_major	./libmdadm/platform-intel.h	/^	__u8 table_ver_major; \/* Currently 2 (can change with future revs) *\/$/;"	m	struct:imsm_orom	access:public
table_ver_minor	./libmdadm/platform-intel.h	/^	__u8 table_ver_minor; \/* Currently 2 (can change with future revs) *\/$/;"	m	struct:imsm_orom	access:public
tds	./libmdadm/platform-intel.h	/^	__u16 tds; \/* Total Disks Supported *\/$/;"	m	struct:imsm_orom	access:public
test	./libmdadm/mdadm.h	/^	int	test;$/;"	m	struct:context	access:public
test_fs	./libmke2fs/mke2fs.h	/^	int test_fs;$/;"	m	struct:extended_opt	access:public
test_partition	./libmdadm/mdadm.h	/^extern int test_partition(int fd);$/;"	p	signature:(int fd)
test_partition_from_id	./libmdadm/mdadm.h	/^extern int test_partition_from_id(dev_t id);$/;"	p	signature:(dev_t id)
text_version	./libmdadm/mdadm.h	/^	char			text_version[50];$/;"	m	struct:mdinfo	access:public
this_disk	./libmdadm/md_p.h	/^	mdp_disk_t this_disk;$/;"	m	struct:mdp_superblock_s	access:public
tid_geq	./libe2fsck/kernel-jbd.h	/^static inline int tid_geq(tid_t x, tid_t y)$/;"	f	signature:(tid_t x, tid_t y)
tid_gt	./libe2fsck/kernel-jbd.h	/^static inline int tid_gt(tid_t x, tid_t y)$/;"	f	signature:(tid_t x, tid_t y)
tid_t	./libe2fsck/jfs_compat.h	/^typedef unsigned int tid_t;$/;"	t
time_fudge	./libe2fsck/e2fsck.h	/^	time_t time_fudge;	\/* For working around buggy init scripts *\/$/;"	m	struct:e2fsck_struct	access:public
time_start	./libe2fsck/e2fsck.h	/^	struct timeval time_start;$/;"	m	struct:resource_track	typeref:struct:resource_track::timeval	access:public
timing_statistics	./libe2fsck/e2fsck_lib.h	/^	int timing_statistics; \/* 1: OPT_TIME 2: OPT_TIME2 *\/$/;"	m	struct:e2fsck_cfg	access:public
to_remove	./libmdadm/mdmon.h	/^	int to_remove;$/;"	m	struct:active_array	access:public
to_subarray	./libmdadm/mdadm.h	/^static inline char *to_subarray(struct mdstat_ent *ent, char *container)$/;"	f	signature:(struct mdstat_ent *ent, char *container)
tokenize	./unitest/TestingLoop.cpp	/^static void tokenize(char* target, vector<string>& tokens)$/;"	f	file:	signature:(char* target, vector<string>& tokens)
total	./libmdadm/sha1.h	/^  sha1_uint32 total[2];$/;"	m	struct:sha1_ctx	access:public
transaction_s	./libe2fsck/kernel-jbd.h	/^struct transaction_s$/;"	s
transaction_s::T_COMMIT	./libe2fsck/kernel-jbd.h	/^		T_COMMIT,$/;"	e	enum:transaction_s::__anon2
transaction_s::T_FINISHED	./libe2fsck/kernel-jbd.h	/^		T_FINISHED$/;"	e	enum:transaction_s::__anon2
transaction_s::T_FLUSH	./libe2fsck/kernel-jbd.h	/^		T_FLUSH,$/;"	e	enum:transaction_s::__anon2
transaction_s::T_LOCKED	./libe2fsck/kernel-jbd.h	/^		T_LOCKED,$/;"	e	enum:transaction_s::__anon2
transaction_s::T_RUNDOWN	./libe2fsck/kernel-jbd.h	/^		T_RUNDOWN,$/;"	e	enum:transaction_s::__anon2
transaction_s::T_RUNNING	./libe2fsck/kernel-jbd.h	/^		T_RUNNING,$/;"	e	enum:transaction_s::__anon2
transaction_s::t_async_datalist	./libe2fsck/kernel-jbd.h	/^	struct journal_head *	t_async_datalist;$/;"	m	struct:transaction_s	typeref:struct:transaction_s::journal_head	access:public
transaction_s::t_buffers	./libe2fsck/kernel-jbd.h	/^	struct journal_head *	t_buffers;$/;"	m	struct:transaction_s	typeref:struct:transaction_s::journal_head	access:public
transaction_s::t_checkpoint_list	./libe2fsck/kernel-jbd.h	/^	struct journal_head *	t_checkpoint_list;$/;"	m	struct:transaction_s	typeref:struct:transaction_s::journal_head	access:public
transaction_s::t_cpnext	./libe2fsck/kernel-jbd.h	/^	transaction_t		*t_cpnext, *t_cpprev;$/;"	m	struct:transaction_s	access:public
transaction_s::t_cpprev	./libe2fsck/kernel-jbd.h	/^	transaction_t		*t_cpnext, *t_cpprev;$/;"	m	struct:transaction_s	access:public
transaction_s::t_expires	./libe2fsck/kernel-jbd.h	/^	unsigned long		t_expires;$/;"	m	struct:transaction_s	access:public
transaction_s::t_forget	./libe2fsck/kernel-jbd.h	/^	struct journal_head *	t_forget;$/;"	m	struct:transaction_s	typeref:struct:transaction_s::journal_head	access:public
transaction_s::t_handle_count	./libe2fsck/kernel-jbd.h	/^	int t_handle_count;$/;"	m	struct:transaction_s	access:public
transaction_s::t_ilist	./libe2fsck/kernel-jbd.h	/^	struct inode *		t_ilist;$/;"	m	struct:transaction_s	typeref:struct:transaction_s::inode	access:public
transaction_s::t_iobuf_list	./libe2fsck/kernel-jbd.h	/^	struct journal_head *	t_iobuf_list;$/;"	m	struct:transaction_s	typeref:struct:transaction_s::journal_head	access:public
transaction_s::t_journal	./libe2fsck/kernel-jbd.h	/^	journal_t *		t_journal;$/;"	m	struct:transaction_s	access:public
transaction_s::t_log_list	./libe2fsck/kernel-jbd.h	/^	struct journal_head *	t_log_list;$/;"	m	struct:transaction_s	typeref:struct:transaction_s::journal_head	access:public
transaction_s::t_log_start	./libe2fsck/kernel-jbd.h	/^	unsigned long		t_log_start;$/;"	m	struct:transaction_s	access:public
transaction_s::t_nr_buffers	./libe2fsck/kernel-jbd.h	/^	int			t_nr_buffers;$/;"	m	struct:transaction_s	access:public
transaction_s::t_outstanding_credits	./libe2fsck/kernel-jbd.h	/^	int			t_outstanding_credits;$/;"	m	struct:transaction_s	access:public
transaction_s::t_reserved_list	./libe2fsck/kernel-jbd.h	/^	struct journal_head *	t_reserved_list;$/;"	m	struct:transaction_s	typeref:struct:transaction_s::journal_head	access:public
transaction_s::t_shadow_list	./libe2fsck/kernel-jbd.h	/^	struct journal_head *	t_shadow_list;$/;"	m	struct:transaction_s	typeref:struct:transaction_s::journal_head	access:public
transaction_s::t_state	./libe2fsck/kernel-jbd.h	/^	}			t_state;$/;"	m	struct:transaction_s	typeref:enum:transaction_s::__anon2	access:public
transaction_s::t_sync_datalist	./libe2fsck/kernel-jbd.h	/^	struct journal_head *	t_sync_datalist;$/;"	m	struct:transaction_s	typeref:struct:transaction_s::journal_head	access:public
transaction_s::t_tid	./libe2fsck/kernel-jbd.h	/^	tid_t			t_tid;$/;"	m	struct:transaction_s	access:public
transaction_s::t_updates	./libe2fsck/kernel-jbd.h	/^	int			t_updates;$/;"	m	struct:transaction_s	access:public
try_lock_journal	./libe2fsck/kernel-jbd.h	/^static inline int try_lock_journal(journal_t * journal)$/;"	f	signature:(journal_t * journal)
type	./libe2fsck/e2fsck.h	/^	int		type;$/;"	m	struct:dx_dirblock_info	access:public
type	./libmdadm/mdadm.h	/^	char *type;	\/* rule_policy or rule_part *\/$/;"	m	struct:pol_rule	access:public
type	./libmdadm/platform-intel.h	/^	enum sys_dev_type type;$/;"	m	struct:sys_dev	typeref:enum:sys_dev::sys_dev_type	access:public
type_guid	./libmdadm/part.h	/^	unsigned char type_guid[16];$/;"	m	struct:GPT_part_entry	access:public
uChkSum	./libmdadm/mdadm_other.h	/^	unsigned uChkSum;$/;"	m	struct:examine_result	access:public
uDevRole	./libmdadm/mdadm_other.h	/^	unsigned uDevRole;$/;"	m	struct:examine_result	access:public
uDiskCounter	./libmdadm/mdadm_other.h	/^	unsigned uDiskCounter;$/;"	m	struct:array_detail	access:public
uExpectedChkSum	./libmdadm/mdadm_other.h	/^	unsigned uExpectedChkSum;$/;"	m	struct:examine_result	access:public
uRaidDiskNum	./libmdadm/mdadm_other.h	/^	unsigned uRaidDiskNum;$/;"	m	struct:examine_result	access:public
uRaidLevel	./libmdadm/mdadm_other.h	/^	unsigned uRaidLevel;$/;"	m	struct:examine_result	access:public
uid	./libmdadm/mdadm.h	/^	int	uid;$/;"	m	struct:createinfo	access:public
ullArraySize	./libmdadm/mdadm_other.h	/^	unsigned long long ullArraySize;$/;"	m	struct:array_detail	access:public
ullReshapeProgress	./libmdadm/mdadm_other.h	/^	unsigned long long ullReshapeProgress;$/;"	m	struct:array_detail	access:public
ullUsedSize	./libmdadm/mdadm_other.h	/^	unsigned long long ullUsedSize;$/;"	m	struct:array_detail	access:public
umask	./libmke2fs/ext2fs.h	/^	__u32				umask;$/;"	m	struct:struct_ext2_filsys	access:public
unblock_monitor	./libmdadm/msg.h	/^extern void unblock_monitor(char *container, const int unfreeze);$/;"	p	signature:(char *container, const int unfreeze)
unblock_subarray	./libmdadm/msg.h	/^extern int unblock_subarray(struct mdinfo *sra, const int unfreeze);$/;"	p	signature:(struct mdinfo *sra, const int unfreeze)
unlikely	./libe2fsck/crc32defs.h	60;"	d
unlikely	./libe2fsck/crc32defs.h	63;"	d
unlock_buffer	./libe2fsck/jfs_user.h	45;"	d
unlock_journal	./libe2fsck/kernel-jbd.h	/^static inline void unlock_journal(journal_t * journal)$/;"	f	signature:(journal_t * journal)
update	./libmdadm/mdadm.h	/^	char	*update;$/;"	m	struct:context	access:public
update_subarray	./libmdadm/mdadm.h	/^	int (*update_subarray)(struct supertype *st, char *subarray,$/;"	m	struct:superswitch	access:public
update_super	./libmdadm/mdadm.h	/^	int (*update_super)(struct supertype *st, struct mdinfo *info,$/;"	m	struct:superswitch	access:public
update_tail	./libmdadm/mdadm.h	/^	struct metadata_update **update_tail;$/;"	m	struct:supertype	typeref:struct:supertype::metadata_update	access:public
updates	./libmdadm/mdadm.h	/^	struct metadata_update *updates;$/;"	m	struct:supertype	typeref:struct:supertype::metadata_update	access:public
usage_types	./libmke2fs/mke2fs.h	/^	char usage_types[256];$/;"	m	struct:e2fs_cfg	access:public
use_ext_journal	./libe2fsck/e2fsck_lib.h	/^	int use_ext_journal;$/;"	m	struct:e2fsck_cfg	access:public
use_superblock	./libe2fsck/e2fsck.h	/^	blk64_t	use_superblock;	\/* sb requested by user *\/$/;"	m	struct:e2fsck_struct	access:public
use_superblock	./libe2fsck/e2fsck_lib.h	/^	blk64_t use_superblock;$/;"	m	struct:e2fsck_cfg	access:public
use_udev	./libmdadm/mdadm.h	/^extern int use_udev(void);$/;"	p	signature:(void)
used	./libmdadm/mdadm.h	/^	int used;		\/* set when used *\/$/;"	m	struct:mddev_dev	access:public
user_start	./libe2fsck/e2fsck.h	/^	struct timeval user_start;$/;"	m	struct:resource_track	typeref:struct:resource_track::timeval	access:public
utime	./libmdadm/md_p.h	/^	__u32 utime;		\/*  0 Superblock update time		      *\/$/;"	m	struct:mdp_superblock_s	access:public
utime	./libmdadm/md_u.h	/^	int utime;		\/*  0 Superblock update time		      *\/$/;"	m	struct:mdu_array_info_s	access:public
uuid	./libmdadm/bitmap.h	/^	__u8  uuid[16];     \/*  8  128 bit uuid - must match md device uuid *\/$/;"	m	struct:bitmap_super_s	access:public
uuid	./libmdadm/mdadm.h	/^	int			uuid[4];$/;"	m	struct:mdinfo	access:public
uuid	./libmdadm/mdadm.h	/^	int	uuid[4];$/;"	m	struct:map_ent	access:public
uuid	./libmdadm/mdadm.h	/^	int	uuid[4];$/;"	m	struct:mddev_ident	access:public
uuid	./libmdadm/mdadm_other.h	/^	int uuid[4];$/;"	m	struct:array_detail	access:public
uuid_from_super	./libmdadm/mdadm.h	/^	void (*uuid_from_super)(struct supertype *st, int uuid[4]);$/;"	m	struct:superswitch	access:public
uuid_from_super	./libmdadm/mdadm.h	/^extern void uuid_from_super(int uuid[4], mdp_super_t *super);$/;"	p	signature:(int uuid[4], mdp_super_t *super)
uuid_set	./libmdadm/mdadm.h	/^	int	uuid_set;$/;"	m	struct:mddev_ident	access:public
validate_container	./libmdadm/mdadm.h	/^	int (*validate_container)(struct mdinfo *info);$/;"	m	struct:superswitch	access:public
validate_geometry	./libmdadm/mdadm.h	/^	int (*validate_geometry)(struct supertype *st, int level, int layout,$/;"	m	struct:superswitch	access:public
value	./libmdadm/mdadm.h	/^		char *value;$/;"	m	struct:pol_rule::rule	access:public
value	./libmdadm/mdadm.h	/^	const char *value;$/;"	m	struct:dev_policy	access:public
verbose	./libe2fsck/e2fsck_lib.h	/^	int verbose;$/;"	m	struct:e2fsck_cfg	access:public
verbose	./libmdadm/mdadm.h	/^	int	verbose;$/;"	m	struct:context	access:public
verbose	./libmke2fs/mke2fs.h	/^	int verbose;$/;"	m	struct:e2fs_cfg	access:public
version	./libmdadm/bitmap.h	/^	__u32 version;      \/*  4  the bitmap major for now, could change... *\/$/;"	m	struct:bitmap_super_s	access:public
version_to_superswitch	./libmdadm/mdadm.h	/^extern struct superswitch *version_to_superswitch(char *vers);$/;"	p	signature:(char *vers)
volume_label	./libmke2fs/mke2fs.h	/^	char volume_label[16];$/;"	m	struct:e2fs_cfg	access:public
vpa	./libmdadm/platform-intel.h	/^	__u8 vpa; \/* # Volumes Per Array supported *\/$/;"	m	struct:imsm_orom	access:public
vphba	./libmdadm/platform-intel.h	/^	__u8 vphba; \/* # Volumes Per Host Bus Adapter supported *\/$/;"	m	struct:imsm_orom	access:public
wait_for	./libmdadm/mdadm.h	/^void wait_for(char *dev, int fd);$/;"	p	signature:(char *dev, int fd)
wait_on_buffer	./libe2fsck/jfs_user.h	/^void wait_on_buffer(struct buffer_head *bh);$/;"	p	signature:(struct buffer_head *bh)
wait_reply	./libmdadm/msg.h	/^extern int wait_reply(int fd, int tmo);$/;"	p	signature:(int fd, int tmo)
working_disks	./libmdadm/md_p.h	/^	__u32 working_disks;	\/*  3 Number of working disks		      *\/$/;"	m	struct:mdp_superblock_s	access:public
working_disks	./libmdadm/md_u.h	/^	int working_disks;	\/*  3 Number of working disks		      *\/$/;"	m	struct:mdu_array_info_s	access:public
write_all	./libe2fsck/e2fsck.h	/^extern int write_all(int fd, char *buf, size_t count);$/;"	p	signature:(int fd, char *buf, size_t count)
write_behind	./libmdadm/bitmap.h	/^	__u32 write_behind; \/* 60  number of outstanding write-behind writes *\/$/;"	m	struct:bitmap_super_s	access:public
write_behind	./libmdadm/mdadm.h	/^	int	write_behind;$/;"	m	struct:shape	access:public
write_bitmap	./libmdadm/mdadm.h	/^	int (*write_bitmap)(struct supertype *st, int fd);$/;"	m	struct:superswitch	access:public
write_bitmaps	./libmke2fs/ext2fs.h	/^	errcode_t (*write_bitmaps)(ext2_filsys fs);$/;"	m	struct:struct_ext2_filsys	access:public
write_daemon	./libmdadm/bitmap.h	/^	mdk_thread_t *write_daemon;$/;"	m	struct:bitmap	access:public
write_done	./libmdadm/bitmap.h	/^	struct semaphore write_done;$/;"	m	struct:bitmap	typeref:struct:bitmap::semaphore	access:public
write_init_super	./libmdadm/mdadm.h	/^	int (*write_init_super)(struct supertype *st);$/;"	m	struct:superswitch	access:public
write_inode	./libmke2fs/ext2fs.h	/^	errcode_t (*write_inode)(ext2_filsys fs, ext2_ino_t ino,$/;"	m	struct:struct_ext2_filsys	access:public
write_lock	./libmdadm/bitmap.h	/^	spinlock_t write_lock;$/;"	m	struct:bitmap	access:public
write_pages	./libmdadm/bitmap.h	/^	struct list_head write_pages;$/;"	m	struct:bitmap	typeref:struct:bitmap::list_head	access:public
write_pending	./libmdadm/mdmon.h	/^		   clean, active, write_pending, active_idle, bad_word};$/;"	e	enum:array_state
write_pool	./libmdadm/bitmap.h	/^	mempool_t *write_pool;$/;"	m	struct:bitmap	access:public
write_ready	./libmdadm/bitmap.h	/^	struct semaphore write_ready;$/;"	m	struct:bitmap	typeref:struct:bitmap::semaphore	access:public
write_wait	./libmdadm/bitmap.h	/^	wait_queue_head_t write_wait;$/;"	m	struct:bitmap	access:public
writeback_daemon	./libmdadm/bitmap.h	/^	mdk_thread_t *writeback_daemon;$/;"	m	struct:bitmap	access:public
writemostly	./libmdadm/mdadm.h	/^	char writemostly;	\/* 1 for 'set writemostly', 2 for 'clear writemostly' *\/$/;"	m	struct:mddev_dev	access:public
writes_pending	./libmdadm/bitmap.h	/^	unsigned long writes_pending;$/;"	m	struct:bitmap	access:public
xasprintf	./libmdadm/mdadm.h	/^static inline int xasprintf(char **strp, const char *fmt, ...) {$/;"	f	signature:(char **strp, const char *fmt, ...)
xcalloc	./libmdadm/mdadm.h	/^void *xcalloc(size_t num, size_t size);$/;"	p	signature:(size_t num, size_t size)
xmalloc	./libmdadm/mdadm.h	/^void *xmalloc(size_t len);$/;"	p	signature:(size_t len)
xrealloc	./libmdadm/mdadm.h	/^void *xrealloc(void *ptr, size_t len);$/;"	p	signature:(void *ptr, size_t len)
xstrdup	./libmdadm/mdadm.h	/^char *xstrdup(const char *str);$/;"	p	signature:(const char *str)
~CriticalSection	./test_utils.h	/^	~CriticalSection() { m_iLock = 0; }$/;"	f	class:CriticalSection	access:public	signature:()
~CriticalSectionLock	./test_utils.h	/^	~CriticalSectionLock() {$/;"	f	class:CriticalSectionLock	access:public	signature:()
~DiskProfile	./RAIDManager.h	/^	~DiskProfile()$/;"	f	struct:DiskProfile	access:public	signature:()
~FilesystemManager	./FilesystemManager.cpp	/^FilesystemManager::~FilesystemManager()$/;"	f	class:FilesystemManager	signature:()
~FilesystemManager	./FilesystemManager.h	/^	virtual ~FilesystemManager();$/;"	p	class:FilesystemManager	access:public	signature:()
~MDProfile	./RAIDManager.h	/^	~MDProfile()$/;"	f	struct:MDProfile	access:public	signature:()
~RAIDDiskInfo	./RAIDManager.h	/^	~RAIDDiskInfo() {}$/;"	f	struct:RAIDDiskInfo	access:public	signature:()
~RAIDInfo	./RAIDManager.h	/^	~RAIDInfo() {$/;"	f	struct:RAIDInfo	access:public	signature:()
~RAIDManager	./RAIDManager.cpp	/^RAIDManager::~RAIDManager()$/;"	f	class:RAIDManager	signature:()
~RAIDManager	./RAIDManager.h	/^	~RAIDManager();$/;"	p	class:RAIDManager	access:public	signature:()
